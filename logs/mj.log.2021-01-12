INFO  11:04:19,074 - Obrada ulaznog fajla test\program.mj
INFO  11:04:19,094 - #2 program
INFO  11:04:19,094 - #49 test301
INFO  11:04:19,094 - #12 const
INFO  11:04:19,094 - #49 int
INFO  11:04:19,094 - #49 nula
INFO  11:04:19,095 - #46 =
INFO  11:04:19,095 - #47 0
INFO  11:04:19,095 - #5 ;
INFO  11:04:19,095 - #12 const
INFO  11:04:19,095 - #49 char
INFO  11:04:19,095 - #49 pet
INFO  11:04:19,095 - #46 =
INFO  11:04:19,095 - #48 5
INFO  11:04:19,096 - #5 ;
INFO  11:04:19,096 - #49 int
INFO  11:04:19,096 - #49 x
INFO  11:04:19,096 - #5 ;
INFO  11:04:19,096 - #49 int
INFO  11:04:19,096 - #49 n
INFO  11:04:19,096 - #11 [
INFO  11:04:19,096 - #10 ]
INFO  11:04:19,096 - #5 ;
INFO  11:04:19,096 - #49 bool
INFO  11:04:19,096 - #49 kek
INFO  11:04:19,097 - #5 ;
INFO  11:04:19,097 - #3 {
INFO  11:04:19,097 - #25 void
INFO  11:04:19,097 - #49 main
INFO  11:04:19,097 - #6 (
INFO  11:04:19,097 - #7 )
INFO  11:04:19,097 - #49 char
INFO  11:04:19,097 - #49 m
INFO  11:04:19,097 - #5 ;
INFO  11:04:19,097 - #3 {
INFO  11:04:19,098 - #49 x
INFO  11:04:19,098 - #46 =
INFO  11:04:19,098 - #49 ord
INFO  11:04:19,098 - #6 (
INFO  11:04:19,098 - #48 5
INFO  11:04:19,098 - #7 )
INFO  11:04:19,100 - #5 ;
INFO  11:04:19,100 - #9 print
INFO  11:04:19,100 - #6 (
INFO  11:04:19,100 - #49 x
INFO  11:04:19,100 - #7 )
INFO  11:04:19,100 - #5 ;
INFO  11:04:19,100 - #4 }
INFO  11:04:19,100 - #4 }
INFO  11:04:19,101 - =====================SINTAKSNO_STABLO=========================
INFO  11:04:19,101 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationListNo(
            ) [DeclarationListNo]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstDeclPart(
                 nula
                  NumConst(
                   0
                  ) [NumConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartConst(
            ConstDeclaration(
              Type(
               char
              ) [Type]
              ConstDeclPart(
               pet
                CharConst(
                 5
                ) [CharConst]
              ) [ConstDeclPart]
              ConstTypeNo(
              ) [ConstTypeNo]
            ) [ConstDeclaration]
          ) [DeclPartConst]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarDeclPartStd(
             x
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsNo(
        ) [VarDeclarationsNo]
        VarDeclaration(
          Type(
           char
          ) [Type]
          VarDeclPartStd(
           m
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               x
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorFunctionCallPars(
                      DesignatorStd(
                       ord
                      ) [DesignatorStd]
                      ActPars(
                        Expression(
                          Expression1(
                            Term(
                              FactorCharconst(
                               5
                              ) [FactorCharconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                        NoExprList(
                        ) [NoExprList]
                      ) [ActPars]
                    ) [FactorFunctionCallPars]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:04:19,105 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:04:19,105 - Deklarisana konstanta nula na liniji 5
INFO  11:04:19,105 - Deklarisana konstanta pet na liniji 6
INFO  11:04:19,105 - Deklarisana promenljiva x na liniji 7
INFO  11:04:19,105 - Deklarisan niz n na liniji 8
INFO  11:04:19,105 - Deklarisana promenljiva kek na liniji 9
INFO  11:04:19,105 - Obrada metode main bez povratne vrednosti na liniji 11
INFO  11:04:19,105 - Deklarisana promenljiva m na liniji 12
INFO  11:04:19,105 - Poziva se fja ord
INFO  11:04:19,105 - Zavrsetak obrade metode (funkcije) main na liniji 11
INFO  11:04:19,105 - Kraj semanticke obrade programa test301
INFO  11:04:19,106 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:04:19,106 - ======================GENERISANJE_KODA========================
INFO  11:04:19,107 - INLINE ordna adresi0!
INFO  11:04:19,108 - Generisanje koda uspesno zavrseno!
INFO  11:04:19,108 - Generisanje izlaznog fajla test\program.obj
INFO  11:04:19,108 - ==============================================================
INFO  11:13:18,564 - Obrada ulaznog fajla test\program.mj
INFO  11:13:18,582 - #2 program
INFO  11:13:18,582 - #49 test301
INFO  11:13:18,582 - #12 const
INFO  11:13:18,583 - #49 int
INFO  11:13:18,583 - #49 nula
INFO  11:13:18,583 - #46 =
INFO  11:13:18,583 - #47 0
INFO  11:13:18,583 - #5 ;
INFO  11:13:18,584 - #12 const
INFO  11:13:18,584 - #49 char
INFO  11:13:18,584 - #49 pet
INFO  11:13:18,584 - #46 =
INFO  11:13:18,584 - #48 5
INFO  11:13:18,584 - #5 ;
INFO  11:13:18,584 - #49 int
INFO  11:13:18,584 - #49 x
INFO  11:13:18,584 - #5 ;
INFO  11:13:18,584 - #49 int
INFO  11:13:18,585 - #49 n
INFO  11:13:18,585 - #11 [
INFO  11:13:18,585 - #10 ]
INFO  11:13:18,585 - #5 ;
INFO  11:13:18,585 - #49 bool
INFO  11:13:18,585 - #49 kek
INFO  11:13:18,585 - #5 ;
INFO  11:13:18,585 - #3 {
INFO  11:13:18,585 - #25 void
INFO  11:13:18,585 - #49 main
INFO  11:13:18,585 - #6 (
INFO  11:13:18,585 - #7 )
INFO  11:13:18,585 - #49 char
INFO  11:13:18,586 - #49 m
INFO  11:13:18,586 - #5 ;
INFO  11:13:18,586 - #49 bool
INFO  11:13:18,586 - #49 t
INFO  11:13:18,586 - #5 ;
INFO  11:13:18,586 - #3 {
INFO  11:13:18,586 - #40 read
INFO  11:13:18,586 - #6 (
INFO  11:13:18,586 - #49 t
INFO  11:13:18,586 - #7 )
INFO  11:13:18,586 - #5 ;
INFO  11:13:18,587 - #9 print
INFO  11:13:18,587 - #6 (
INFO  11:13:18,587 - #49 t
INFO  11:13:18,587 - #7 )
INFO  11:13:18,588 - #5 ;
INFO  11:13:18,588 - #4 }
INFO  11:13:18,588 - #4 }
INFO  11:13:18,588 - =====================SINTAKSNO_STABLO=========================
INFO  11:13:18,589 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationListNo(
            ) [DeclarationListNo]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstDeclPart(
                 nula
                  NumConst(
                   0
                  ) [NumConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartConst(
            ConstDeclaration(
              Type(
               char
              ) [Type]
              ConstDeclPart(
               pet
                CharConst(
                 5
                ) [CharConst]
              ) [ConstDeclPart]
              ConstTypeNo(
              ) [ConstTypeNo]
            ) [ConstDeclaration]
          ) [DeclPartConst]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarDeclPartStd(
             x
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          Read(
            DesignatorStd(
             t
            ) [DesignatorStd]
          ) [Read]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   t
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:13:18,592 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:13:18,593 - Deklarisana konstanta nula na liniji 5
INFO  11:13:18,593 - Deklarisana konstanta pet na liniji 6
INFO  11:13:18,593 - Deklarisana promenljiva x na liniji 7
INFO  11:13:18,593 - Deklarisan niz n na liniji 8
INFO  11:13:18,593 - Deklarisana promenljiva kek na liniji 9
INFO  11:13:18,593 - Obrada metode main bez povratne vrednosti na liniji 11
INFO  11:13:18,593 - Deklarisana promenljiva m na liniji 12
INFO  11:13:18,593 - Deklarisana promenljiva t na liniji 13
INFO  11:13:18,593 - Zavrsetak obrade metode (funkcije) main na liniji 11
INFO  11:13:18,593 - Kraj semanticke obrade programa test301
INFO  11:13:18,593 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:13:18,593 - ======================GENERISANJE_KODA========================
INFO  11:13:18,595 - Generisanje koda uspesno zavrseno!
INFO  11:13:18,596 - Generisanje izlaznog fajla test\program.obj
INFO  11:13:18,596 - ==============================================================
INFO  11:22:37,086 - Obrada ulaznog fajla test\program.mj
INFO  11:22:37,103 - #2 program
INFO  11:22:37,103 - #49 test301
INFO  11:22:37,103 - #12 const
INFO  11:22:37,104 - #49 int
INFO  11:22:37,104 - #49 nula
INFO  11:22:37,104 - #46 =
INFO  11:22:37,104 - #47 0
INFO  11:22:37,104 - #5 ;
INFO  11:22:37,105 - #12 const
INFO  11:22:37,105 - #49 char
INFO  11:22:37,105 - #49 pet
INFO  11:22:37,105 - #46 =
INFO  11:22:37,105 - #48 5
INFO  11:22:37,105 - #5 ;
INFO  11:22:37,105 - #49 int
INFO  11:22:37,105 - #49 x
INFO  11:22:37,105 - #5 ;
INFO  11:22:37,105 - #49 char
INFO  11:22:37,105 - #49 y
INFO  11:22:37,105 - #5 ;
INFO  11:22:37,106 - #49 int
INFO  11:22:37,106 - #49 n
INFO  11:22:37,106 - #11 [
INFO  11:22:37,106 - #10 ]
INFO  11:22:37,106 - #5 ;
INFO  11:22:37,106 - #49 bool
INFO  11:22:37,106 - #49 kek
INFO  11:22:37,106 - #5 ;
INFO  11:22:37,106 - #3 {
INFO  11:22:37,106 - #25 void
INFO  11:22:37,106 - #49 main
INFO  11:22:37,106 - #6 (
INFO  11:22:37,106 - #7 )
INFO  11:22:37,106 - #49 char
INFO  11:22:37,107 - #49 m
INFO  11:22:37,107 - #5 ;
INFO  11:22:37,107 - #49 bool
INFO  11:22:37,107 - #49 t
INFO  11:22:37,107 - #5 ;
INFO  11:22:37,107 - #3 {
INFO  11:22:37,107 - #49 y
INFO  11:22:37,107 - #46 =
INFO  11:22:37,107 - #49 chr
INFO  11:22:37,108 - #6 (
INFO  11:22:37,108 - #47 97
INFO  11:22:37,108 - #7 )
INFO  11:22:37,109 - #5 ;
INFO  11:22:37,109 - #49 x
INFO  11:22:37,109 - #46 =
INFO  11:22:37,109 - #49 ord
INFO  11:22:37,109 - #6 (
INFO  11:22:37,109 - #48 5
INFO  11:22:37,109 - #7 )
INFO  11:22:37,110 - #5 ;
INFO  11:22:37,110 - #9 print
INFO  11:22:37,110 - #6 (
INFO  11:22:37,110 - #49 t
INFO  11:22:37,110 - #7 )
INFO  11:22:37,110 - #5 ;
INFO  11:22:37,110 - #4 }
INFO  11:22:37,110 - #4 }
INFO  11:22:37,111 - =====================SINTAKSNO_STABLO=========================
INFO  11:22:37,111 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 y
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         chr
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorNumconst(
                                 97
                                ) [FactorNumconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               x
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorFunctionCallPars(
                      DesignatorStd(
                       ord
                      ) [DesignatorStd]
                      ActPars(
                        Expression(
                          Expression1(
                            Term(
                              FactorCharconst(
                               5
                              ) [FactorCharconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                        NoExprList(
                        ) [NoExprList]
                      ) [ActPars]
                    ) [FactorFunctionCallPars]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   t
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:22:37,115 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:22:37,116 - Deklarisana konstanta nula na liniji 5
INFO  11:22:37,116 - Deklarisana konstanta pet na liniji 6
INFO  11:22:37,116 - Deklarisana promenljiva x na liniji 7
INFO  11:22:37,116 - Deklarisana promenljiva y na liniji 8
INFO  11:22:37,116 - Deklarisan niz n na liniji 9
INFO  11:22:37,116 - Deklarisana promenljiva kek na liniji 10
INFO  11:22:37,116 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:22:37,116 - Deklarisana promenljiva m na liniji 13
INFO  11:22:37,116 - Deklarisana promenljiva t na liniji 14
INFO  11:22:37,116 - Poziva se fja chr
INFO  11:22:37,116 - Poziva se fja ord
INFO  11:22:37,116 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:22:37,116 - Kraj semanticke obrade programa test301
INFO  11:22:37,117 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:22:37,117 - ======================GENERISANJE_KODA========================
INFO  11:22:37,118 - INLINE chrna adresi0!
INFO  11:22:37,118 - INLINE ordna adresi0!
INFO  11:22:37,119 - Generisanje koda uspesno zavrseno!
INFO  11:22:37,119 - Generisanje izlaznog fajla test\program.obj
INFO  11:22:37,119 - ==============================================================
INFO  11:23:13,235 - Obrada ulaznog fajla test\program.mj
INFO  11:23:13,253 - #2 program
INFO  11:23:13,253 - #49 test301
INFO  11:23:13,253 - #12 const
INFO  11:23:13,254 - #49 int
INFO  11:23:13,254 - #49 nula
INFO  11:23:13,254 - #46 =
INFO  11:23:13,254 - #47 0
INFO  11:23:13,254 - #5 ;
INFO  11:23:13,255 - #12 const
INFO  11:23:13,255 - #49 char
INFO  11:23:13,255 - #49 pet
INFO  11:23:13,255 - #46 =
INFO  11:23:13,255 - #48 5
INFO  11:23:13,255 - #5 ;
INFO  11:23:13,255 - #49 int
INFO  11:23:13,255 - #49 x
INFO  11:23:13,255 - #5 ;
INFO  11:23:13,255 - #49 char
INFO  11:23:13,255 - #49 y
INFO  11:23:13,256 - #5 ;
INFO  11:23:13,256 - #49 int
INFO  11:23:13,256 - #49 n
INFO  11:23:13,256 - #11 [
INFO  11:23:13,256 - #10 ]
INFO  11:23:13,256 - #5 ;
INFO  11:23:13,256 - #49 bool
INFO  11:23:13,256 - #49 kek
INFO  11:23:13,256 - #5 ;
INFO  11:23:13,256 - #3 {
INFO  11:23:13,256 - #25 void
INFO  11:23:13,256 - #49 main
INFO  11:23:13,256 - #6 (
INFO  11:23:13,256 - #7 )
INFO  11:23:13,256 - #49 char
INFO  11:23:13,257 - #49 m
INFO  11:23:13,257 - #5 ;
INFO  11:23:13,257 - #49 bool
INFO  11:23:13,257 - #49 t
INFO  11:23:13,257 - #5 ;
INFO  11:23:13,257 - #3 {
INFO  11:23:13,257 - #49 y
INFO  11:23:13,257 - #46 =
INFO  11:23:13,257 - #49 chr
INFO  11:23:13,258 - #6 (
INFO  11:23:13,258 - #47 97
INFO  11:23:13,258 - #7 )
INFO  11:23:13,259 - #5 ;
INFO  11:23:13,259 - #49 x
INFO  11:23:13,259 - #46 =
INFO  11:23:13,259 - #49 ord
INFO  11:23:13,259 - #6 (
INFO  11:23:13,259 - #48 5
INFO  11:23:13,260 - #7 )
INFO  11:23:13,260 - #5 ;
INFO  11:23:13,260 - #9 print
INFO  11:23:13,260 - #6 (
INFO  11:23:13,260 - #49 y
INFO  11:23:13,260 - #7 )
INFO  11:23:13,260 - #5 ;
INFO  11:23:13,260 - #9 print
INFO  11:23:13,260 - #6 (
INFO  11:23:13,260 - #49 x
INFO  11:23:13,260 - #7 )
INFO  11:23:13,260 - #5 ;
INFO  11:23:13,260 - #4 }
INFO  11:23:13,260 - #4 }
INFO  11:23:13,261 - =====================SINTAKSNO_STABLO=========================
INFO  11:23:13,261 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   97
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 5
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:23:13,265 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:23:13,265 - Deklarisana konstanta nula na liniji 5
INFO  11:23:13,266 - Deklarisana konstanta pet na liniji 6
INFO  11:23:13,266 - Deklarisana promenljiva x na liniji 7
INFO  11:23:13,266 - Deklarisana promenljiva y na liniji 8
INFO  11:23:13,266 - Deklarisan niz n na liniji 9
INFO  11:23:13,266 - Deklarisana promenljiva kek na liniji 10
INFO  11:23:13,266 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:23:13,266 - Deklarisana promenljiva m na liniji 13
INFO  11:23:13,266 - Deklarisana promenljiva t na liniji 14
INFO  11:23:13,266 - Poziva se fja chr
INFO  11:23:13,266 - Poziva se fja ord
INFO  11:23:13,266 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:23:13,266 - Kraj semanticke obrade programa test301
INFO  11:23:13,266 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:23:13,266 - ======================GENERISANJE_KODA========================
INFO  11:23:13,268 - INLINE chrna adresi0!
INFO  11:23:13,268 - INLINE ordna adresi0!
INFO  11:23:13,268 - Generisanje koda uspesno zavrseno!
INFO  11:23:13,268 - Generisanje izlaznog fajla test\program.obj
INFO  11:23:13,269 - ==============================================================
INFO  11:25:06,230 - Obrada ulaznog fajla test\program.mj
INFO  11:25:06,248 - #2 program
INFO  11:25:06,248 - #49 test301
INFO  11:25:06,248 - #12 const
INFO  11:25:06,248 - #49 int
INFO  11:25:06,248 - #49 nula
INFO  11:25:06,249 - #46 =
INFO  11:25:06,249 - #47 0
INFO  11:25:06,249 - #5 ;
INFO  11:25:06,249 - #12 const
INFO  11:25:06,249 - #49 char
INFO  11:25:06,249 - #49 pet
INFO  11:25:06,250 - #46 =
INFO  11:25:06,250 - #48 5
INFO  11:25:06,250 - #5 ;
INFO  11:25:06,250 - #49 int
INFO  11:25:06,250 - #49 x
INFO  11:25:06,250 - #5 ;
INFO  11:25:06,250 - #49 char
INFO  11:25:06,250 - #49 y
INFO  11:25:06,250 - #5 ;
INFO  11:25:06,250 - #49 int
INFO  11:25:06,250 - #49 n
INFO  11:25:06,250 - #11 [
INFO  11:25:06,250 - #10 ]
INFO  11:25:06,250 - #5 ;
INFO  11:25:06,250 - #49 bool
INFO  11:25:06,251 - #49 kek
INFO  11:25:06,251 - #5 ;
INFO  11:25:06,251 - #3 {
INFO  11:25:06,251 - #25 void
INFO  11:25:06,251 - #49 main
INFO  11:25:06,251 - #6 (
INFO  11:25:06,251 - #7 )
INFO  11:25:06,251 - #49 char
INFO  11:25:06,251 - #49 m
INFO  11:25:06,251 - #5 ;
INFO  11:25:06,251 - #49 bool
INFO  11:25:06,251 - #49 t
INFO  11:25:06,252 - #5 ;
INFO  11:25:06,252 - #3 {
INFO  11:25:06,252 - #49 y
INFO  11:25:06,252 - #46 =
INFO  11:25:06,252 - #49 chr
INFO  11:25:06,252 - #6 (
INFO  11:25:06,252 - #47 97
INFO  11:25:06,252 - #7 )
INFO  11:25:06,254 - #5 ;
INFO  11:25:06,254 - #49 x
INFO  11:25:06,254 - #46 =
INFO  11:25:06,254 - #49 ord
INFO  11:25:06,254 - #6 (
INFO  11:25:06,254 - #48 5
INFO  11:25:06,254 - #7 )
INFO  11:25:06,254 - #5 ;
INFO  11:25:06,254 - #9 print
INFO  11:25:06,254 - #6 (
INFO  11:25:06,254 - #49 y
INFO  11:25:06,254 - #7 )
INFO  11:25:06,254 - #5 ;
INFO  11:25:06,254 - #9 print
INFO  11:25:06,255 - #6 (
INFO  11:25:06,255 - #49 x
INFO  11:25:06,255 - #7 )
INFO  11:25:06,255 - #5 ;
INFO  11:25:06,255 - #4 }
INFO  11:25:06,255 - #4 }
INFO  11:25:06,255 - =====================SINTAKSNO_STABLO=========================
INFO  11:25:06,256 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   97
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 5
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:25:06,260 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:25:06,260 - Deklarisana konstanta nula na liniji 5
INFO  11:25:06,260 - Deklarisana konstanta pet na liniji 6
INFO  11:25:06,260 - Deklarisana promenljiva x na liniji 7
INFO  11:25:06,260 - Deklarisana promenljiva y na liniji 8
INFO  11:25:06,260 - Deklarisan niz n na liniji 9
INFO  11:25:06,260 - Deklarisana promenljiva kek na liniji 10
INFO  11:25:06,260 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:25:06,260 - Deklarisana promenljiva m na liniji 13
INFO  11:25:06,260 - Deklarisana promenljiva t na liniji 14
INFO  11:25:06,260 - Poziva se fja chr
INFO  11:25:06,260 - Poziva se fja ord
INFO  11:25:06,260 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:25:06,260 - Kraj semanticke obrade programa test301
INFO  11:25:06,261 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:25:06,261 - ======================GENERISANJE_KODA========================
INFO  11:25:06,262 - INLINE chrna adresi0!
INFO  11:25:06,262 - INLINE ordna adresi0!
INFO  11:25:06,263 - Generisanje koda uspesno zavrseno!
INFO  11:25:06,263 - Generisanje izlaznog fajla test\program.obj
INFO  11:25:06,263 - ==============================================================
INFO  11:28:05,151 - Obrada ulaznog fajla test\program.mj
INFO  11:28:05,168 - #2 program
INFO  11:28:05,168 - #49 test301
INFO  11:28:05,168 - #12 const
INFO  11:28:05,169 - #49 int
INFO  11:28:05,169 - #49 nula
INFO  11:28:05,169 - #46 =
INFO  11:28:05,169 - #47 0
INFO  11:28:05,169 - #5 ;
INFO  11:28:05,170 - #12 const
INFO  11:28:05,170 - #49 char
INFO  11:28:05,170 - #49 pet
INFO  11:28:05,170 - #46 =
INFO  11:28:05,170 - #48 5
INFO  11:28:05,170 - #5 ;
INFO  11:28:05,170 - #49 int
INFO  11:28:05,170 - #49 x
INFO  11:28:05,170 - #5 ;
INFO  11:28:05,170 - #49 char
INFO  11:28:05,171 - #49 y
INFO  11:28:05,171 - #5 ;
INFO  11:28:05,171 - #49 int
INFO  11:28:05,171 - #49 n
INFO  11:28:05,171 - #11 [
INFO  11:28:05,171 - #10 ]
INFO  11:28:05,171 - #5 ;
INFO  11:28:05,171 - #49 bool
INFO  11:28:05,171 - #49 kek
INFO  11:28:05,171 - #5 ;
INFO  11:28:05,171 - #3 {
INFO  11:28:05,171 - #25 void
INFO  11:28:05,171 - #49 main
INFO  11:28:05,171 - #6 (
INFO  11:28:05,171 - #7 )
INFO  11:28:05,172 - #49 char
INFO  11:28:05,172 - #49 m
INFO  11:28:05,172 - #5 ;
INFO  11:28:05,172 - #49 bool
INFO  11:28:05,172 - #49 t
INFO  11:28:05,172 - #5 ;
INFO  11:28:05,172 - #3 {
INFO  11:28:05,172 - #49 y
INFO  11:28:05,172 - #46 =
INFO  11:28:05,172 - #49 chr
INFO  11:28:05,173 - #6 (
INFO  11:28:05,173 - #47 97
INFO  11:28:05,173 - #7 )
INFO  11:28:05,174 - #5 ;
INFO  11:28:05,174 - #49 x
INFO  11:28:05,175 - #46 =
INFO  11:28:05,175 - #49 ord
INFO  11:28:05,175 - #6 (
INFO  11:28:05,175 - #48 5
INFO  11:28:05,175 - #7 )
INFO  11:28:05,175 - #5 ;
INFO  11:28:05,175 - #9 print
INFO  11:28:05,175 - #6 (
INFO  11:28:05,175 - #49 y
INFO  11:28:05,175 - #7 )
INFO  11:28:05,175 - #5 ;
INFO  11:28:05,175 - #9 print
INFO  11:28:05,175 - #6 (
INFO  11:28:05,175 - #49 x
INFO  11:28:05,175 - #7 )
INFO  11:28:05,175 - #5 ;
INFO  11:28:05,175 - #4 }
INFO  11:28:05,175 - #4 }
INFO  11:28:05,176 - =====================SINTAKSNO_STABLO=========================
INFO  11:28:05,177 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   97
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 5
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:28:05,180 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:28:05,181 - Deklarisana konstanta nula na liniji 5
INFO  11:28:05,181 - Deklarisana konstanta pet na liniji 6
INFO  11:28:05,181 - Deklarisana promenljiva x na liniji 7
INFO  11:28:05,181 - Deklarisana promenljiva y na liniji 8
INFO  11:28:05,181 - Deklarisan niz n na liniji 9
INFO  11:28:05,181 - Deklarisana promenljiva kek na liniji 10
INFO  11:28:05,181 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:28:05,181 - Deklarisana promenljiva m na liniji 13
INFO  11:28:05,181 - Deklarisana promenljiva t na liniji 14
INFO  11:28:05,181 - Poziva se fja chr
INFO  11:28:05,181 - Poziva se fja ord
INFO  11:28:05,181 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:28:05,181 - Kraj semanticke obrade programa test301
INFO  11:28:05,182 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:28:05,182 - ======================GENERISANJE_KODA========================
INFO  11:28:05,183 - INLINE chrna adresi0!
INFO  11:28:05,183 - INLINE ordna adresi0!
INFO  11:28:05,184 - Generisanje koda uspesno zavrseno!
INFO  11:28:05,184 - Generisanje izlaznog fajla test\program.obj
INFO  11:28:05,184 - ==============================================================
INFO  11:29:19,651 - Obrada ulaznog fajla test\program.mj
INFO  11:29:19,668 - #2 program
INFO  11:29:19,668 - #49 test301
INFO  11:29:19,668 - #12 const
INFO  11:29:19,669 - #49 int
INFO  11:29:19,669 - #49 nula
INFO  11:29:19,669 - #46 =
INFO  11:29:19,669 - #47 0
INFO  11:29:19,669 - #5 ;
INFO  11:29:19,670 - #12 const
INFO  11:29:19,670 - #49 char
INFO  11:29:19,670 - #49 pet
INFO  11:29:19,670 - #46 =
INFO  11:29:19,670 - #48 5
INFO  11:29:19,670 - #5 ;
INFO  11:29:19,670 - #49 int
INFO  11:29:19,670 - #49 x
INFO  11:29:19,670 - #5 ;
INFO  11:29:19,670 - #49 char
INFO  11:29:19,671 - #49 y
INFO  11:29:19,671 - #5 ;
INFO  11:29:19,671 - #49 int
INFO  11:29:19,671 - #49 n
INFO  11:29:19,671 - #11 [
INFO  11:29:19,671 - #10 ]
INFO  11:29:19,671 - #5 ;
INFO  11:29:19,671 - #49 bool
INFO  11:29:19,671 - #49 kek
INFO  11:29:19,671 - #5 ;
INFO  11:29:19,671 - #3 {
INFO  11:29:19,671 - #25 void
INFO  11:29:19,671 - #49 main
INFO  11:29:19,671 - #6 (
INFO  11:29:19,671 - #7 )
INFO  11:29:19,672 - #49 char
INFO  11:29:19,672 - #49 m
INFO  11:29:19,672 - #5 ;
INFO  11:29:19,672 - #49 bool
INFO  11:29:19,672 - #49 t
INFO  11:29:19,672 - #5 ;
INFO  11:29:19,672 - #3 {
INFO  11:29:19,672 - #49 y
INFO  11:29:19,672 - #46 =
INFO  11:29:19,672 - #49 chr
INFO  11:29:19,673 - #6 (
INFO  11:29:19,673 - #47 97
INFO  11:29:19,673 - #7 )
INFO  11:29:19,674 - #5 ;
INFO  11:29:19,674 - #49 x
INFO  11:29:19,674 - #46 =
INFO  11:29:19,674 - #49 ord
INFO  11:29:19,674 - #6 (
INFO  11:29:19,675 - #48 5
INFO  11:29:19,675 - #7 )
INFO  11:29:19,675 - #5 ;
INFO  11:29:19,675 - #9 print
INFO  11:29:19,675 - #6 (
INFO  11:29:19,675 - #49 y
INFO  11:29:19,675 - #7 )
INFO  11:29:19,675 - #5 ;
INFO  11:29:19,675 - #9 print
INFO  11:29:19,675 - #6 (
INFO  11:29:19,675 - #49 x
INFO  11:29:19,675 - #7 )
INFO  11:29:19,675 - #5 ;
INFO  11:29:19,675 - #4 }
INFO  11:29:19,675 - #4 }
INFO  11:29:19,676 - =====================SINTAKSNO_STABLO=========================
INFO  11:29:19,676 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   97
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 5
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:29:19,680 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:29:19,681 - Deklarisana konstanta nula na liniji 5
INFO  11:29:19,681 - Deklarisana konstanta pet na liniji 6
INFO  11:29:19,681 - Deklarisana promenljiva x na liniji 7
INFO  11:29:19,681 - Deklarisana promenljiva y na liniji 8
INFO  11:29:19,681 - Deklarisan niz n na liniji 9
INFO  11:29:19,681 - Deklarisana promenljiva kek na liniji 10
INFO  11:29:19,681 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:29:19,681 - Deklarisana promenljiva m na liniji 13
INFO  11:29:19,681 - Deklarisana promenljiva t na liniji 14
INFO  11:29:19,681 - Poziva se fja chr
INFO  11:29:19,681 - Poziva se fja ord
INFO  11:29:19,681 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:29:19,681 - Kraj semanticke obrade programa test301
INFO  11:29:19,681 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:29:19,681 - ======================GENERISANJE_KODA========================
INFO  11:29:19,683 - INLINE chrna adresi0!
INFO  11:29:19,683 - INLINE ordna adresi0!
INFO  11:29:19,683 - Generisanje koda uspesno zavrseno!
INFO  11:29:19,684 - Generisanje izlaznog fajla test\program.obj
INFO  11:29:19,684 - ==============================================================
INFO  11:29:50,686 - Obrada ulaznog fajla test\program.mj
INFO  11:29:50,703 - #2 program
INFO  11:29:50,703 - #49 test301
INFO  11:29:50,703 - #12 const
INFO  11:29:50,704 - #49 int
INFO  11:29:50,704 - #49 nula
INFO  11:29:50,704 - #46 =
INFO  11:29:50,704 - #47 0
INFO  11:29:50,704 - #5 ;
INFO  11:29:50,705 - #12 const
INFO  11:29:50,705 - #49 char
INFO  11:29:50,705 - #49 pet
INFO  11:29:50,705 - #46 =
INFO  11:29:50,705 - #48 5
INFO  11:29:50,705 - #5 ;
INFO  11:29:50,705 - #49 int
INFO  11:29:50,705 - #49 x
INFO  11:29:50,705 - #5 ;
INFO  11:29:50,706 - #49 char
INFO  11:29:50,706 - #49 y
INFO  11:29:50,706 - #5 ;
INFO  11:29:50,706 - #49 int
INFO  11:29:50,706 - #49 n
INFO  11:29:50,706 - #11 [
INFO  11:29:50,706 - #10 ]
INFO  11:29:50,706 - #5 ;
INFO  11:29:50,706 - #49 bool
INFO  11:29:50,706 - #49 kek
INFO  11:29:50,706 - #5 ;
INFO  11:29:50,706 - #3 {
INFO  11:29:50,706 - #25 void
INFO  11:29:50,706 - #49 main
INFO  11:29:50,706 - #6 (
INFO  11:29:50,706 - #7 )
INFO  11:29:50,707 - #49 char
INFO  11:29:50,707 - #49 m
INFO  11:29:50,707 - #5 ;
INFO  11:29:50,707 - #49 bool
INFO  11:29:50,707 - #49 t
INFO  11:29:50,707 - #5 ;
INFO  11:29:50,707 - #3 {
INFO  11:29:50,707 - #49 y
INFO  11:29:50,707 - #46 =
INFO  11:29:50,708 - #49 chr
INFO  11:29:50,708 - #6 (
INFO  11:29:50,708 - #47 65
INFO  11:29:50,708 - #7 )
INFO  11:29:50,709 - #5 ;
INFO  11:29:50,709 - #49 x
INFO  11:29:50,710 - #46 =
INFO  11:29:50,710 - #49 ord
INFO  11:29:50,710 - #6 (
INFO  11:29:50,710 - #48 a
INFO  11:29:50,710 - #7 )
INFO  11:29:50,710 - #5 ;
INFO  11:29:50,710 - #9 print
INFO  11:29:50,710 - #6 (
INFO  11:29:50,710 - #49 y
INFO  11:29:50,710 - #7 )
INFO  11:29:50,710 - #5 ;
INFO  11:29:50,710 - #9 print
INFO  11:29:50,710 - #6 (
INFO  11:29:50,710 - #49 x
INFO  11:29:50,710 - #7 )
INFO  11:29:50,710 - #5 ;
INFO  11:29:50,710 - #4 }
INFO  11:29:50,710 - #4 }
INFO  11:29:50,711 - =====================SINTAKSNO_STABLO=========================
INFO  11:29:50,712 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   65
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:29:50,716 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:29:50,716 - Deklarisana konstanta nula na liniji 5
INFO  11:29:50,716 - Deklarisana konstanta pet na liniji 6
INFO  11:29:50,716 - Deklarisana promenljiva x na liniji 7
INFO  11:29:50,716 - Deklarisana promenljiva y na liniji 8
INFO  11:29:50,716 - Deklarisan niz n na liniji 9
INFO  11:29:50,716 - Deklarisana promenljiva kek na liniji 10
INFO  11:29:50,716 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:29:50,716 - Deklarisana promenljiva m na liniji 13
INFO  11:29:50,716 - Deklarisana promenljiva t na liniji 14
INFO  11:29:50,716 - Poziva se fja chr
INFO  11:29:50,716 - Poziva se fja ord
INFO  11:29:50,717 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:29:50,717 - Kraj semanticke obrade programa test301
INFO  11:29:50,717 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:29:50,717 - ======================GENERISANJE_KODA========================
INFO  11:29:50,718 - INLINE chrna adresi0!
INFO  11:29:50,718 - INLINE ordna adresi0!
INFO  11:29:50,719 - Generisanje koda uspesno zavrseno!
INFO  11:29:50,719 - Generisanje izlaznog fajla test\program.obj
INFO  11:29:50,719 - ==============================================================
INFO  11:37:28,413 - Obrada ulaznog fajla test\program.mj
INFO  11:37:28,430 - #2 program
INFO  11:37:28,430 - #49 test301
INFO  11:37:28,430 - #12 const
INFO  11:37:28,431 - #49 int
INFO  11:37:28,431 - #49 nula
INFO  11:37:28,431 - #46 =
INFO  11:37:28,431 - #47 0
INFO  11:37:28,431 - #5 ;
INFO  11:37:28,432 - #12 const
INFO  11:37:28,432 - #49 char
INFO  11:37:28,432 - #49 pet
INFO  11:37:28,432 - #46 =
INFO  11:37:28,432 - #48 5
INFO  11:37:28,432 - #5 ;
INFO  11:37:28,432 - #49 int
INFO  11:37:28,432 - #49 x
INFO  11:37:28,432 - #5 ;
INFO  11:37:28,432 - #49 char
INFO  11:37:28,433 - #49 y
INFO  11:37:28,433 - #5 ;
INFO  11:37:28,433 - #49 int
INFO  11:37:28,433 - #49 n
INFO  11:37:28,433 - #11 [
INFO  11:37:28,433 - #10 ]
INFO  11:37:28,433 - #5 ;
INFO  11:37:28,433 - #49 bool
INFO  11:37:28,433 - #49 kek
INFO  11:37:28,433 - #5 ;
INFO  11:37:28,433 - #3 {
INFO  11:37:28,433 - #25 void
INFO  11:37:28,433 - #49 main
INFO  11:37:28,433 - #6 (
INFO  11:37:28,433 - #7 )
INFO  11:37:28,434 - #49 char
INFO  11:37:28,434 - #49 m
INFO  11:37:28,434 - #5 ;
INFO  11:37:28,434 - #49 bool
INFO  11:37:28,434 - #49 t
INFO  11:37:28,434 - #5 ;
INFO  11:37:28,434 - #3 {
INFO  11:37:28,434 - #49 y
INFO  11:37:28,434 - #46 =
INFO  11:37:28,434 - #49 chr
INFO  11:37:28,435 - #6 (
INFO  11:37:28,435 - #47 65
INFO  11:37:28,435 - #7 )
INFO  11:37:28,436 - #5 ;
INFO  11:37:28,436 - #49 x
INFO  11:37:28,436 - #46 =
INFO  11:37:28,436 - #49 ord
INFO  11:37:28,436 - #6 (
INFO  11:37:28,436 - #48 a
INFO  11:37:28,436 - #7 )
INFO  11:37:28,437 - #5 ;
INFO  11:37:28,437 - #9 print
INFO  11:37:28,437 - #6 (
INFO  11:37:28,437 - #49 y
INFO  11:37:28,437 - #7 )
INFO  11:37:28,437 - #5 ;
INFO  11:37:28,437 - #9 print
INFO  11:37:28,437 - #6 (
INFO  11:37:28,437 - #49 x
INFO  11:37:28,437 - #7 )
INFO  11:37:28,437 - #5 ;
INFO  11:37:28,437 - #4 }
INFO  11:37:28,437 - #4 }
INFO  11:37:28,438 - =====================SINTAKSNO_STABLO=========================
INFO  11:37:28,438 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   65
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:37:28,442 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:37:28,443 - Deklarisana konstanta nula na liniji 5
INFO  11:37:28,443 - Deklarisana konstanta pet na liniji 6
INFO  11:37:28,443 - Deklarisana promenljiva x na liniji 7
INFO  11:37:28,443 - Deklarisana promenljiva y na liniji 8
INFO  11:37:28,443 - Deklarisan niz n na liniji 9
INFO  11:37:28,443 - Deklarisana promenljiva kek na liniji 10
INFO  11:37:28,443 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:37:28,443 - Deklarisana promenljiva m na liniji 13
INFO  11:37:28,443 - Deklarisana promenljiva t na liniji 14
INFO  11:37:28,443 - Poziva se fja chr
INFO  11:37:28,443 - Poziva se fja ord
INFO  11:37:28,443 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:37:28,443 - Kraj semanticke obrade programa test301
INFO  11:37:28,443 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:37:28,443 - ======================GENERISANJE_KODA========================
INFO  11:37:28,445 - INLINE chrna adresi0!
INFO  11:37:28,445 - INLINE ordna adresi0!
INFO  11:37:28,445 - Generisanje koda uspesno zavrseno!
INFO  11:37:28,446 - Generisanje izlaznog fajla test\program.obj
INFO  11:37:28,446 - ==============================================================
INFO  11:38:32,188 - Obrada ulaznog fajla test\program.mj
INFO  11:38:32,205 - #2 program
INFO  11:38:32,205 - #49 test301
INFO  11:38:32,205 - #12 const
INFO  11:38:32,206 - #49 int
INFO  11:38:32,206 - #49 nula
INFO  11:38:32,206 - #46 =
INFO  11:38:32,206 - #47 0
INFO  11:38:32,206 - #5 ;
INFO  11:38:32,207 - #12 const
INFO  11:38:32,207 - #49 char
INFO  11:38:32,207 - #49 pet
INFO  11:38:32,207 - #46 =
INFO  11:38:32,207 - #48 5
INFO  11:38:32,207 - #5 ;
INFO  11:38:32,207 - #49 int
INFO  11:38:32,207 - #49 x
INFO  11:38:32,207 - #5 ;
INFO  11:38:32,208 - #49 char
INFO  11:38:32,208 - #49 y
INFO  11:38:32,208 - #5 ;
INFO  11:38:32,208 - #49 int
INFO  11:38:32,208 - #49 n
INFO  11:38:32,208 - #11 [
INFO  11:38:32,208 - #10 ]
INFO  11:38:32,208 - #5 ;
INFO  11:38:32,208 - #49 bool
INFO  11:38:32,208 - #49 kek
INFO  11:38:32,208 - #5 ;
INFO  11:38:32,208 - #3 {
INFO  11:38:32,209 - #25 void
INFO  11:38:32,209 - #49 main
INFO  11:38:32,209 - #6 (
INFO  11:38:32,209 - #7 )
INFO  11:38:32,209 - #49 char
INFO  11:38:32,209 - #49 m
INFO  11:38:32,209 - #5 ;
INFO  11:38:32,210 - #49 bool
INFO  11:38:32,210 - #49 t
INFO  11:38:32,210 - #5 ;
INFO  11:38:32,210 - #3 {
INFO  11:38:32,210 - #49 y
INFO  11:38:32,210 - #46 =
INFO  11:38:32,210 - #49 chr
INFO  11:38:32,210 - #6 (
INFO  11:38:32,211 - #47 65
INFO  11:38:32,211 - #7 )
INFO  11:38:32,212 - #5 ;
INFO  11:38:32,212 - #49 x
INFO  11:38:32,212 - #46 =
INFO  11:38:32,212 - #49 ord
INFO  11:38:32,212 - #6 (
INFO  11:38:32,212 - #48 a
INFO  11:38:32,212 - #7 )
INFO  11:38:32,212 - #5 ;
INFO  11:38:32,212 - #9 print
INFO  11:38:32,212 - #6 (
INFO  11:38:32,212 - #49 y
INFO  11:38:32,212 - #7 )
INFO  11:38:32,213 - #5 ;
INFO  11:38:32,213 - #9 print
INFO  11:38:32,213 - #6 (
INFO  11:38:32,213 - #49 x
INFO  11:38:32,213 - #7 )
INFO  11:38:32,213 - #5 ;
INFO  11:38:32,213 - #4 }
INFO  11:38:32,213 - #4 }
INFO  11:38:32,214 - =====================SINTAKSNO_STABLO=========================
INFO  11:38:32,214 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   65
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:38:32,217 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:38:32,218 - Deklarisana konstanta nula na liniji 5
INFO  11:38:32,218 - Deklarisana konstanta pet na liniji 6
INFO  11:38:32,218 - Deklarisana promenljiva x na liniji 7
INFO  11:38:32,218 - Deklarisana promenljiva y na liniji 8
INFO  11:38:32,218 - Deklarisan niz n na liniji 9
INFO  11:38:32,218 - Deklarisana promenljiva kek na liniji 10
INFO  11:38:32,218 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:38:32,218 - Deklarisana promenljiva m na liniji 13
INFO  11:38:32,218 - Deklarisana promenljiva t na liniji 14
INFO  11:38:32,218 - Poziva se fja chr
INFO  11:38:32,218 - Poziva se fja ord
INFO  11:38:32,218 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:38:32,218 - Kraj semanticke obrade programa test301
INFO  11:38:32,218 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:38:32,218 - ======================GENERISANJE_KODA========================
INFO  11:38:32,220 - INLINE chrna adresi0!
INFO  11:38:32,220 - INLINE ordna adresi0!
INFO  11:38:32,220 - Generisanje koda uspesno zavrseno!
INFO  11:38:32,221 - Generisanje izlaznog fajla test\program.obj
INFO  11:38:32,221 - ==============================================================
INFO  11:39:14,944 - Obrada ulaznog fajla test\program.mj
INFO  11:39:14,961 - #2 program
INFO  11:39:14,961 - #49 test301
INFO  11:39:14,962 - #12 const
INFO  11:39:14,962 - #49 int
INFO  11:39:14,962 - #49 nula
INFO  11:39:14,962 - #46 =
INFO  11:39:14,962 - #47 0
INFO  11:39:14,962 - #5 ;
INFO  11:39:14,963 - #12 const
INFO  11:39:14,963 - #49 char
INFO  11:39:14,963 - #49 pet
INFO  11:39:14,963 - #46 =
INFO  11:39:14,963 - #48 5
INFO  11:39:14,963 - #5 ;
INFO  11:39:14,963 - #49 int
INFO  11:39:14,963 - #49 x
INFO  11:39:14,963 - #5 ;
INFO  11:39:14,964 - #49 char
INFO  11:39:14,964 - #49 y
INFO  11:39:14,964 - #5 ;
INFO  11:39:14,964 - #49 int
INFO  11:39:14,964 - #49 n
INFO  11:39:14,964 - #11 [
INFO  11:39:14,964 - #10 ]
INFO  11:39:14,964 - #5 ;
INFO  11:39:14,964 - #49 bool
INFO  11:39:14,964 - #49 kek
INFO  11:39:14,964 - #5 ;
INFO  11:39:14,964 - #3 {
INFO  11:39:14,964 - #25 void
INFO  11:39:14,964 - #49 main
INFO  11:39:14,964 - #6 (
INFO  11:39:14,965 - #7 )
INFO  11:39:14,965 - #49 char
INFO  11:39:14,965 - #49 m
INFO  11:39:14,965 - #5 ;
INFO  11:39:14,965 - #49 bool
INFO  11:39:14,965 - #49 t
INFO  11:39:14,965 - #5 ;
INFO  11:39:14,965 - #3 {
INFO  11:39:14,965 - #49 y
INFO  11:39:14,966 - #46 =
INFO  11:39:14,966 - #49 chr
INFO  11:39:14,966 - #6 (
INFO  11:39:14,966 - #47 65
INFO  11:39:14,966 - #7 )
INFO  11:39:14,967 - #5 ;
INFO  11:39:14,967 - #49 x
INFO  11:39:14,968 - #46 =
INFO  11:39:14,968 - #49 ord
INFO  11:39:14,968 - #6 (
INFO  11:39:14,968 - #48 a
INFO  11:39:14,968 - #7 )
INFO  11:39:14,968 - #5 ;
INFO  11:39:14,968 - #9 print
INFO  11:39:14,968 - #6 (
INFO  11:39:14,968 - #49 y
INFO  11:39:14,968 - #7 )
INFO  11:39:14,968 - #5 ;
INFO  11:39:14,968 - #9 print
INFO  11:39:14,968 - #6 (
INFO  11:39:14,968 - #49 x
INFO  11:39:14,968 - #7 )
INFO  11:39:14,968 - #5 ;
INFO  11:39:14,968 - #4 }
INFO  11:39:14,968 - #4 }
INFO  11:39:14,969 - =====================SINTAKSNO_STABLO=========================
INFO  11:39:14,970 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   65
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:39:14,973 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:39:14,974 - Deklarisana konstanta nula na liniji 5
INFO  11:39:14,974 - Deklarisana konstanta pet na liniji 6
INFO  11:39:14,974 - Deklarisana promenljiva x na liniji 7
INFO  11:39:14,974 - Deklarisana promenljiva y na liniji 8
INFO  11:39:14,974 - Deklarisan niz n na liniji 9
INFO  11:39:14,974 - Deklarisana promenljiva kek na liniji 10
INFO  11:39:14,974 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:39:14,974 - Deklarisana promenljiva m na liniji 13
INFO  11:39:14,974 - Deklarisana promenljiva t na liniji 14
INFO  11:39:14,974 - Poziva se fja chr
INFO  11:39:14,974 - Poziva se fja ord
INFO  11:39:14,974 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:39:14,974 - Kraj semanticke obrade programa test301
INFO  11:39:14,974 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:39:14,974 - ======================GENERISANJE_KODA========================
INFO  11:39:14,976 - INLINE chrna adresi0!
INFO  11:39:14,976 - INLINE ordna adresi0!
INFO  11:39:14,977 - Generisanje koda uspesno zavrseno!
INFO  11:39:14,977 - Generisanje izlaznog fajla test\program.obj
INFO  11:39:14,977 - ==============================================================
INFO  11:40:58,701 - Obrada ulaznog fajla test\program.mj
INFO  11:40:58,719 - #2 program
INFO  11:40:58,719 - #49 test301
INFO  11:40:58,719 - #12 const
INFO  11:40:58,720 - #49 int
INFO  11:40:58,720 - #49 nula
INFO  11:40:58,720 - #46 =
INFO  11:40:58,720 - #47 0
INFO  11:40:58,720 - #5 ;
INFO  11:40:58,721 - #12 const
INFO  11:40:58,721 - #49 char
INFO  11:40:58,721 - #49 pet
INFO  11:40:58,721 - #46 =
INFO  11:40:58,721 - #48 5
INFO  11:40:58,721 - #5 ;
INFO  11:40:58,721 - #49 int
INFO  11:40:58,721 - #49 x
INFO  11:40:58,721 - #5 ;
INFO  11:40:58,721 - #49 char
INFO  11:40:58,721 - #49 y
INFO  11:40:58,722 - #5 ;
INFO  11:40:58,722 - #49 int
INFO  11:40:58,722 - #49 n
INFO  11:40:58,722 - #11 [
INFO  11:40:58,722 - #10 ]
INFO  11:40:58,722 - #5 ;
INFO  11:40:58,722 - #49 bool
INFO  11:40:58,722 - #49 kek
INFO  11:40:58,722 - #5 ;
INFO  11:40:58,722 - #3 {
INFO  11:40:58,722 - #25 void
INFO  11:40:58,722 - #49 main
INFO  11:40:58,722 - #6 (
INFO  11:40:58,722 - #7 )
INFO  11:40:58,722 - #49 char
INFO  11:40:58,723 - #49 m
INFO  11:40:58,723 - #5 ;
INFO  11:40:58,723 - #49 bool
INFO  11:40:58,723 - #49 t
INFO  11:40:58,723 - #5 ;
INFO  11:40:58,723 - #3 {
INFO  11:40:58,723 - #49 y
INFO  11:40:58,723 - #46 =
INFO  11:40:58,723 - #49 chr
INFO  11:40:58,724 - #6 (
INFO  11:40:58,724 - #49 ord
INFO  11:40:58,724 - #6 (
INFO  11:40:58,724 - #48 m
INFO  11:40:58,724 - #7 )
INFO  11:40:58,725 - #7 )
INFO  11:40:58,725 - #5 ;
INFO  11:40:58,725 - #49 x
INFO  11:40:58,725 - #46 =
INFO  11:40:58,725 - #49 ord
INFO  11:40:58,725 - #6 (
INFO  11:40:58,726 - #48 a
INFO  11:40:58,726 - #7 )
INFO  11:40:58,726 - #5 ;
INFO  11:40:58,726 - #9 print
INFO  11:40:58,726 - #6 (
INFO  11:40:58,726 - #49 y
INFO  11:40:58,726 - #7 )
INFO  11:40:58,726 - #5 ;
INFO  11:40:58,726 - #9 print
INFO  11:40:58,726 - #6 (
INFO  11:40:58,726 - #49 x
INFO  11:40:58,726 - #7 )
INFO  11:40:58,726 - #5 ;
INFO  11:40:58,726 - #4 }
INFO  11:40:58,726 - #4 }
INFO  11:40:58,727 - =====================SINTAKSNO_STABLO=========================
INFO  11:40:58,727 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorFunctionCallPars(
                                    DesignatorStd(
                                     ord
                                    ) [DesignatorStd]
                                    ActPars(
                                      Expression(
                                        Expression1(
                                          Term(
                                            FactorCharconst(
                                             m
                                            ) [FactorCharconst]
                                            NoMulopFactorList(
                                            ) [NoMulopFactorList]
                                          ) [Term]
                                          NoAddopTermList(
                                          ) [NoAddopTermList]
                                        ) [Expression1]
                                      ) [Expression]
                                      NoExprList(
                                      ) [NoExprList]
                                    ) [ActPars]
                                  ) [FactorFunctionCallPars]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:40:58,731 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:40:58,732 - Deklarisana konstanta nula na liniji 5
INFO  11:40:58,732 - Deklarisana konstanta pet na liniji 6
INFO  11:40:58,732 - Deklarisana promenljiva x na liniji 7
INFO  11:40:58,732 - Deklarisana promenljiva y na liniji 8
INFO  11:40:58,732 - Deklarisan niz n na liniji 9
INFO  11:40:58,732 - Deklarisana promenljiva kek na liniji 10
INFO  11:40:58,732 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:40:58,732 - Deklarisana promenljiva m na liniji 13
INFO  11:40:58,732 - Deklarisana promenljiva t na liniji 14
INFO  11:40:58,732 - Poziva se fja ord
INFO  11:40:58,732 - Poziva se fja chr
INFO  11:40:58,732 - Poziva se fja ord
INFO  11:40:58,732 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:40:58,732 - Kraj semanticke obrade programa test301
INFO  11:40:58,732 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:40:58,732 - ======================GENERISANJE_KODA========================
INFO  11:40:58,734 - INLINE ordna adresi0!
INFO  11:40:58,734 - INLINE chrna adresi0!
INFO  11:40:58,734 - INLINE ordna adresi0!
INFO  11:40:58,735 - Generisanje koda uspesno zavrseno!
INFO  11:40:58,735 - Generisanje izlaznog fajla test\program.obj
INFO  11:40:58,735 - ==============================================================
INFO  11:42:17,083 - Obrada ulaznog fajla test\program.mj
INFO  11:42:17,100 - #2 program
INFO  11:42:17,100 - #49 test301
INFO  11:42:17,100 - #12 const
INFO  11:42:17,101 - #49 int
INFO  11:42:17,101 - #49 nula
INFO  11:42:17,101 - #46 =
INFO  11:42:17,101 - #47 0
INFO  11:42:17,101 - #5 ;
INFO  11:42:17,102 - #12 const
INFO  11:42:17,102 - #49 char
INFO  11:42:17,102 - #49 pet
INFO  11:42:17,102 - #46 =
INFO  11:42:17,102 - #48 5
INFO  11:42:17,102 - #5 ;
INFO  11:42:17,102 - #49 int
INFO  11:42:17,103 - #49 x
INFO  11:42:17,103 - #5 ;
INFO  11:42:17,103 - #49 char
INFO  11:42:17,103 - #49 y
INFO  11:42:17,103 - #5 ;
INFO  11:42:17,103 - #49 int
INFO  11:42:17,103 - #49 n
INFO  11:42:17,103 - #11 [
INFO  11:42:17,103 - #10 ]
INFO  11:42:17,103 - #5 ;
INFO  11:42:17,103 - #49 bool
INFO  11:42:17,103 - #49 kek
INFO  11:42:17,103 - #5 ;
INFO  11:42:17,103 - #3 {
INFO  11:42:17,103 - #25 void
INFO  11:42:17,104 - #49 main
INFO  11:42:17,104 - #6 (
INFO  11:42:17,104 - #7 )
INFO  11:42:17,104 - #49 char
INFO  11:42:17,104 - #49 m
INFO  11:42:17,104 - #5 ;
INFO  11:42:17,104 - #49 bool
INFO  11:42:17,104 - #49 t
INFO  11:42:17,104 - #5 ;
INFO  11:42:17,104 - #3 {
INFO  11:42:17,104 - #49 y
INFO  11:42:17,105 - #46 =
INFO  11:42:17,105 - #49 chr
INFO  11:42:17,105 - #6 (
INFO  11:42:17,105 - #49 ord
INFO  11:42:17,105 - #6 (
INFO  11:42:17,105 - #49 pet
INFO  11:42:17,105 - #7 )
INFO  11:42:17,107 - #7 )
INFO  11:42:17,107 - #5 ;
INFO  11:42:17,107 - #49 x
INFO  11:42:17,107 - #46 =
INFO  11:42:17,107 - #49 ord
INFO  11:42:17,107 - #6 (
INFO  11:42:17,107 - #48 a
INFO  11:42:17,107 - #7 )
INFO  11:42:17,107 - #5 ;
INFO  11:42:17,107 - #9 print
INFO  11:42:17,107 - #6 (
INFO  11:42:17,107 - #49 y
INFO  11:42:17,107 - #7 )
INFO  11:42:17,107 - #5 ;
INFO  11:42:17,108 - #9 print
INFO  11:42:17,108 - #6 (
INFO  11:42:17,108 - #49 x
INFO  11:42:17,108 - #7 )
INFO  11:42:17,108 - #5 ;
INFO  11:42:17,108 - #4 }
INFO  11:42:17,108 - #4 }
INFO  11:42:17,109 - =====================SINTAKSNO_STABLO=========================
INFO  11:42:17,109 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorFunctionCallPars(
                                    DesignatorStd(
                                     ord
                                    ) [DesignatorStd]
                                    ActPars(
                                      Expression(
                                        Expression1(
                                          Term(
                                            FactorDesigOne(
                                              DesignatorStd(
                                               pet
                                              ) [DesignatorStd]
                                            ) [FactorDesigOne]
                                            NoMulopFactorList(
                                            ) [NoMulopFactorList]
                                          ) [Term]
                                          NoAddopTermList(
                                          ) [NoAddopTermList]
                                        ) [Expression1]
                                      ) [Expression]
                                      NoExprList(
                                      ) [NoExprList]
                                    ) [ActPars]
                                  ) [FactorFunctionCallPars]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:42:17,113 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:42:17,114 - Deklarisana konstanta nula na liniji 5
INFO  11:42:17,114 - Deklarisana konstanta pet na liniji 6
INFO  11:42:17,114 - Deklarisana promenljiva x na liniji 7
INFO  11:42:17,114 - Deklarisana promenljiva y na liniji 8
INFO  11:42:17,114 - Deklarisan niz n na liniji 9
INFO  11:42:17,114 - Deklarisana promenljiva kek na liniji 10
INFO  11:42:17,114 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:42:17,114 - Deklarisana promenljiva m na liniji 13
INFO  11:42:17,114 - Deklarisana promenljiva t na liniji 14
INFO  11:42:17,114 - Poziva se fja ord
INFO  11:42:17,114 - Poziva se fja chr
INFO  11:42:17,114 - Poziva se fja ord
INFO  11:42:17,114 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:42:17,114 - Kraj semanticke obrade programa test301
INFO  11:42:17,114 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:42:17,114 - ======================GENERISANJE_KODA========================
INFO  11:42:17,116 - INLINE ordna adresi0!
INFO  11:42:17,116 - INLINE chrna adresi0!
INFO  11:42:17,116 - INLINE ordna adresi0!
INFO  11:42:17,117 - Generisanje koda uspesno zavrseno!
INFO  11:42:17,117 - Generisanje izlaznog fajla test\program.obj
INFO  11:42:17,117 - ==============================================================
INFO  11:42:47,933 - Obrada ulaznog fajla test\program.mj
INFO  11:42:47,952 - #2 program
INFO  11:42:47,952 - #49 test301
INFO  11:42:47,952 - #12 const
INFO  11:42:47,952 - #49 int
INFO  11:42:47,952 - #49 nula
INFO  11:42:47,953 - #46 =
INFO  11:42:47,953 - #47 0
INFO  11:42:47,953 - #5 ;
INFO  11:42:47,953 - #12 const
INFO  11:42:47,953 - #49 char
INFO  11:42:47,953 - #49 pet
INFO  11:42:47,953 - #46 =
INFO  11:42:47,953 - #48 5
INFO  11:42:47,954 - #5 ;
INFO  11:42:47,954 - #49 int
INFO  11:42:47,954 - #49 x
INFO  11:42:47,954 - #5 ;
INFO  11:42:47,954 - #49 char
INFO  11:42:47,954 - #49 y
INFO  11:42:47,954 - #5 ;
INFO  11:42:47,954 - #49 int
INFO  11:42:47,954 - #49 n
INFO  11:42:47,954 - #11 [
INFO  11:42:47,954 - #10 ]
INFO  11:42:47,954 - #5 ;
INFO  11:42:47,954 - #49 bool
INFO  11:42:47,954 - #49 kek
INFO  11:42:47,955 - #5 ;
INFO  11:42:47,955 - #3 {
INFO  11:42:47,955 - #25 void
INFO  11:42:47,955 - #49 main
INFO  11:42:47,955 - #6 (
INFO  11:42:47,955 - #7 )
INFO  11:42:47,955 - #49 char
INFO  11:42:47,955 - #49 m
INFO  11:42:47,955 - #5 ;
INFO  11:42:47,955 - #49 bool
INFO  11:42:47,955 - #49 t
INFO  11:42:47,956 - #5 ;
INFO  11:42:47,956 - #3 {
INFO  11:42:47,956 - #49 y
INFO  11:42:47,956 - #46 =
INFO  11:42:47,956 - #49 chr
INFO  11:42:47,956 - #6 (
INFO  11:42:47,956 - #49 ord
INFO  11:42:47,956 - #6 (
INFO  11:42:47,957 - #49 pet
INFO  11:42:47,957 - #7 )
INFO  11:42:47,958 - #7 )
INFO  11:42:47,958 - #5 ;
INFO  11:42:47,958 - #49 x
INFO  11:42:47,958 - #46 =
INFO  11:42:47,958 - #49 ord
INFO  11:42:47,958 - #6 (
INFO  11:42:47,958 - #49 nula
INFO  11:42:47,958 - #7 )
INFO  11:42:47,958 - #5 ;
INFO  11:42:47,958 - #9 print
INFO  11:42:47,958 - #6 (
INFO  11:42:47,958 - #49 y
INFO  11:42:47,958 - #7 )
INFO  11:42:47,959 - #5 ;
INFO  11:42:47,959 - #9 print
INFO  11:42:47,959 - #6 (
INFO  11:42:47,959 - #49 x
INFO  11:42:47,959 - #7 )
INFO  11:42:47,959 - #5 ;
INFO  11:42:47,959 - #4 }
INFO  11:42:47,959 - #4 }
INFO  11:42:47,959 - =====================SINTAKSNO_STABLO=========================
INFO  11:42:47,960 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorFunctionCallPars(
                                    DesignatorStd(
                                     ord
                                    ) [DesignatorStd]
                                    ActPars(
                                      Expression(
                                        Expression1(
                                          Term(
                                            FactorDesigOne(
                                              DesignatorStd(
                                               pet
                                              ) [DesignatorStd]
                                            ) [FactorDesigOne]
                                            NoMulopFactorList(
                                            ) [NoMulopFactorList]
                                          ) [Term]
                                          NoAddopTermList(
                                          ) [NoAddopTermList]
                                        ) [Expression1]
                                      ) [Expression]
                                      NoExprList(
                                      ) [NoExprList]
                                    ) [ActPars]
                                  ) [FactorFunctionCallPars]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   nula
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:42:47,964 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:42:47,964 - Deklarisana konstanta nula na liniji 5
INFO  11:42:47,964 - Deklarisana konstanta pet na liniji 6
INFO  11:42:47,965 - Deklarisana promenljiva x na liniji 7
INFO  11:42:47,965 - Deklarisana promenljiva y na liniji 8
INFO  11:42:47,965 - Deklarisan niz n na liniji 9
INFO  11:42:47,965 - Deklarisana promenljiva kek na liniji 10
INFO  11:42:47,965 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:42:47,965 - Deklarisana promenljiva m na liniji 13
INFO  11:42:47,965 - Deklarisana promenljiva t na liniji 14
INFO  11:42:47,965 - Poziva se fja ord
INFO  11:42:47,965 - Poziva se fja chr
INFO  11:42:47,965 - Poziva se fja ord
INFO  11:42:47,965 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:42:47,965 - Kraj semanticke obrade programa test301
INFO  11:42:47,965 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:42:47,965 - ======================GENERISANJE_KODA========================
INFO  11:42:47,967 - INLINE ordna adresi0!
INFO  11:42:47,967 - INLINE chrna adresi0!
INFO  11:42:47,967 - INLINE ordna adresi0!
INFO  11:42:47,967 - Generisanje koda uspesno zavrseno!
INFO  11:42:47,967 - Generisanje izlaznog fajla test\program.obj
INFO  11:42:47,968 - ==============================================================
INFO  11:43:16,743 - Obrada ulaznog fajla test\program.mj
INFO  11:43:16,761 - #2 program
INFO  11:43:16,761 - #49 test301
INFO  11:43:16,761 - #12 const
INFO  11:43:16,761 - #49 int
INFO  11:43:16,761 - #49 nula
INFO  11:43:16,762 - #46 =
INFO  11:43:16,762 - #47 0
INFO  11:43:16,762 - #5 ;
INFO  11:43:16,762 - #12 const
INFO  11:43:16,763 - #49 char
INFO  11:43:16,763 - #49 pet
INFO  11:43:16,763 - #46 =
INFO  11:43:16,763 - #48 5
INFO  11:43:16,763 - #5 ;
INFO  11:43:16,763 - #49 int
INFO  11:43:16,763 - #49 x
INFO  11:43:16,763 - #5 ;
INFO  11:43:16,763 - #49 char
INFO  11:43:16,763 - #49 y
INFO  11:43:16,763 - #5 ;
INFO  11:43:16,763 - #49 int
INFO  11:43:16,763 - #49 n
INFO  11:43:16,764 - #11 [
INFO  11:43:16,764 - #10 ]
INFO  11:43:16,764 - #5 ;
INFO  11:43:16,764 - #49 bool
INFO  11:43:16,764 - #49 kek
INFO  11:43:16,764 - #5 ;
INFO  11:43:16,764 - #3 {
INFO  11:43:16,764 - #25 void
INFO  11:43:16,764 - #49 main
INFO  11:43:16,764 - #6 (
INFO  11:43:16,764 - #7 )
INFO  11:43:16,764 - #49 char
INFO  11:43:16,765 - #49 m
INFO  11:43:16,765 - #5 ;
INFO  11:43:16,765 - #49 bool
INFO  11:43:16,765 - #49 t
INFO  11:43:16,765 - #5 ;
INFO  11:43:16,765 - #3 {
INFO  11:43:16,765 - #49 y
INFO  11:43:16,765 - #46 =
INFO  11:43:16,765 - #49 chr
INFO  11:43:16,766 - #6 (
INFO  11:43:16,766 - #49 ord
INFO  11:43:16,766 - #6 (
INFO  11:43:16,766 - #49 pet
INFO  11:43:16,766 - #7 )
INFO  11:43:16,767 - #7 )
INFO  11:43:16,767 - #5 ;
INFO  11:43:16,767 - #49 x
INFO  11:43:16,768 - #46 =
INFO  11:43:16,768 - #49 ord
INFO  11:43:16,768 - #6 (
INFO  11:43:16,768 - #49 pet
INFO  11:43:16,768 - #7 )
INFO  11:43:16,768 - #5 ;
INFO  11:43:16,768 - #9 print
INFO  11:43:16,768 - #6 (
INFO  11:43:16,768 - #49 y
INFO  11:43:16,768 - #7 )
INFO  11:43:16,768 - #5 ;
INFO  11:43:16,768 - #9 print
INFO  11:43:16,768 - #6 (
INFO  11:43:16,768 - #49 x
INFO  11:43:16,768 - #7 )
INFO  11:43:16,768 - #5 ;
INFO  11:43:16,768 - #4 }
INFO  11:43:16,768 - #4 }
INFO  11:43:16,769 - =====================SINTAKSNO_STABLO=========================
INFO  11:43:16,769 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1(
                                Term(
                                  FactorFunctionCallPars(
                                    DesignatorStd(
                                     ord
                                    ) [DesignatorStd]
                                    ActPars(
                                      Expression(
                                        Expression1(
                                          Term(
                                            FactorDesigOne(
                                              DesignatorStd(
                                               pet
                                              ) [DesignatorStd]
                                            ) [FactorDesigOne]
                                            NoMulopFactorList(
                                            ) [NoMulopFactorList]
                                          ) [Term]
                                          NoAddopTermList(
                                          ) [NoAddopTermList]
                                        ) [Expression1]
                                      ) [Expression]
                                      NoExprList(
                                      ) [NoExprList]
                                    ) [ActPars]
                                  ) [FactorFunctionCallPars]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   pet
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:43:16,773 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:43:16,773 - Deklarisana konstanta nula na liniji 5
INFO  11:43:16,773 - Deklarisana konstanta pet na liniji 6
INFO  11:43:16,773 - Deklarisana promenljiva x na liniji 7
INFO  11:43:16,773 - Deklarisana promenljiva y na liniji 8
INFO  11:43:16,773 - Deklarisan niz n na liniji 9
INFO  11:43:16,773 - Deklarisana promenljiva kek na liniji 10
INFO  11:43:16,774 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:43:16,774 - Deklarisana promenljiva m na liniji 13
INFO  11:43:16,774 - Deklarisana promenljiva t na liniji 14
INFO  11:43:16,774 - Poziva se fja ord
INFO  11:43:16,774 - Poziva se fja chr
INFO  11:43:16,774 - Poziva se fja ord
INFO  11:43:16,774 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:43:16,774 - Kraj semanticke obrade programa test301
INFO  11:43:16,774 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:43:16,774 - ======================GENERISANJE_KODA========================
INFO  11:43:16,776 - INLINE ordna adresi0!
INFO  11:43:16,776 - INLINE chrna adresi0!
INFO  11:43:16,776 - INLINE ordna adresi0!
INFO  11:43:16,776 - Generisanje koda uspesno zavrseno!
INFO  11:43:16,776 - Generisanje izlaznog fajla test\program.obj
INFO  11:43:16,776 - ==============================================================
INFO  11:45:09,893 - Obrada ulaznog fajla test\program.mj
INFO  11:45:09,911 - #2 program
INFO  11:45:09,911 - #49 test301
INFO  11:45:09,911 - #12 const
INFO  11:45:09,911 - #49 int
INFO  11:45:09,911 - #49 nula
INFO  11:45:09,912 - #46 =
INFO  11:45:09,912 - #47 0
INFO  11:45:09,912 - #5 ;
INFO  11:45:09,912 - #12 const
INFO  11:45:09,912 - #49 char
INFO  11:45:09,913 - #49 pet
INFO  11:45:09,913 - #46 =
INFO  11:45:09,913 - #48 5
INFO  11:45:09,913 - #5 ;
INFO  11:45:09,913 - #49 int
INFO  11:45:09,913 - #49 x
INFO  11:45:09,913 - #5 ;
INFO  11:45:09,913 - #49 char
INFO  11:45:09,913 - #49 y
INFO  11:45:09,913 - #5 ;
INFO  11:45:09,913 - #49 int
INFO  11:45:09,913 - #49 n
INFO  11:45:09,913 - #11 [
INFO  11:45:09,913 - #10 ]
INFO  11:45:09,913 - #5 ;
INFO  11:45:09,914 - #49 bool
INFO  11:45:09,914 - #49 kek
INFO  11:45:09,914 - #5 ;
INFO  11:45:09,914 - #3 {
INFO  11:45:09,914 - #25 void
INFO  11:45:09,914 - #49 main
INFO  11:45:09,914 - #6 (
INFO  11:45:09,914 - #7 )
INFO  11:45:09,914 - #49 char
INFO  11:45:09,914 - #49 m
INFO  11:45:09,914 - #5 ;
INFO  11:45:09,914 - #49 bool
INFO  11:45:09,915 - #49 t
INFO  11:45:09,915 - #5 ;
INFO  11:45:09,915 - #3 {
INFO  11:45:09,915 - #49 y
INFO  11:45:09,915 - #46 =
INFO  11:45:09,915 - #49 chr
INFO  11:45:09,915 - #6 (
INFO  11:45:09,915 - #30 -
INFO  11:45:09,916 - #47 25
INFO  11:45:09,916 - #7 )
INFO  11:45:09,917 - #5 ;
INFO  11:45:09,917 - #49 x
INFO  11:45:09,917 - #46 =
INFO  11:45:09,917 - #49 ord
INFO  11:45:09,917 - #6 (
INFO  11:45:09,917 - #49 pet
INFO  11:45:09,917 - #7 )
INFO  11:45:09,917 - #5 ;
INFO  11:45:09,917 - #9 print
INFO  11:45:09,917 - #6 (
INFO  11:45:09,917 - #49 y
INFO  11:45:09,917 - #7 )
INFO  11:45:09,918 - #5 ;
INFO  11:45:09,918 - #9 print
INFO  11:45:09,918 - #6 (
INFO  11:45:09,918 - #49 x
INFO  11:45:09,918 - #7 )
INFO  11:45:09,918 - #5 ;
INFO  11:45:09,918 - #4 }
INFO  11:45:09,918 - #4 }
INFO  11:45:09,918 - =====================SINTAKSNO_STABLO=========================
INFO  11:45:09,919 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          ActPars(
                            Expression(
                              Expression1Minus(
                                Term(
                                  FactorNumconst(
                                   25
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1Minus]
                            ) [Expression]
                            NoExprList(
                            ) [NoExprList]
                          ) [ActPars]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   pet
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:45:09,922 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:45:09,922 - Deklarisana konstanta nula na liniji 5
INFO  11:45:09,922 - Deklarisana konstanta pet na liniji 6
INFO  11:45:09,923 - Deklarisana promenljiva x na liniji 7
INFO  11:45:09,923 - Deklarisana promenljiva y na liniji 8
INFO  11:45:09,923 - Deklarisan niz n na liniji 9
INFO  11:45:09,923 - Deklarisana promenljiva kek na liniji 10
INFO  11:45:09,923 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:45:09,923 - Deklarisana promenljiva m na liniji 13
INFO  11:45:09,923 - Deklarisana promenljiva t na liniji 14
INFO  11:45:09,923 - Poziva se fja chr
INFO  11:45:09,923 - Poziva se fja ord
INFO  11:45:09,923 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:45:09,923 - Kraj semanticke obrade programa test301
INFO  11:45:09,923 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:45:09,923 - ======================GENERISANJE_KODA========================
INFO  11:45:09,925 - INLINE chrna adresi0!
INFO  11:45:09,925 - INLINE ordna adresi0!
INFO  11:45:09,925 - Generisanje koda uspesno zavrseno!
INFO  11:45:09,925 - Generisanje izlaznog fajla test\program.obj
INFO  11:45:09,925 - ==============================================================
INFO  11:45:37,688 - Obrada ulaznog fajla test\program.mj
INFO  11:45:37,707 - #2 program
INFO  11:45:37,707 - #49 test301
INFO  11:45:37,707 - #12 const
INFO  11:45:37,707 - #49 int
INFO  11:45:37,707 - #49 nula
INFO  11:45:37,707 - #46 =
INFO  11:45:37,708 - #47 0
INFO  11:45:37,708 - #5 ;
INFO  11:45:37,708 - #12 const
INFO  11:45:37,708 - #49 char
INFO  11:45:37,708 - #49 pet
INFO  11:45:37,708 - #46 =
INFO  11:45:37,708 - #48 5
INFO  11:45:37,708 - #5 ;
INFO  11:45:37,708 - #49 int
INFO  11:45:37,709 - #49 x
INFO  11:45:37,709 - #5 ;
INFO  11:45:37,709 - #49 char
INFO  11:45:37,709 - #49 y
INFO  11:45:37,709 - #5 ;
INFO  11:45:37,709 - #49 int
INFO  11:45:37,709 - #49 n
INFO  11:45:37,709 - #11 [
INFO  11:45:37,709 - #10 ]
INFO  11:45:37,709 - #5 ;
INFO  11:45:37,709 - #49 bool
INFO  11:45:37,709 - #49 kek
INFO  11:45:37,709 - #5 ;
INFO  11:45:37,709 - #3 {
INFO  11:45:37,710 - #25 void
INFO  11:45:37,710 - #49 main
INFO  11:45:37,710 - #6 (
INFO  11:45:37,710 - #7 )
INFO  11:45:37,710 - #49 char
INFO  11:45:37,710 - #49 m
INFO  11:45:37,710 - #5 ;
INFO  11:45:37,710 - #49 bool
INFO  11:45:37,710 - #49 t
INFO  11:45:37,710 - #5 ;
INFO  11:45:37,710 - #3 {
INFO  11:45:37,711 - #49 y
INFO  11:45:37,711 - #46 =
INFO  11:45:37,711 - #30 -
INFO  11:45:37,711 - #47 5
INFO  11:45:37,711 - #31 +
INFO  11:45:37,712 - #47 27
INFO  11:45:37,712 - #49 x
ERROR 11:45:37,713 - 
Sintaksna greska na liniji 17
INFO  11:45:37,713 - #46 =
INFO  11:45:37,713 - #49 ord
INFO  11:45:37,713 - #6 (
INFO  11:45:37,713 - #49 pet
INFO  11:45:37,713 - #7 )
INFO  11:45:37,713 - #5 ;
INFO  11:45:37,713 - #9 print
INFO  11:45:37,713 - #6 (
INFO  11:45:37,713 - #49 y
ERROR 11:45:37,713 - Izvrsen [Dodela vrednosti] oporavak od greske do ; u liniji 16
INFO  11:45:37,714 - #7 )
INFO  11:45:37,714 - #5 ;
INFO  11:45:37,714 - #9 print
INFO  11:45:37,714 - #6 (
INFO  11:45:37,714 - #49 x
INFO  11:45:37,714 - #7 )
INFO  11:45:37,714 - #5 ;
INFO  11:45:37,714 - #4 }
INFO  11:45:37,714 - #4 }
INFO  11:45:37,715 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  11:45:46,711 - Obrada ulaznog fajla test\program.mj
INFO  11:45:46,728 - #2 program
INFO  11:45:46,728 - #49 test301
INFO  11:45:46,728 - #12 const
INFO  11:45:46,729 - #49 int
INFO  11:45:46,729 - #49 nula
INFO  11:45:46,729 - #46 =
INFO  11:45:46,729 - #47 0
INFO  11:45:46,729 - #5 ;
INFO  11:45:46,730 - #12 const
INFO  11:45:46,730 - #49 char
INFO  11:45:46,730 - #49 pet
INFO  11:45:46,730 - #46 =
INFO  11:45:46,730 - #48 5
INFO  11:45:46,730 - #5 ;
INFO  11:45:46,730 - #49 int
INFO  11:45:46,730 - #49 x
INFO  11:45:46,730 - #5 ;
INFO  11:45:46,730 - #49 char
INFO  11:45:46,730 - #49 y
INFO  11:45:46,730 - #5 ;
INFO  11:45:46,731 - #49 int
INFO  11:45:46,731 - #49 n
INFO  11:45:46,731 - #11 [
INFO  11:45:46,731 - #10 ]
INFO  11:45:46,731 - #5 ;
INFO  11:45:46,731 - #49 bool
INFO  11:45:46,731 - #49 kek
INFO  11:45:46,731 - #5 ;
INFO  11:45:46,731 - #3 {
INFO  11:45:46,731 - #25 void
INFO  11:45:46,731 - #49 main
INFO  11:45:46,731 - #6 (
INFO  11:45:46,731 - #7 )
INFO  11:45:46,732 - #49 char
INFO  11:45:46,732 - #49 m
INFO  11:45:46,732 - #5 ;
INFO  11:45:46,732 - #49 bool
INFO  11:45:46,732 - #49 t
INFO  11:45:46,732 - #5 ;
INFO  11:45:46,732 - #3 {
INFO  11:45:46,732 - #49 y
INFO  11:45:46,732 - #46 =
INFO  11:45:46,733 - #30 -
INFO  11:45:46,733 - #47 5
INFO  11:45:46,733 - #31 +
INFO  11:45:46,734 - #47 27
INFO  11:45:46,734 - #5 ;
INFO  11:45:46,734 - #49 x
INFO  11:45:46,735 - #46 =
INFO  11:45:46,735 - #49 ord
INFO  11:45:46,735 - #6 (
INFO  11:45:46,735 - #49 pet
INFO  11:45:46,735 - #7 )
INFO  11:45:46,735 - #5 ;
INFO  11:45:46,735 - #9 print
INFO  11:45:46,735 - #6 (
INFO  11:45:46,735 - #49 y
INFO  11:45:46,735 - #7 )
INFO  11:45:46,736 - #5 ;
INFO  11:45:46,736 - #9 print
INFO  11:45:46,736 - #6 (
INFO  11:45:46,736 - #49 x
INFO  11:45:46,736 - #7 )
INFO  11:45:46,736 - #5 ;
INFO  11:45:46,736 - #4 }
INFO  11:45:46,736 - #4 }
INFO  11:45:46,737 - =====================SINTAKSNO_STABLO=========================
INFO  11:45:46,737 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1Minus(
                      Term(
                        FactorNumconst(
                         5
                        ) [FactorNumconst]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      AddopTermLista(
                        NoAddopTermList(
                        ) [NoAddopTermList]
                        Addition(
                        ) [Addition]
                        Term(
                          FactorNumconst(
                           27
                          ) [FactorNumconst]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                      ) [AddopTermLista]
                    ) [Expression1Minus]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        ActPars(
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   pet
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                          NoExprList(
                          ) [NoExprList]
                        ) [ActPars]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:45:46,740 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:45:46,741 - Deklarisana konstanta nula na liniji 5
INFO  11:45:46,741 - Deklarisana konstanta pet na liniji 6
INFO  11:45:46,741 - Deklarisana promenljiva x na liniji 7
INFO  11:45:46,741 - Deklarisana promenljiva y na liniji 8
INFO  11:45:46,741 - Deklarisan niz n na liniji 9
INFO  11:45:46,741 - Deklarisana promenljiva kek na liniji 10
INFO  11:45:46,741 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:45:46,741 - Deklarisana promenljiva m na liniji 13
INFO  11:45:46,741 - Deklarisana promenljiva t na liniji 14
ERROR 11:45:46,741 - Greska na liniji 16 : nekompatibilni tipovi u dodeli vrednosti! 
INFO  11:45:46,741 - Poziva se fja ord
INFO  11:45:46,741 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:45:46,741 - Kraj semanticke obrade programa test301
ERROR 11:45:46,742 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  11:46:05,945 - Obrada ulaznog fajla test\program.mj
INFO  11:46:05,963 - #2 program
INFO  11:46:05,963 - #49 test301
INFO  11:46:05,963 - #12 const
INFO  11:46:05,963 - #49 int
INFO  11:46:05,963 - #49 nula
INFO  11:46:05,963 - #46 =
INFO  11:46:05,964 - #47 0
INFO  11:46:05,964 - #5 ;
INFO  11:46:05,964 - #12 const
INFO  11:46:05,964 - #49 char
INFO  11:46:05,964 - #49 pet
INFO  11:46:05,964 - #46 =
INFO  11:46:05,964 - #48 5
INFO  11:46:05,964 - #5 ;
INFO  11:46:05,964 - #49 int
INFO  11:46:05,964 - #49 x
INFO  11:46:05,965 - #5 ;
INFO  11:46:05,965 - #49 char
INFO  11:46:05,965 - #49 y
INFO  11:46:05,965 - #5 ;
INFO  11:46:05,965 - #49 int
INFO  11:46:05,965 - #49 n
INFO  11:46:05,965 - #11 [
INFO  11:46:05,965 - #10 ]
INFO  11:46:05,965 - #5 ;
INFO  11:46:05,965 - #49 bool
INFO  11:46:05,965 - #49 kek
INFO  11:46:05,965 - #5 ;
INFO  11:46:05,965 - #3 {
INFO  11:46:05,965 - #25 void
INFO  11:46:05,966 - #49 main
INFO  11:46:05,966 - #6 (
INFO  11:46:05,966 - #7 )
INFO  11:46:05,966 - #49 char
INFO  11:46:05,966 - #49 m
INFO  11:46:05,966 - #5 ;
INFO  11:46:05,966 - #49 bool
INFO  11:46:05,966 - #49 t
INFO  11:46:05,966 - #5 ;
INFO  11:46:05,966 - #3 {
INFO  11:46:05,966 - #49 x
INFO  11:46:05,967 - #46 =
INFO  11:46:05,967 - #30 -
INFO  11:46:05,967 - #47 5
INFO  11:46:05,967 - #31 +
INFO  11:46:05,968 - #47 27
INFO  11:46:05,968 - #5 ;
INFO  11:46:05,969 - #9 print
INFO  11:46:05,969 - #6 (
INFO  11:46:05,969 - #49 y
INFO  11:46:05,969 - #7 )
INFO  11:46:05,969 - #5 ;
INFO  11:46:05,969 - #9 print
INFO  11:46:05,969 - #6 (
INFO  11:46:05,969 - #49 x
INFO  11:46:05,969 - #7 )
INFO  11:46:05,969 - #5 ;
INFO  11:46:05,969 - #4 }
INFO  11:46:05,969 - #4 }
INFO  11:46:05,970 - =====================SINTAKSNO_STABLO=========================
INFO  11:46:05,970 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1Minus(
                    Term(
                      FactorNumconst(
                       5
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    AddopTermLista(
                      NoAddopTermList(
                      ) [NoAddopTermList]
                      Addition(
                      ) [Addition]
                      Term(
                        FactorNumconst(
                         27
                        ) [FactorNumconst]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                    ) [AddopTermLista]
                  ) [Expression1Minus]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  11:46:05,974 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  11:46:05,974 - Deklarisana konstanta nula na liniji 5
INFO  11:46:05,974 - Deklarisana konstanta pet na liniji 6
INFO  11:46:05,974 - Deklarisana promenljiva x na liniji 7
INFO  11:46:05,974 - Deklarisana promenljiva y na liniji 8
INFO  11:46:05,974 - Deklarisan niz n na liniji 9
INFO  11:46:05,975 - Deklarisana promenljiva kek na liniji 10
INFO  11:46:05,975 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  11:46:05,975 - Deklarisana promenljiva m na liniji 13
INFO  11:46:05,975 - Deklarisana promenljiva t na liniji 14
INFO  11:46:05,975 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  11:46:05,975 - Kraj semanticke obrade programa test301
INFO  11:46:05,975 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  11:46:05,975 - ======================GENERISANJE_KODA========================
INFO  11:46:05,977 - Generisanje koda uspesno zavrseno!
INFO  11:46:05,978 - Generisanje izlaznog fajla test\program.obj
INFO  11:46:05,978 - ==============================================================
INFO  12:19:53,526 - Obrada ulaznog fajla test\program.mj
INFO  12:19:53,551 - #2 program
INFO  12:19:53,551 - #49 test301
INFO  12:19:53,551 - #12 const
INFO  12:19:53,551 - #49 int
INFO  12:19:53,551 - #49 nula
INFO  12:19:53,551 - #46 =
INFO  12:19:53,551 - #47 0
INFO  12:19:53,551 - #5 ;
INFO  12:19:53,552 - #12 const
INFO  12:19:53,552 - #49 char
INFO  12:19:53,552 - #49 pet
INFO  12:19:53,552 - #46 =
INFO  12:19:53,552 - #48 5
INFO  12:19:53,552 - #5 ;
INFO  12:19:53,552 - #49 int
INFO  12:19:53,552 - #49 x
INFO  12:19:53,552 - #5 ;
INFO  12:19:53,553 - #49 char
INFO  12:19:53,553 - #49 y
INFO  12:19:53,553 - #5 ;
INFO  12:19:53,553 - #49 int
INFO  12:19:53,553 - #49 n
INFO  12:19:53,553 - #11 [
INFO  12:19:53,553 - #10 ]
INFO  12:19:53,553 - #5 ;
INFO  12:19:53,553 - #49 bool
INFO  12:19:53,553 - #49 kek
INFO  12:19:53,553 - #5 ;
INFO  12:19:53,553 - #3 {
INFO  12:19:53,553 - #25 void
INFO  12:19:53,553 - #49 main
INFO  12:19:53,553 - #6 (
INFO  12:19:53,553 - #7 )
INFO  12:19:53,554 - #49 char
INFO  12:19:53,554 - #49 m
INFO  12:19:53,554 - #5 ;
INFO  12:19:53,554 - #49 bool
INFO  12:19:53,554 - #49 t
INFO  12:19:53,554 - #5 ;
INFO  12:19:53,554 - #3 {
INFO  12:19:53,554 - #49 x
INFO  12:19:53,554 - #46 =
INFO  12:19:53,555 - #30 -
INFO  12:19:53,555 - #47 5
INFO  12:19:53,555 - #31 +
INFO  12:19:53,556 - #47 27
INFO  12:19:53,556 - #5 ;
INFO  12:19:53,556 - #9 print
INFO  12:19:53,557 - #6 (
INFO  12:19:53,557 - #49 y
INFO  12:19:53,557 - #7 )
INFO  12:19:53,557 - #5 ;
INFO  12:19:53,557 - #9 print
INFO  12:19:53,557 - #6 (
INFO  12:19:53,557 - #49 x
INFO  12:19:53,557 - #7 )
INFO  12:19:53,557 - #5 ;
INFO  12:19:53,557 - #4 }
INFO  12:19:53,557 - #4 }
INFO  12:19:53,558 - =====================SINTAKSNO_STABLO=========================
INFO  12:19:53,558 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1Minus(
                    Term(
                      FactorNumconst(
                       5
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    AddopTermLista(
                      NoAddopTermList(
                      ) [NoAddopTermList]
                      Addition(
                      ) [Addition]
                      Term(
                        FactorNumconst(
                         27
                        ) [FactorNumconst]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                    ) [AddopTermLista]
                  ) [Expression1Minus]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:19:53,562 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:19:53,562 - Deklarisana konstanta nula na liniji 5
INFO  12:19:53,562 - Deklarisana konstanta pet na liniji 6
INFO  12:19:53,562 - Deklarisana promenljiva x na liniji 7
INFO  12:19:53,562 - Deklarisana promenljiva y na liniji 8
INFO  12:19:53,562 - Deklarisan niz n na liniji 9
INFO  12:19:53,563 - Deklarisana promenljiva kek na liniji 10
INFO  12:19:53,563 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  12:19:53,563 - Deklarisana promenljiva m na liniji 13
INFO  12:19:53,563 - Deklarisana promenljiva t na liniji 14
INFO  12:19:53,563 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  12:19:53,563 - Kraj semanticke obrade programa test301
INFO  12:19:53,563 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  12:19:53,563 - ======================GENERISANJE_KODA========================
INFO  12:19:53,565 - Generisanje koda uspesno zavrseno!
INFO  12:19:53,565 - Generisanje izlaznog fajla test\program.obj
INFO  12:19:53,566 - ==============================================================
INFO  12:31:34,051 - Obrada ulaznog fajla test\program.mj
INFO  12:31:34,067 - #2 program
INFO  12:31:34,067 - #49 test301
INFO  12:31:34,067 - #12 const
INFO  12:31:34,068 - #49 int
INFO  12:31:34,068 - #49 nula
INFO  12:31:34,068 - #46 =
INFO  12:31:34,068 - #47 0
INFO  12:31:34,068 - #5 ;
INFO  12:31:34,069 - #12 const
INFO  12:31:34,069 - #49 char
INFO  12:31:34,069 - #49 pet
INFO  12:31:34,069 - #46 =
INFO  12:31:34,069 - #48 5
INFO  12:31:34,069 - #5 ;
INFO  12:31:34,069 - #49 int
INFO  12:31:34,069 - #49 x
INFO  12:31:34,069 - #5 ;
INFO  12:31:34,070 - #49 char
INFO  12:31:34,070 - #49 y
INFO  12:31:34,070 - #5 ;
INFO  12:31:34,070 - #49 int
INFO  12:31:34,070 - #49 n
INFO  12:31:34,070 - #11 [
INFO  12:31:34,070 - #10 ]
INFO  12:31:34,070 - #5 ;
INFO  12:31:34,070 - #49 bool
INFO  12:31:34,070 - #49 kek
INFO  12:31:34,070 - #5 ;
INFO  12:31:34,070 - #3 {
INFO  12:31:34,070 - #25 void
INFO  12:31:34,070 - #49 main
INFO  12:31:34,070 - #6 (
INFO  12:31:34,070 - #7 )
INFO  12:31:34,071 - #49 char
INFO  12:31:34,071 - #49 m
INFO  12:31:34,071 - #5 ;
INFO  12:31:34,071 - #49 bool
INFO  12:31:34,071 - #49 t
INFO  12:31:34,071 - #5 ;
INFO  12:31:34,071 - #3 {
INFO  12:31:34,071 - #49 x
INFO  12:31:34,071 - #46 =
INFO  12:31:34,071 - #49 ord
INFO  12:31:34,072 - #6 (
INFO  12:31:34,072 - #48 a
INFO  12:31:34,072 - #7 )
INFO  12:31:34,073 - #5 ;
INFO  12:31:34,073 - #49 y
INFO  12:31:34,073 - #46 =
INFO  12:31:34,073 - #49 chr
INFO  12:31:34,073 - #6 (
INFO  12:31:34,073 - #47 65
INFO  12:31:34,073 - #7 )
INFO  12:31:34,073 - #5 ;
INFO  12:31:34,073 - #9 print
INFO  12:31:34,073 - #6 (
INFO  12:31:34,073 - #49 y
INFO  12:31:34,073 - #7 )
INFO  12:31:34,074 - #5 ;
INFO  12:31:34,074 - #9 print
INFO  12:31:34,074 - #6 (
INFO  12:31:34,074 - #49 x
INFO  12:31:34,074 - #7 )
INFO  12:31:34,074 - #5 ;
INFO  12:31:34,074 - #4 }
INFO  12:31:34,074 - #4 }
INFO  12:31:34,074 - =====================SINTAKSNO_STABLO=========================
INFO  12:31:34,075 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           ord
                          ) [DesignatorStd]
                          Expression1(
                            Term(
                              FactorCharconst(
                               a
                              ) [FactorCharconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 y
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         chr
                        ) [DesignatorStd]
                        Expression1(
                          Term(
                            FactorNumconst(
                             65
                            ) [FactorNumconst]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:31:34,079 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:31:34,079 - Deklarisana konstanta nula na liniji 5
INFO  12:31:34,080 - Deklarisana konstanta pet na liniji 6
INFO  12:31:34,080 - Deklarisana promenljiva x na liniji 7
INFO  12:31:34,080 - Deklarisana promenljiva y na liniji 8
INFO  12:31:34,080 - Deklarisan niz n na liniji 9
INFO  12:31:34,080 - Deklarisana promenljiva kek na liniji 10
INFO  12:31:34,080 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  12:31:34,080 - Deklarisana promenljiva m na liniji 13
INFO  12:31:34,080 - Deklarisana promenljiva t na liniji 14
INFO  12:33:21,778 - Obrada ulaznog fajla test\program.mj
INFO  12:33:21,794 - #2 program
INFO  12:33:21,794 - #49 test301
INFO  12:33:21,794 - #12 const
INFO  12:33:21,795 - #49 int
INFO  12:33:21,795 - #49 nula
INFO  12:33:21,795 - #46 =
INFO  12:33:21,795 - #47 0
INFO  12:33:21,795 - #5 ;
INFO  12:33:21,795 - #12 const
INFO  12:33:21,796 - #49 char
INFO  12:33:21,796 - #49 pet
INFO  12:33:21,796 - #46 =
INFO  12:33:21,796 - #48 5
INFO  12:33:21,796 - #5 ;
INFO  12:33:21,796 - #49 int
INFO  12:33:21,796 - #49 x
INFO  12:33:21,796 - #5 ;
INFO  12:33:21,796 - #49 char
INFO  12:33:21,796 - #49 y
INFO  12:33:21,796 - #5 ;
INFO  12:33:21,796 - #49 int
INFO  12:33:21,797 - #49 n
INFO  12:33:21,797 - #11 [
INFO  12:33:21,797 - #10 ]
INFO  12:33:21,797 - #5 ;
INFO  12:33:21,797 - #49 bool
INFO  12:33:21,797 - #49 kek
INFO  12:33:21,797 - #5 ;
INFO  12:33:21,797 - #3 {
INFO  12:33:21,797 - #25 void
INFO  12:33:21,797 - #49 main
INFO  12:33:21,797 - #6 (
INFO  12:33:21,797 - #7 )
INFO  12:33:21,797 - #49 char
INFO  12:33:21,798 - #49 m
INFO  12:33:21,798 - #5 ;
INFO  12:33:21,798 - #49 bool
INFO  12:33:21,798 - #49 t
INFO  12:33:21,798 - #5 ;
INFO  12:33:21,798 - #3 {
INFO  12:33:21,798 - #49 x
INFO  12:33:21,798 - #46 =
INFO  12:33:21,798 - #49 ord
INFO  12:33:21,799 - #6 (
INFO  12:33:21,799 - #48 a
INFO  12:33:21,799 - #7 )
INFO  12:33:21,799 - #5 ;
INFO  12:33:21,800 - #49 y
INFO  12:33:21,800 - #46 =
INFO  12:33:21,800 - #49 chr
INFO  12:33:21,800 - #6 (
INFO  12:33:21,800 - #47 65
INFO  12:33:21,800 - #7 )
INFO  12:33:21,800 - #5 ;
INFO  12:33:21,800 - #9 print
INFO  12:33:21,800 - #6 (
INFO  12:33:21,800 - #49 y
INFO  12:33:21,800 - #7 )
INFO  12:33:21,800 - #5 ;
INFO  12:33:21,800 - #9 print
INFO  12:33:21,800 - #6 (
INFO  12:33:21,800 - #49 x
INFO  12:33:21,800 - #7 )
INFO  12:33:21,800 - #5 ;
INFO  12:33:21,800 - #4 }
INFO  12:33:21,800 - #4 }
INFO  12:33:21,801 - =====================SINTAKSNO_STABLO=========================
INFO  12:33:21,802 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           ord
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 y
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         chr
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorNumconst(
                               65
                              ) [FactorNumconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:33:21,805 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:33:21,806 - Deklarisana konstanta nula na liniji 5
INFO  12:33:21,806 - Deklarisana konstanta pet na liniji 6
INFO  12:33:21,806 - Deklarisana promenljiva x na liniji 7
INFO  12:33:21,806 - Deklarisana promenljiva y na liniji 8
INFO  12:33:21,806 - Deklarisan niz n na liniji 9
INFO  12:33:21,806 - Deklarisana promenljiva kek na liniji 10
INFO  12:33:21,806 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  12:33:21,806 - Deklarisana promenljiva m na liniji 13
INFO  12:33:21,806 - Deklarisana promenljiva t na liniji 14
INFO  12:43:21,940 - Obrada ulaznog fajla test\program.mj
INFO  12:43:21,956 - #2 program
INFO  12:43:21,956 - #49 test301
INFO  12:43:21,956 - #12 const
INFO  12:43:21,957 - #49 int
INFO  12:43:21,957 - #49 nula
INFO  12:43:21,957 - #46 =
INFO  12:43:21,957 - #47 0
INFO  12:43:21,957 - #5 ;
INFO  12:43:21,958 - #12 const
INFO  12:43:21,958 - #49 char
INFO  12:43:21,958 - #49 pet
INFO  12:43:21,958 - #46 =
INFO  12:43:21,958 - #48 5
INFO  12:43:21,958 - #5 ;
INFO  12:43:21,958 - #49 int
INFO  12:43:21,958 - #49 x
INFO  12:43:21,958 - #5 ;
INFO  12:43:21,959 - #49 char
INFO  12:43:21,959 - #49 y
INFO  12:43:21,959 - #5 ;
INFO  12:43:21,959 - #49 int
INFO  12:43:21,959 - #49 n
INFO  12:43:21,959 - #11 [
INFO  12:43:21,959 - #10 ]
INFO  12:43:21,959 - #5 ;
INFO  12:43:21,959 - #49 bool
INFO  12:43:21,959 - #49 kek
INFO  12:43:21,959 - #5 ;
INFO  12:43:21,959 - #3 {
INFO  12:43:21,959 - #25 void
INFO  12:43:21,959 - #49 main
INFO  12:43:21,959 - #6 (
INFO  12:43:21,959 - #7 )
INFO  12:43:21,960 - #49 char
INFO  12:43:21,960 - #49 m
INFO  12:43:21,960 - #5 ;
INFO  12:43:21,960 - #49 bool
INFO  12:43:21,960 - #49 t
INFO  12:43:21,960 - #5 ;
INFO  12:43:21,960 - #3 {
INFO  12:43:21,960 - #49 x
INFO  12:43:21,960 - #46 =
INFO  12:43:21,960 - #49 ord
INFO  12:43:21,961 - #6 (
INFO  12:43:21,961 - #48 a
INFO  12:43:21,961 - #7 )
INFO  12:43:21,962 - #5 ;
INFO  12:43:21,962 - #49 y
INFO  12:43:21,962 - #46 =
INFO  12:43:21,962 - #49 chr
INFO  12:43:21,962 - #6 (
INFO  12:43:21,962 - #47 65
INFO  12:43:21,962 - #7 )
INFO  12:43:21,962 - #5 ;
INFO  12:43:21,962 - #9 print
INFO  12:43:21,962 - #6 (
INFO  12:43:21,962 - #49 y
INFO  12:43:21,962 - #7 )
INFO  12:43:21,963 - #5 ;
INFO  12:43:21,963 - #9 print
INFO  12:43:21,963 - #6 (
INFO  12:43:21,963 - #49 x
INFO  12:43:21,963 - #7 )
INFO  12:43:21,963 - #5 ;
INFO  12:43:21,963 - #4 }
INFO  12:43:21,963 - #4 }
INFO  12:43:21,964 - =====================SINTAKSNO_STABLO=========================
INFO  12:43:21,964 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           ord
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorCharconst(
                                 a
                                ) [FactorCharconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 y
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         chr
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorNumconst(
                               65
                              ) [FactorNumconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:43:21,968 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:43:21,968 - Deklarisana konstanta nula na liniji 5
INFO  12:43:21,968 - Deklarisana konstanta pet na liniji 6
INFO  12:43:21,968 - Deklarisana promenljiva x na liniji 7
INFO  12:43:21,968 - Deklarisana promenljiva y na liniji 8
INFO  12:43:21,968 - Deklarisan niz n na liniji 9
INFO  12:43:21,968 - Deklarisana promenljiva kek na liniji 10
INFO  12:43:21,969 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  12:43:21,969 - Deklarisana promenljiva m na liniji 13
INFO  12:43:21,969 - Deklarisana promenljiva t na liniji 14
INFO  12:43:21,969 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  12:43:21,969 - Kraj semanticke obrade programa test301
INFO  12:43:21,969 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  12:43:21,969 - ======================GENERISANJE_KODA========================
INFO  12:43:21,970 - INLINE ordna adresi0!
INFO  12:43:21,970 - INLINE chrna adresi0!
INFO  12:43:21,971 - Generisanje koda uspesno zavrseno!
INFO  12:43:21,971 - Generisanje izlaznog fajla test\program.obj
INFO  12:43:21,971 - ==============================================================
INFO  12:43:38,703 - Obrada ulaznog fajla test\program.mj
INFO  12:43:38,719 - #2 program
INFO  12:43:38,719 - #49 test301
INFO  12:43:38,719 - #12 const
INFO  12:43:38,720 - #49 int
INFO  12:43:38,720 - #49 nula
INFO  12:43:38,720 - #46 =
INFO  12:43:38,720 - #47 0
INFO  12:43:38,720 - #5 ;
INFO  12:43:38,721 - #12 const
INFO  12:43:38,721 - #49 char
INFO  12:43:38,721 - #49 pet
INFO  12:43:38,721 - #46 =
INFO  12:43:38,721 - #48 5
INFO  12:43:38,721 - #5 ;
INFO  12:43:38,721 - #49 int
INFO  12:43:38,721 - #49 x
INFO  12:43:38,721 - #5 ;
INFO  12:43:38,722 - #49 char
INFO  12:43:38,722 - #49 y
INFO  12:43:38,722 - #5 ;
INFO  12:43:38,722 - #49 int
INFO  12:43:38,722 - #49 n
INFO  12:43:38,722 - #11 [
INFO  12:43:38,722 - #10 ]
INFO  12:43:38,722 - #5 ;
INFO  12:43:38,722 - #49 bool
INFO  12:43:38,722 - #49 kek
INFO  12:43:38,722 - #5 ;
INFO  12:43:38,722 - #3 {
INFO  12:43:38,722 - #25 void
INFO  12:43:38,722 - #49 main
INFO  12:43:38,722 - #6 (
INFO  12:43:38,722 - #7 )
INFO  12:43:38,723 - #49 char
INFO  12:43:38,723 - #49 m
INFO  12:43:38,723 - #5 ;
INFO  12:43:38,723 - #49 bool
INFO  12:43:38,723 - #49 t
INFO  12:43:38,723 - #5 ;
INFO  12:43:38,723 - #3 {
INFO  12:43:38,723 - #49 x
INFO  12:43:38,723 - #46 =
INFO  12:43:38,724 - #49 ord
INFO  12:43:38,724 - #6 (
INFO  12:43:38,724 - #47 7
INFO  12:43:38,724 - #7 )
INFO  12:43:38,725 - #5 ;
INFO  12:43:38,725 - #9 print
INFO  12:43:38,725 - #6 (
INFO  12:43:38,725 - #49 y
INFO  12:43:38,725 - #7 )
INFO  12:43:38,725 - #5 ;
INFO  12:43:38,725 - #9 print
INFO  12:43:38,725 - #6 (
INFO  12:43:38,725 - #49 x
INFO  12:43:38,725 - #7 )
INFO  12:43:38,725 - #5 ;
INFO  12:43:38,725 - #4 }
INFO  12:43:38,726 - #4 }
INFO  12:43:38,726 - =====================SINTAKSNO_STABLO=========================
INFO  12:43:38,727 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorNumconst(
                               7
                              ) [FactorNumconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:43:38,730 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:43:38,731 - Deklarisana konstanta nula na liniji 5
INFO  12:43:38,731 - Deklarisana konstanta pet na liniji 6
INFO  12:43:38,731 - Deklarisana promenljiva x na liniji 7
INFO  12:43:38,731 - Deklarisana promenljiva y na liniji 8
INFO  12:43:38,731 - Deklarisan niz n na liniji 9
INFO  12:43:38,731 - Deklarisana promenljiva kek na liniji 10
INFO  12:43:38,731 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  12:43:38,731 - Deklarisana promenljiva m na liniji 13
INFO  12:43:38,731 - Deklarisana promenljiva t na liniji 14
ERROR 12:43:38,731 - Parametar 16 kao inline funkcije mora biti tipa char na liniji 16
INFO  12:43:38,731 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  12:43:38,731 - Kraj semanticke obrade programa test301
ERROR 12:43:38,732 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  12:45:03,018 - Obrada ulaznog fajla test\program.mj
INFO  12:45:03,035 - #2 program
INFO  12:45:03,035 - #49 test301
INFO  12:45:03,035 - #12 const
INFO  12:45:03,036 - #49 int
INFO  12:45:03,036 - #49 nula
INFO  12:45:03,036 - #46 =
INFO  12:45:03,036 - #47 0
INFO  12:45:03,036 - #5 ;
INFO  12:45:03,037 - #12 const
INFO  12:45:03,037 - #49 char
INFO  12:45:03,037 - #49 pet
INFO  12:45:03,037 - #46 =
INFO  12:45:03,037 - #48 5
INFO  12:45:03,037 - #5 ;
INFO  12:45:03,037 - #49 int
INFO  12:45:03,037 - #49 x
INFO  12:45:03,037 - #5 ;
INFO  12:45:03,037 - #49 char
INFO  12:45:03,038 - #49 y
INFO  12:45:03,038 - #5 ;
INFO  12:45:03,038 - #49 int
INFO  12:45:03,038 - #49 n
INFO  12:45:03,038 - #11 [
INFO  12:45:03,038 - #10 ]
INFO  12:45:03,038 - #5 ;
INFO  12:45:03,038 - #49 bool
INFO  12:45:03,038 - #49 kek
INFO  12:45:03,038 - #5 ;
INFO  12:45:03,038 - #3 {
INFO  12:45:03,038 - #25 void
INFO  12:45:03,038 - #49 main
INFO  12:45:03,038 - #6 (
INFO  12:45:03,038 - #7 )
INFO  12:45:03,038 - #49 char
INFO  12:45:03,039 - #49 m
INFO  12:45:03,039 - #5 ;
INFO  12:45:03,039 - #49 bool
INFO  12:45:03,039 - #49 t
INFO  12:45:03,039 - #5 ;
INFO  12:45:03,039 - #3 {
INFO  12:45:03,039 - #49 x
INFO  12:45:03,039 - #46 =
INFO  12:45:03,039 - #49 ord
INFO  12:45:03,040 - #6 (
INFO  12:45:03,040 - #47 7
INFO  12:45:03,040 - #7 )
INFO  12:45:03,041 - #5 ;
INFO  12:45:03,041 - #9 print
INFO  12:45:03,041 - #6 (
INFO  12:45:03,041 - #49 y
INFO  12:45:03,041 - #7 )
INFO  12:45:03,041 - #5 ;
INFO  12:45:03,041 - #9 print
INFO  12:45:03,041 - #6 (
INFO  12:45:03,041 - #49 x
INFO  12:45:03,041 - #7 )
INFO  12:45:03,041 - #5 ;
INFO  12:45:03,041 - #4 }
INFO  12:45:03,041 - #4 }
INFO  12:45:03,042 - =====================SINTAKSNO_STABLO=========================
INFO  12:45:03,043 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 x
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         ord
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorNumconst(
                               7
                              ) [FactorNumconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:45:03,046 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:45:03,047 - Deklarisana konstanta nula na liniji 5
INFO  12:45:03,047 - Deklarisana konstanta pet na liniji 6
INFO  12:45:03,047 - Deklarisana promenljiva x na liniji 7
INFO  12:45:03,047 - Deklarisana promenljiva y na liniji 8
INFO  12:45:03,047 - Deklarisan niz n na liniji 9
INFO  12:45:03,047 - Deklarisana promenljiva kek na liniji 10
INFO  12:45:03,047 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  12:45:03,047 - Deklarisana promenljiva m na liniji 13
INFO  12:45:03,047 - Deklarisana promenljiva t na liniji 14
ERROR 12:45:03,047 - Parametar inline funkcije ord mora biti tipa char na liniji 16
INFO  12:45:03,047 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  12:45:03,047 - Kraj semanticke obrade programa test301
ERROR 12:45:03,048 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  12:45:29,264 - Obrada ulaznog fajla test\program.mj
INFO  12:45:29,280 - #2 program
INFO  12:45:29,280 - #49 test301
INFO  12:45:29,280 - #12 const
INFO  12:45:29,281 - #49 int
INFO  12:45:29,281 - #49 nula
INFO  12:45:29,282 - #46 =
INFO  12:45:29,282 - #47 0
INFO  12:45:29,282 - #5 ;
INFO  12:45:29,282 - #12 const
INFO  12:45:29,282 - #49 char
INFO  12:45:29,282 - #49 pet
INFO  12:45:29,282 - #46 =
INFO  12:45:29,282 - #48 5
INFO  12:45:29,282 - #5 ;
INFO  12:45:29,283 - #49 int
INFO  12:45:29,283 - #49 x
INFO  12:45:29,283 - #5 ;
INFO  12:45:29,283 - #49 char
INFO  12:45:29,283 - #49 y
INFO  12:45:29,283 - #5 ;
INFO  12:45:29,283 - #49 int
INFO  12:45:29,283 - #49 n
INFO  12:45:29,283 - #11 [
INFO  12:45:29,283 - #10 ]
INFO  12:45:29,283 - #5 ;
INFO  12:45:29,283 - #49 bool
INFO  12:45:29,283 - #49 kek
INFO  12:45:29,283 - #5 ;
INFO  12:45:29,283 - #3 {
INFO  12:45:29,284 - #25 void
INFO  12:45:29,284 - #49 main
INFO  12:45:29,284 - #6 (
INFO  12:45:29,284 - #7 )
INFO  12:45:29,284 - #49 char
INFO  12:45:29,284 - #49 m
INFO  12:45:29,284 - #5 ;
INFO  12:45:29,284 - #49 bool
INFO  12:45:29,284 - #49 t
INFO  12:45:29,284 - #5 ;
INFO  12:45:29,284 - #3 {
INFO  12:45:29,284 - #49 n
INFO  12:45:29,285 - #46 =
INFO  12:45:29,285 - #32 new
INFO  12:45:29,285 - #49 int
INFO  12:45:29,285 - #11 [
INFO  12:45:29,285 - #47 66
INFO  12:45:29,285 - #10 ]
INFO  12:45:29,286 - #5 ;
INFO  12:45:29,286 - #49 y
INFO  12:45:29,286 - #46 =
INFO  12:45:29,286 - #49 chr
INFO  12:45:29,286 - #6 (
INFO  12:45:29,287 - #48 a
INFO  12:45:29,287 - #7 )
INFO  12:45:29,287 - #5 ;
INFO  12:45:29,287 - #9 print
INFO  12:45:29,287 - #6 (
INFO  12:45:29,287 - #49 y
INFO  12:45:29,287 - #7 )
INFO  12:45:29,287 - #5 ;
INFO  12:45:29,287 - #9 print
INFO  12:45:29,287 - #6 (
INFO  12:45:29,287 - #49 x
INFO  12:45:29,287 - #7 )
INFO  12:45:29,287 - #5 ;
INFO  12:45:29,287 - #4 }
INFO  12:45:29,287 - #4 }
INFO  12:45:29,288 - =====================SINTAKSNO_STABLO=========================
INFO  12:45:29,288 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               x
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   n
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorNewArr(
                          Type(
                           int
                          ) [Type]
                          Expression(
                            Expression1(
                              Term(
                                FactorNumconst(
                                 66
                                ) [FactorNumconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorNewArr]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 y
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         chr
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorCharconst(
                               a
                              ) [FactorCharconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:45:29,292 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:45:29,293 - Deklarisana konstanta nula na liniji 5
INFO  12:45:29,293 - Deklarisana konstanta pet na liniji 6
INFO  12:45:29,293 - Deklarisana promenljiva x na liniji 7
INFO  12:45:29,293 - Deklarisana promenljiva y na liniji 8
INFO  12:45:29,293 - Deklarisan niz n na liniji 9
INFO  12:45:29,293 - Deklarisana promenljiva kek na liniji 10
INFO  12:45:29,293 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  12:45:29,293 - Deklarisana promenljiva m na liniji 13
INFO  12:45:29,293 - Deklarisana promenljiva t na liniji 14
ERROR 12:45:29,293 - Parametar  inline funkcije chr mora biti tipa int na liniji 18
INFO  12:45:29,293 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  12:45:29,293 - Kraj semanticke obrade programa test301
ERROR 12:45:29,293 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  12:45:52,273 - Obrada ulaznog fajla test\program.mj
INFO  12:45:52,290 - #2 program
INFO  12:45:52,290 - #49 test301
INFO  12:45:52,290 - #12 const
INFO  12:45:52,291 - #49 int
INFO  12:45:52,291 - #49 nula
INFO  12:45:52,291 - #46 =
INFO  12:45:52,291 - #47 0
INFO  12:45:52,291 - #5 ;
INFO  12:45:52,292 - #12 const
INFO  12:45:52,292 - #49 char
INFO  12:45:52,292 - #49 pet
INFO  12:45:52,292 - #46 =
INFO  12:45:52,292 - #48 5
INFO  12:45:52,292 - #5 ;
INFO  12:45:52,292 - #49 int
INFO  12:45:52,292 - #49 x
INFO  12:45:52,292 - #5 ;
INFO  12:45:52,293 - #49 int
INFO  12:45:52,293 - #49 duz
INFO  12:45:52,293 - #5 ;
INFO  12:45:52,293 - #49 char
INFO  12:45:52,293 - #49 y
INFO  12:45:52,293 - #5 ;
INFO  12:45:52,293 - #49 int
INFO  12:45:52,293 - #49 n
INFO  12:45:52,293 - #11 [
INFO  12:45:52,293 - #10 ]
INFO  12:45:52,293 - #5 ;
INFO  12:45:52,293 - #49 bool
INFO  12:45:52,293 - #49 kek
INFO  12:45:52,293 - #5 ;
INFO  12:45:52,293 - #3 {
INFO  12:45:52,293 - #25 void
INFO  12:45:52,293 - #49 main
INFO  12:45:52,293 - #6 (
INFO  12:45:52,293 - #7 )
INFO  12:45:52,294 - #49 char
INFO  12:45:52,294 - #49 m
INFO  12:45:52,294 - #5 ;
INFO  12:45:52,294 - #49 bool
INFO  12:45:52,294 - #49 t
INFO  12:45:52,294 - #5 ;
INFO  12:45:52,294 - #3 {
INFO  12:45:52,294 - #49 n
INFO  12:45:52,294 - #46 =
INFO  12:45:52,295 - #32 new
INFO  12:45:52,295 - #49 int
INFO  12:45:52,295 - #11 [
INFO  12:45:52,295 - #47 66
INFO  12:45:52,295 - #10 ]
INFO  12:45:52,296 - #5 ;
INFO  12:45:52,296 - #49 y
INFO  12:45:52,296 - #46 =
INFO  12:45:52,296 - #49 chr
INFO  12:45:52,296 - #6 (
INFO  12:45:52,296 - #47 77
INFO  12:45:52,296 - #7 )
INFO  12:45:52,296 - #5 ;
INFO  12:45:52,297 - #49 duz
INFO  12:45:52,297 - #46 =
INFO  12:45:52,297 - #49 len
INFO  12:45:52,297 - #6 (
INFO  12:45:52,297 - #49 n
INFO  12:45:52,297 - #7 )
INFO  12:45:52,297 - #5 ;
INFO  12:45:52,297 - #9 print
INFO  12:45:52,297 - #6 (
INFO  12:45:52,297 - #49 y
INFO  12:45:52,297 - #7 )
INFO  12:45:52,297 - #5 ;
INFO  12:45:52,297 - #9 print
INFO  12:45:52,297 - #6 (
INFO  12:45:52,297 - #49 x
INFO  12:45:52,297 - #7 )
INFO  12:45:52,297 - #5 ;
INFO  12:45:52,297 - #4 }
INFO  12:45:52,297 - #4 }
INFO  12:45:52,298 - =====================SINTAKSNO_STABLO=========================
INFO  12:45:52,299 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     n
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorNewArr(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   66
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorNewArr]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorNumconst(
                                 77
                                ) [FactorNumconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 duz
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         len
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorDesigOne(
                                DesignatorStd(
                                 n
                                ) [DesignatorStd]
                              ) [FactorDesigOne]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:45:52,302 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:45:52,302 - Deklarisana konstanta nula na liniji 5
INFO  12:45:52,303 - Deklarisana konstanta pet na liniji 6
INFO  12:45:52,303 - Deklarisana promenljiva x na liniji 7
INFO  12:45:52,303 - Deklarisana promenljiva duz na liniji 8
INFO  12:45:52,303 - Deklarisana promenljiva y na liniji 9
INFO  12:45:52,303 - Deklarisan niz n na liniji 10
INFO  12:45:52,303 - Deklarisana promenljiva kek na liniji 11
INFO  12:45:52,303 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:45:52,303 - Deklarisana promenljiva m na liniji 14
INFO  12:45:52,303 - Deklarisana promenljiva t na liniji 15
ERROR 12:45:52,303 - Parametar inline funkcije len mora biti tipa niz na liniji 20
INFO  12:45:52,303 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:45:52,303 - Kraj semanticke obrade programa test301
ERROR 12:45:52,303 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  12:48:47,475 - Obrada ulaznog fajla test\program.mj
INFO  12:48:47,491 - #2 program
INFO  12:48:47,491 - #49 test301
INFO  12:48:47,491 - #12 const
INFO  12:48:47,492 - #49 int
INFO  12:48:47,492 - #49 nula
INFO  12:48:47,492 - #46 =
INFO  12:48:47,492 - #47 0
INFO  12:48:47,492 - #5 ;
INFO  12:48:47,493 - #12 const
INFO  12:48:47,493 - #49 char
INFO  12:48:47,493 - #49 pet
INFO  12:48:47,493 - #46 =
INFO  12:48:47,493 - #48 5
INFO  12:48:47,493 - #5 ;
INFO  12:48:47,493 - #49 int
INFO  12:48:47,493 - #49 x
INFO  12:48:47,493 - #5 ;
INFO  12:48:47,494 - #49 int
INFO  12:48:47,494 - #49 duz
INFO  12:48:47,494 - #5 ;
INFO  12:48:47,494 - #49 char
INFO  12:48:47,494 - #49 y
INFO  12:48:47,494 - #5 ;
INFO  12:48:47,494 - #49 int
INFO  12:48:47,494 - #49 n
INFO  12:48:47,494 - #11 [
INFO  12:48:47,494 - #10 ]
INFO  12:48:47,494 - #5 ;
INFO  12:48:47,494 - #49 bool
INFO  12:48:47,494 - #49 kek
INFO  12:48:47,494 - #5 ;
INFO  12:48:47,494 - #3 {
INFO  12:48:47,495 - #25 void
INFO  12:48:47,495 - #49 main
INFO  12:48:47,495 - #6 (
INFO  12:48:47,495 - #7 )
INFO  12:48:47,495 - #49 char
INFO  12:48:47,495 - #49 m
INFO  12:48:47,495 - #5 ;
INFO  12:48:47,495 - #49 bool
INFO  12:48:47,495 - #49 t
INFO  12:48:47,495 - #5 ;
INFO  12:48:47,495 - #3 {
INFO  12:48:47,495 - #49 n
INFO  12:48:47,496 - #46 =
INFO  12:48:47,496 - #32 new
INFO  12:48:47,496 - #49 int
INFO  12:48:47,496 - #11 [
INFO  12:48:47,496 - #47 66
INFO  12:48:47,496 - #10 ]
INFO  12:48:47,497 - #5 ;
INFO  12:48:47,497 - #49 y
INFO  12:48:47,497 - #46 =
INFO  12:48:47,497 - #49 chr
INFO  12:48:47,497 - #6 (
INFO  12:48:47,497 - #47 77
INFO  12:48:47,497 - #7 )
INFO  12:48:47,498 - #5 ;
INFO  12:48:47,498 - #49 duz
INFO  12:48:47,498 - #46 =
INFO  12:48:47,498 - #49 len
INFO  12:48:47,498 - #6 (
INFO  12:48:47,498 - #49 n
INFO  12:48:47,498 - #7 )
INFO  12:48:47,498 - #5 ;
INFO  12:48:47,498 - #9 print
INFO  12:48:47,498 - #6 (
INFO  12:48:47,498 - #49 y
INFO  12:48:47,498 - #7 )
INFO  12:48:47,498 - #5 ;
INFO  12:48:47,498 - #9 print
INFO  12:48:47,498 - #6 (
INFO  12:48:47,498 - #49 x
INFO  12:48:47,498 - #7 )
INFO  12:48:47,498 - #5 ;
INFO  12:48:47,498 - #4 }
INFO  12:48:47,498 - #4 }
INFO  12:48:47,499 - =====================SINTAKSNO_STABLO=========================
INFO  12:48:47,500 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     n
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorNewArr(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   66
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorNewArr]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorNumconst(
                                 77
                                ) [FactorNumconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 duz
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         len
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorDesigOne(
                                DesignatorStd(
                                 n
                                ) [DesignatorStd]
                              ) [FactorDesigOne]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   x
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:48:47,503 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:48:47,503 - Deklarisana konstanta nula na liniji 5
INFO  12:48:47,503 - Deklarisana konstanta pet na liniji 6
INFO  12:48:47,503 - Deklarisana promenljiva x na liniji 7
INFO  12:48:47,503 - Deklarisana promenljiva duz na liniji 8
INFO  12:48:47,503 - Deklarisana promenljiva y na liniji 9
INFO  12:48:47,503 - Deklarisan niz n na liniji 10
INFO  12:48:47,503 - Deklarisana promenljiva kek na liniji 11
INFO  12:48:47,503 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:48:47,503 - Deklarisana promenljiva m na liniji 14
INFO  12:48:47,503 - Deklarisana promenljiva t na liniji 15
INFO  12:48:47,504 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:48:47,504 - Kraj semanticke obrade programa test301
INFO  12:48:47,504 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  12:48:47,504 - ======================GENERISANJE_KODA========================
INFO  12:48:47,505 - INLINE chrna adresi0!
INFO  12:48:47,506 - Generisanje koda uspesno zavrseno!
INFO  12:48:47,506 - Generisanje izlaznog fajla test\program.obj
INFO  12:48:47,506 - ==============================================================
INFO  12:49:21,929 - Obrada ulaznog fajla test\program.mj
INFO  12:49:21,946 - #2 program
INFO  12:49:21,946 - #49 test301
INFO  12:49:21,946 - #12 const
INFO  12:49:21,947 - #49 int
INFO  12:49:21,947 - #49 nula
INFO  12:49:21,947 - #46 =
INFO  12:49:21,947 - #47 0
INFO  12:49:21,947 - #5 ;
INFO  12:49:21,948 - #12 const
INFO  12:49:21,948 - #49 char
INFO  12:49:21,948 - #49 pet
INFO  12:49:21,948 - #46 =
INFO  12:49:21,948 - #48 5
INFO  12:49:21,948 - #5 ;
INFO  12:49:21,948 - #49 int
INFO  12:49:21,948 - #49 x
INFO  12:49:21,948 - #5 ;
INFO  12:49:21,948 - #49 int
INFO  12:49:21,949 - #49 duz
INFO  12:49:21,949 - #5 ;
INFO  12:49:21,949 - #49 char
INFO  12:49:21,949 - #49 y
INFO  12:49:21,949 - #5 ;
INFO  12:49:21,949 - #49 int
INFO  12:49:21,949 - #49 n
INFO  12:49:21,949 - #11 [
INFO  12:49:21,949 - #10 ]
INFO  12:49:21,949 - #5 ;
INFO  12:49:21,949 - #49 bool
INFO  12:49:21,949 - #49 kek
INFO  12:49:21,949 - #5 ;
INFO  12:49:21,949 - #3 {
INFO  12:49:21,949 - #25 void
INFO  12:49:21,949 - #49 main
INFO  12:49:21,949 - #6 (
INFO  12:49:21,949 - #7 )
INFO  12:49:21,950 - #49 char
INFO  12:49:21,950 - #49 m
INFO  12:49:21,950 - #5 ;
INFO  12:49:21,950 - #49 bool
INFO  12:49:21,950 - #49 t
INFO  12:49:21,950 - #5 ;
INFO  12:49:21,950 - #3 {
INFO  12:49:21,950 - #49 n
INFO  12:49:21,950 - #46 =
INFO  12:49:21,950 - #32 new
INFO  12:49:21,951 - #49 int
INFO  12:49:21,951 - #11 [
INFO  12:49:21,951 - #47 66
INFO  12:49:21,951 - #10 ]
INFO  12:49:21,952 - #5 ;
INFO  12:49:21,952 - #49 y
INFO  12:49:21,952 - #46 =
INFO  12:49:21,952 - #49 chr
INFO  12:49:21,952 - #6 (
INFO  12:49:21,952 - #47 77
INFO  12:49:21,952 - #7 )
INFO  12:49:21,952 - #5 ;
INFO  12:49:21,952 - #49 duz
INFO  12:49:21,952 - #46 =
INFO  12:49:21,952 - #49 len
INFO  12:49:21,952 - #6 (
INFO  12:49:21,953 - #49 n
INFO  12:49:21,953 - #7 )
INFO  12:49:21,953 - #5 ;
INFO  12:49:21,953 - #9 print
INFO  12:49:21,953 - #6 (
INFO  12:49:21,953 - #49 y
INFO  12:49:21,953 - #7 )
INFO  12:49:21,953 - #5 ;
INFO  12:49:21,953 - #9 print
INFO  12:49:21,953 - #6 (
INFO  12:49:21,953 - #49 duz
INFO  12:49:21,953 - #7 )
INFO  12:49:21,953 - #5 ;
INFO  12:49:21,953 - #4 }
INFO  12:49:21,953 - #4 }
INFO  12:49:21,954 - =====================SINTAKSNO_STABLO=========================
INFO  12:49:21,954 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     n
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorNewArr(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   66
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorNewArr]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorNumconst(
                                 77
                                ) [FactorNumconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 duz
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         len
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorDesigOne(
                                DesignatorStd(
                                 n
                                ) [DesignatorStd]
                              ) [FactorDesigOne]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   duz
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:49:21,958 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:49:21,958 - Deklarisana konstanta nula na liniji 5
INFO  12:49:21,958 - Deklarisana konstanta pet na liniji 6
INFO  12:49:21,958 - Deklarisana promenljiva x na liniji 7
INFO  12:49:21,958 - Deklarisana promenljiva duz na liniji 8
INFO  12:49:21,958 - Deklarisana promenljiva y na liniji 9
INFO  12:49:21,958 - Deklarisan niz n na liniji 10
INFO  12:49:21,958 - Deklarisana promenljiva kek na liniji 11
INFO  12:49:21,958 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:49:21,959 - Deklarisana promenljiva m na liniji 14
INFO  12:49:21,959 - Deklarisana promenljiva t na liniji 15
INFO  12:49:21,959 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:49:21,959 - Kraj semanticke obrade programa test301
INFO  12:49:21,959 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  12:49:21,959 - ======================GENERISANJE_KODA========================
INFO  12:49:21,960 - INLINE chrna adresi0!
INFO  12:49:21,961 - Generisanje koda uspesno zavrseno!
INFO  12:49:21,961 - Generisanje izlaznog fajla test\program.obj
INFO  12:49:21,961 - ==============================================================
INFO  12:50:16,888 - Obrada ulaznog fajla test\program.mj
INFO  12:50:16,906 - #2 program
INFO  12:50:16,906 - #49 test301
INFO  12:50:16,906 - #12 const
INFO  12:50:16,906 - #49 int
INFO  12:50:16,906 - #49 nula
INFO  12:50:16,907 - #46 =
INFO  12:50:16,907 - #47 0
INFO  12:50:16,907 - #5 ;
INFO  12:50:16,907 - #12 const
INFO  12:50:16,907 - #49 char
INFO  12:50:16,908 - #49 pet
INFO  12:50:16,908 - #46 =
INFO  12:50:16,908 - #48 5
INFO  12:50:16,908 - #5 ;
INFO  12:50:16,908 - #49 int
INFO  12:50:16,908 - #49 x
INFO  12:50:16,908 - #5 ;
INFO  12:50:16,908 - #49 int
INFO  12:50:16,908 - #49 duz
INFO  12:50:16,908 - #5 ;
INFO  12:50:16,908 - #49 char
INFO  12:50:16,908 - #49 y
INFO  12:50:16,908 - #5 ;
INFO  12:50:16,909 - #49 int
INFO  12:50:16,909 - #49 n
INFO  12:50:16,909 - #11 [
INFO  12:50:16,909 - #10 ]
INFO  12:50:16,909 - #5 ;
INFO  12:50:16,909 - #49 bool
INFO  12:50:16,909 - #49 kek
INFO  12:50:16,909 - #5 ;
INFO  12:50:16,909 - #3 {
INFO  12:50:16,909 - #25 void
INFO  12:50:16,909 - #49 main
INFO  12:50:16,909 - #6 (
INFO  12:50:16,909 - #7 )
INFO  12:50:16,909 - #49 char
INFO  12:50:16,910 - #49 m
INFO  12:50:16,910 - #5 ;
INFO  12:50:16,910 - #49 bool
INFO  12:50:16,910 - #49 t
INFO  12:50:16,910 - #5 ;
INFO  12:50:16,910 - #3 {
INFO  12:50:16,910 - #49 n
INFO  12:50:16,910 - #46 =
INFO  12:50:16,910 - #32 new
INFO  12:50:16,911 - #49 int
INFO  12:50:16,911 - #11 [
INFO  12:50:16,911 - #47 66
INFO  12:50:16,911 - #10 ]
INFO  12:50:16,911 - #5 ;
INFO  12:50:16,912 - #49 y
INFO  12:50:16,912 - #46 =
INFO  12:50:16,912 - #49 chr
INFO  12:50:16,912 - #6 (
INFO  12:50:16,912 - #47 77
INFO  12:50:16,912 - #7 )
INFO  12:50:16,912 - #5 ;
INFO  12:50:16,912 - #49 duz
INFO  12:50:16,912 - #46 =
INFO  12:50:16,912 - #49 len
INFO  12:50:16,912 - #6 (
INFO  12:50:16,912 - #49 y
INFO  12:50:16,912 - #7 )
INFO  12:50:16,912 - #5 ;
INFO  12:50:16,912 - #9 print
INFO  12:50:16,912 - #6 (
INFO  12:50:16,912 - #49 y
INFO  12:50:16,912 - #7 )
INFO  12:50:16,913 - #5 ;
INFO  12:50:16,913 - #9 print
INFO  12:50:16,913 - #6 (
INFO  12:50:16,913 - #49 duz
INFO  12:50:16,913 - #7 )
INFO  12:50:16,913 - #5 ;
INFO  12:50:16,913 - #4 }
INFO  12:50:16,913 - #4 }
INFO  12:50:16,913 - =====================SINTAKSNO_STABLO=========================
INFO  12:50:16,914 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     n
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorNewArr(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   66
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorNewArr]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   y
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           chr
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorNumconst(
                                 77
                                ) [FactorNumconst]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 duz
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorFunctionCallPars(
                        DesignatorStd(
                         len
                        ) [DesignatorStd]
                        Expression(
                          Expression1(
                            Term(
                              FactorDesigOne(
                                DesignatorStd(
                                 y
                                ) [DesignatorStd]
                              ) [FactorDesigOne]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorFunctionCallPars]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   duz
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  12:50:16,917 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:50:16,918 - Deklarisana konstanta nula na liniji 5
INFO  12:50:16,918 - Deklarisana konstanta pet na liniji 6
INFO  12:50:16,918 - Deklarisana promenljiva x na liniji 7
INFO  12:50:16,918 - Deklarisana promenljiva duz na liniji 8
INFO  12:50:16,918 - Deklarisana promenljiva y na liniji 9
INFO  12:50:16,918 - Deklarisan niz n na liniji 10
INFO  12:50:16,918 - Deklarisana promenljiva kek na liniji 11
INFO  12:50:16,918 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:50:16,918 - Deklarisana promenljiva m na liniji 14
INFO  12:50:16,918 - Deklarisana promenljiva t na liniji 15
ERROR 12:50:16,918 - Parametar inline funkcije len mora biti tipa niz na liniji 20
INFO  12:50:16,918 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:50:16,918 - Kraj semanticke obrade programa test301
ERROR 12:50:16,918 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  12:50:51,971 - Obrada ulaznog fajla test\program.mj
INFO  12:50:51,987 - #2 program
INFO  12:50:51,987 - #49 test301
INFO  12:50:51,987 - #12 const
INFO  12:50:51,988 - #49 int
INFO  12:50:51,988 - #49 nula
INFO  12:50:51,988 - #46 =
INFO  12:50:51,988 - #47 0
INFO  12:50:51,988 - #5 ;
INFO  12:50:51,989 - #12 const
INFO  12:50:51,989 - #49 char
INFO  12:50:51,989 - #49 pet
INFO  12:50:51,989 - #46 =
INFO  12:50:51,989 - #48 5
INFO  12:50:51,989 - #5 ;
INFO  12:50:51,989 - #49 int
INFO  12:50:51,989 - #49 x
INFO  12:50:51,989 - #5 ;
INFO  12:50:51,990 - #49 int
INFO  12:50:51,990 - #49 duz
INFO  12:50:51,990 - #5 ;
INFO  12:50:51,990 - #49 char
INFO  12:50:51,990 - #49 y
INFO  12:50:51,990 - #5 ;
INFO  12:50:51,990 - #49 int
INFO  12:50:51,990 - #49 n
INFO  12:50:51,990 - #11 [
INFO  12:50:51,990 - #10 ]
INFO  12:50:51,990 - #5 ;
INFO  12:50:51,990 - #49 bool
INFO  12:50:51,990 - #49 kek
INFO  12:50:51,990 - #5 ;
INFO  12:50:51,990 - #3 {
INFO  12:50:51,990 - #25 void
INFO  12:50:51,990 - #49 main
INFO  12:50:51,990 - #6 (
INFO  12:50:51,990 - #7 )
INFO  12:50:51,991 - #49 char
INFO  12:50:51,991 - #49 m
INFO  12:50:51,991 - #5 ;
INFO  12:50:51,991 - #49 bool
INFO  12:50:51,991 - #49 t
INFO  12:50:51,991 - #5 ;
INFO  12:50:51,991 - #3 {
INFO  12:50:51,991 - #49 n
INFO  12:50:51,991 - #46 =
INFO  12:50:51,992 - #32 new
INFO  12:50:51,992 - #49 int
INFO  12:50:51,992 - #11 [
INFO  12:50:51,992 - #47 66
INFO  12:50:51,992 - #10 ]
INFO  12:50:51,993 - #5 ;
INFO  12:50:51,993 - #49 y
INFO  12:50:51,993 - #46 =
INFO  12:50:51,993 - #49 chr
INFO  12:50:51,993 - #6 (
INFO  12:50:51,993 - #47 77
INFO  12:50:51,993 - #7 )
INFO  12:50:51,993 - #5 ;
INFO  12:50:51,993 - #49 duz
INFO  12:50:51,993 - #46 =
INFO  12:50:51,994 - #49 len
INFO  12:50:51,994 - #6 (
INFO  12:50:51,994 - #49 y
INFO  12:50:51,994 - #7 )
INFO  12:50:51,994 - #5 ;
INFO  12:50:51,994 - #9 print
INFO  12:50:51,994 - #6 (
INFO  12:50:51,994 - #49 y
INFO  12:50:51,994 - #7 )
INFO  12:50:51,994 - #5 ;
INFO  12:50:51,994 - #9 print
INFO  12:50:51,994 - #6 (
INFO  12:50:51,994 - #49 duz
INFO  12:50:51,994 - #7 )
INFO  12:50:51,994 - #5 ;
INFO  12:50:51,994 - #4 }
INFO  12:50:51,994 - #49 int
INFO  12:50:51,995 - #49 fja
INFO  12:50:51,995 - #6 (
INFO  12:50:51,995 - #49 int
INFO  12:50:51,995 - #49 a
INFO  12:50:51,995 - #7 )
INFO  12:50:51,995 - #49 int
INFO  12:50:51,995 - #49 loc
INFO  12:50:51,995 - #5 ;
INFO  12:50:51,995 - #3 {
INFO  12:50:51,995 - #49 loc
INFO  12:50:51,995 - #46 =
INFO  12:50:51,995 - #47 5
INFO  12:50:51,995 - #5 ;
INFO  12:50:51,995 - #4 }
INFO  12:50:51,995 - #4 }
INFO  12:50:51,996 - =====================SINTAKSNO_STABLO=========================
INFO  12:50:51,996 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclarations(
    MethodDeclSingle(
      MethodDecl(
        MethodVoidName(
         main
        ) [MethodVoidName]
        NoFormParam(
        ) [NoFormParam]
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    Assignment(
                      DesignatorStd(
                       n
                      ) [DesignatorStd]
                      Assign(
                      ) [Assign]
                      Expression(
                        Expression1(
                          Term(
                            FactorNewArr(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Expression1(
                                  Term(
                                    FactorNumconst(
                                     66
                                    ) [FactorNumconst]
                                    NoMulopFactorList(
                                    ) [NoMulopFactorList]
                                  ) [Term]
                                  NoAddopTermList(
                                  ) [NoAddopTermList]
                                ) [Expression1]
                              ) [Expression]
                            ) [FactorNewArr]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [Expression]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorFunctionCallPars(
                            DesignatorStd(
                             chr
                            ) [DesignatorStd]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   77
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorFunctionCallPars]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   duz
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           len
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   y
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            PrintNoNum(
              Expression(
                Expression1(
                  Term(
                    FactorDesigOne(
                      DesignatorStd(
                       y
                      ) [DesignatorStd]
                    ) [FactorDesigOne]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [PrintNoNum]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     duz
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclSingle]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       fja
      ) [MethodTypeName]
      FormParams(
        FormalParamDecls(
          FormParPartStd(
            Type(
             int
            ) [Type]
           a
          ) [FormParPartStd]
          FormParsCommaListNo(
          ) [FormParsCommaListNo]
        ) [FormalParamDecls]
      ) [FormParams]
      VarDeclarationsList(
        VarDeclarationsNo(
        ) [VarDeclarationsNo]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorStd(
             loc
            ) [DesignatorStd]
            Assign(
            ) [Assign]
            Expression(
              Expression1(
                Term(
                  FactorNumconst(
                   5
                  ) [FactorNumconst]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:50:52,000 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:50:52,000 - Deklarisana konstanta nula na liniji 5
INFO  12:50:52,000 - Deklarisana konstanta pet na liniji 6
INFO  12:50:52,000 - Deklarisana promenljiva x na liniji 7
INFO  12:50:52,000 - Deklarisana promenljiva duz na liniji 8
INFO  12:50:52,000 - Deklarisana promenljiva y na liniji 9
INFO  12:50:52,000 - Deklarisan niz n na liniji 10
INFO  12:50:52,000 - Deklarisana promenljiva kek na liniji 11
INFO  12:50:52,000 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:50:52,000 - Deklarisana promenljiva m na liniji 14
INFO  12:50:52,000 - Deklarisana promenljiva t na liniji 15
ERROR 12:50:52,000 - Parametar inline funkcije len mora biti tipa niz na liniji 20
INFO  12:50:52,001 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:50:52,001 - Obrada metode fja s povratnom vrednoscu na liniji 26
INFO  12:50:52,001 - Obradjen obican parametar f-je fja na liniji 26
INFO  12:50:52,001 - Deklarisana promenljiva loc na liniji 27
ERROR 12:50:52,001 - Semanticka greska - metoda (funkcija) fja nema return iskaz
INFO  12:50:52,001 - Zavrsetak obrade metode (funkcije) fja na liniji 26
INFO  12:50:52,001 - Kraj semanticke obrade programa test301
ERROR 12:50:52,001 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  12:51:01,847 - Obrada ulaznog fajla test\program.mj
INFO  12:51:01,862 - #2 program
INFO  12:51:01,863 - #49 test301
INFO  12:51:01,863 - #12 const
INFO  12:51:01,863 - #49 int
INFO  12:51:01,863 - #49 nula
INFO  12:51:01,864 - #46 =
INFO  12:51:01,864 - #47 0
INFO  12:51:01,864 - #5 ;
INFO  12:51:01,864 - #12 const
INFO  12:51:01,864 - #49 char
INFO  12:51:01,864 - #49 pet
INFO  12:51:01,864 - #46 =
INFO  12:51:01,864 - #48 5
INFO  12:51:01,865 - #5 ;
INFO  12:51:01,865 - #49 int
INFO  12:51:01,865 - #49 x
INFO  12:51:01,865 - #5 ;
INFO  12:51:01,865 - #49 int
INFO  12:51:01,865 - #49 duz
INFO  12:51:01,865 - #5 ;
INFO  12:51:01,865 - #49 char
INFO  12:51:01,865 - #49 y
INFO  12:51:01,865 - #5 ;
INFO  12:51:01,865 - #49 int
INFO  12:51:01,865 - #49 n
INFO  12:51:01,865 - #11 [
INFO  12:51:01,865 - #10 ]
INFO  12:51:01,865 - #5 ;
INFO  12:51:01,866 - #49 bool
INFO  12:51:01,866 - #49 kek
INFO  12:51:01,866 - #5 ;
INFO  12:51:01,866 - #3 {
INFO  12:51:01,866 - #25 void
INFO  12:51:01,866 - #49 main
INFO  12:51:01,866 - #6 (
INFO  12:51:01,866 - #7 )
INFO  12:51:01,866 - #49 char
INFO  12:51:01,866 - #49 m
INFO  12:51:01,866 - #5 ;
INFO  12:51:01,866 - #49 bool
INFO  12:51:01,867 - #49 t
INFO  12:51:01,867 - #5 ;
INFO  12:51:01,867 - #3 {
INFO  12:51:01,867 - #49 n
INFO  12:51:01,867 - #46 =
INFO  12:51:01,867 - #32 new
INFO  12:51:01,867 - #49 int
INFO  12:51:01,867 - #11 [
INFO  12:51:01,867 - #47 66
INFO  12:51:01,867 - #10 ]
INFO  12:51:01,868 - #5 ;
INFO  12:51:01,868 - #49 y
INFO  12:51:01,869 - #46 =
INFO  12:51:01,869 - #49 chr
INFO  12:51:01,869 - #6 (
INFO  12:51:01,869 - #47 77
INFO  12:51:01,869 - #7 )
INFO  12:51:01,869 - #5 ;
INFO  12:51:01,869 - #49 duz
INFO  12:51:01,869 - #46 =
INFO  12:51:01,869 - #49 len
INFO  12:51:01,869 - #6 (
INFO  12:51:01,869 - #49 y
INFO  12:51:01,869 - #7 )
INFO  12:51:01,869 - #5 ;
INFO  12:51:01,869 - #9 print
INFO  12:51:01,869 - #6 (
INFO  12:51:01,869 - #49 y
INFO  12:51:01,869 - #7 )
INFO  12:51:01,869 - #5 ;
INFO  12:51:01,869 - #9 print
INFO  12:51:01,869 - #6 (
INFO  12:51:01,869 - #49 duz
INFO  12:51:01,869 - #7 )
INFO  12:51:01,870 - #5 ;
INFO  12:51:01,870 - #4 }
INFO  12:51:01,870 - #49 int
INFO  12:51:01,870 - #49 fja
INFO  12:51:01,870 - #6 (
INFO  12:51:01,870 - #49 int
INFO  12:51:01,870 - #49 a
INFO  12:51:01,870 - #7 )
INFO  12:51:01,871 - #49 int
INFO  12:51:01,871 - #49 loc
INFO  12:51:01,871 - #5 ;
INFO  12:51:01,871 - #3 {
INFO  12:51:01,871 - #49 loc
INFO  12:51:01,871 - #46 =
INFO  12:51:01,871 - #47 5
INFO  12:51:01,871 - #5 ;
INFO  12:51:01,871 - #28 return
INFO  12:51:01,871 - #49 loc
INFO  12:51:01,871 - #5 ;
INFO  12:51:01,871 - #4 }
INFO  12:51:01,871 - #4 }
INFO  12:51:01,871 - =====================SINTAKSNO_STABLO=========================
INFO  12:51:01,872 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclarations(
    MethodDeclSingle(
      MethodDecl(
        MethodVoidName(
         main
        ) [MethodVoidName]
        NoFormParam(
        ) [NoFormParam]
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    Assignment(
                      DesignatorStd(
                       n
                      ) [DesignatorStd]
                      Assign(
                      ) [Assign]
                      Expression(
                        Expression1(
                          Term(
                            FactorNewArr(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Expression1(
                                  Term(
                                    FactorNumconst(
                                     66
                                    ) [FactorNumconst]
                                    NoMulopFactorList(
                                    ) [NoMulopFactorList]
                                  ) [Term]
                                  NoAddopTermList(
                                  ) [NoAddopTermList]
                                ) [Expression1]
                              ) [Expression]
                            ) [FactorNewArr]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [Expression]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorFunctionCallPars(
                            DesignatorStd(
                             chr
                            ) [DesignatorStd]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   77
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorFunctionCallPars]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   duz
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           len
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   y
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            PrintNoNum(
              Expression(
                Expression1(
                  Term(
                    FactorDesigOne(
                      DesignatorStd(
                       y
                      ) [DesignatorStd]
                    ) [FactorDesigOne]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [PrintNoNum]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     duz
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclSingle]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       fja
      ) [MethodTypeName]
      FormParams(
        FormalParamDecls(
          FormParPartStd(
            Type(
             int
            ) [Type]
           a
          ) [FormParPartStd]
          FormParsCommaListNo(
          ) [FormParsCommaListNo]
        ) [FormalParamDecls]
      ) [FormParams]
      VarDeclarationsList(
        VarDeclarationsNo(
        ) [VarDeclarationsNo]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               loc
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorNumconst(
                     5
                    ) [FactorNumconst]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:51:01,875 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:51:01,875 - Deklarisana konstanta nula na liniji 5
INFO  12:51:01,875 - Deklarisana konstanta pet na liniji 6
INFO  12:51:01,876 - Deklarisana promenljiva x na liniji 7
INFO  12:51:01,876 - Deklarisana promenljiva duz na liniji 8
INFO  12:51:01,876 - Deklarisana promenljiva y na liniji 9
INFO  12:51:01,876 - Deklarisan niz n na liniji 10
INFO  12:51:01,876 - Deklarisana promenljiva kek na liniji 11
INFO  12:51:01,876 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:51:01,876 - Deklarisana promenljiva m na liniji 14
INFO  12:51:01,876 - Deklarisana promenljiva t na liniji 15
ERROR 12:51:01,876 - Parametar inline funkcije len mora biti tipa niz na liniji 20
INFO  12:51:01,876 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:51:01,876 - Obrada metode fja s povratnom vrednoscu na liniji 26
INFO  12:51:01,876 - Obradjen obican parametar f-je fja na liniji 26
INFO  12:51:01,876 - Deklarisana promenljiva loc na liniji 27
INFO  12:51:01,876 - Zavrsetak obrade metode (funkcije) fja na liniji 26
INFO  12:51:01,876 - Kraj semanticke obrade programa test301
ERROR 12:51:01,876 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  12:51:13,686 - Obrada ulaznog fajla test\program.mj
INFO  12:51:13,702 - #2 program
INFO  12:51:13,702 - #49 test301
INFO  12:51:13,702 - #12 const
INFO  12:51:13,703 - #49 int
INFO  12:51:13,703 - #49 nula
INFO  12:51:13,703 - #46 =
INFO  12:51:13,703 - #47 0
INFO  12:51:13,703 - #5 ;
INFO  12:51:13,704 - #12 const
INFO  12:51:13,704 - #49 char
INFO  12:51:13,704 - #49 pet
INFO  12:51:13,704 - #46 =
INFO  12:51:13,704 - #48 5
INFO  12:51:13,704 - #5 ;
INFO  12:51:13,704 - #49 int
INFO  12:51:13,704 - #49 x
INFO  12:51:13,704 - #5 ;
INFO  12:51:13,704 - #49 int
INFO  12:51:13,705 - #49 duz
INFO  12:51:13,705 - #5 ;
INFO  12:51:13,705 - #49 char
INFO  12:51:13,705 - #49 y
INFO  12:51:13,705 - #5 ;
INFO  12:51:13,705 - #49 int
INFO  12:51:13,705 - #49 n
INFO  12:51:13,705 - #11 [
INFO  12:51:13,705 - #10 ]
INFO  12:51:13,705 - #5 ;
INFO  12:51:13,705 - #49 bool
INFO  12:51:13,705 - #49 kek
INFO  12:51:13,705 - #5 ;
INFO  12:51:13,705 - #3 {
INFO  12:51:13,705 - #25 void
INFO  12:51:13,705 - #49 main
INFO  12:51:13,705 - #6 (
INFO  12:51:13,705 - #7 )
INFO  12:51:13,706 - #49 char
INFO  12:51:13,706 - #49 m
INFO  12:51:13,706 - #5 ;
INFO  12:51:13,706 - #49 bool
INFO  12:51:13,706 - #49 t
INFO  12:51:13,706 - #5 ;
INFO  12:51:13,706 - #3 {
INFO  12:51:13,706 - #49 n
INFO  12:51:13,706 - #46 =
INFO  12:51:13,706 - #32 new
INFO  12:51:13,707 - #49 int
INFO  12:51:13,707 - #11 [
INFO  12:51:13,707 - #47 66
INFO  12:51:13,707 - #10 ]
INFO  12:51:13,708 - #5 ;
INFO  12:51:13,708 - #49 y
INFO  12:51:13,708 - #46 =
INFO  12:51:13,708 - #49 chr
INFO  12:51:13,708 - #6 (
INFO  12:51:13,708 - #47 77
INFO  12:51:13,708 - #7 )
INFO  12:51:13,708 - #5 ;
INFO  12:51:13,708 - #49 duz
INFO  12:51:13,708 - #46 =
INFO  12:51:13,708 - #49 len
INFO  12:51:13,708 - #6 (
INFO  12:51:13,709 - #49 n
INFO  12:51:13,709 - #7 )
INFO  12:51:13,709 - #5 ;
INFO  12:51:13,709 - #9 print
INFO  12:51:13,709 - #6 (
INFO  12:51:13,709 - #49 y
INFO  12:51:13,709 - #7 )
INFO  12:51:13,709 - #5 ;
INFO  12:51:13,709 - #9 print
INFO  12:51:13,709 - #6 (
INFO  12:51:13,709 - #49 duz
INFO  12:51:13,709 - #7 )
INFO  12:51:13,709 - #5 ;
INFO  12:51:13,709 - #4 }
INFO  12:51:13,709 - #49 int
INFO  12:51:13,710 - #49 fja
INFO  12:51:13,710 - #6 (
INFO  12:51:13,710 - #49 int
INFO  12:51:13,710 - #49 a
INFO  12:51:13,710 - #7 )
INFO  12:51:13,710 - #49 int
INFO  12:51:13,710 - #49 loc
INFO  12:51:13,710 - #5 ;
INFO  12:51:13,710 - #3 {
INFO  12:51:13,710 - #49 loc
INFO  12:51:13,710 - #46 =
INFO  12:51:13,710 - #47 5
INFO  12:51:13,710 - #5 ;
INFO  12:51:13,710 - #28 return
INFO  12:51:13,710 - #49 loc
INFO  12:51:13,710 - #5 ;
INFO  12:51:13,710 - #4 }
INFO  12:51:13,710 - #4 }
INFO  12:51:13,711 - =====================SINTAKSNO_STABLO=========================
INFO  12:51:13,712 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclarations(
    MethodDeclSingle(
      MethodDecl(
        MethodVoidName(
         main
        ) [MethodVoidName]
        NoFormParam(
        ) [NoFormParam]
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    Assignment(
                      DesignatorStd(
                       n
                      ) [DesignatorStd]
                      Assign(
                      ) [Assign]
                      Expression(
                        Expression1(
                          Term(
                            FactorNewArr(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Expression1(
                                  Term(
                                    FactorNumconst(
                                     66
                                    ) [FactorNumconst]
                                    NoMulopFactorList(
                                    ) [NoMulopFactorList]
                                  ) [Term]
                                  NoAddopTermList(
                                  ) [NoAddopTermList]
                                ) [Expression1]
                              ) [Expression]
                            ) [FactorNewArr]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [Expression]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorFunctionCallPars(
                            DesignatorStd(
                             chr
                            ) [DesignatorStd]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   77
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorFunctionCallPars]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   duz
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           len
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   n
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            PrintNoNum(
              Expression(
                Expression1(
                  Term(
                    FactorDesigOne(
                      DesignatorStd(
                       y
                      ) [DesignatorStd]
                    ) [FactorDesigOne]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [PrintNoNum]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     duz
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclSingle]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       fja
      ) [MethodTypeName]
      FormParams(
        FormalParamDecls(
          FormParPartStd(
            Type(
             int
            ) [Type]
           a
          ) [FormParPartStd]
          FormParsCommaListNo(
          ) [FormParsCommaListNo]
        ) [FormalParamDecls]
      ) [FormParams]
      VarDeclarationsList(
        VarDeclarationsNo(
        ) [VarDeclarationsNo]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               loc
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorNumconst(
                     5
                    ) [FactorNumconst]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:51:13,715 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:51:13,716 - Deklarisana konstanta nula na liniji 5
INFO  12:51:13,716 - Deklarisana konstanta pet na liniji 6
INFO  12:51:13,716 - Deklarisana promenljiva x na liniji 7
INFO  12:51:13,716 - Deklarisana promenljiva duz na liniji 8
INFO  12:51:13,716 - Deklarisana promenljiva y na liniji 9
INFO  12:51:13,716 - Deklarisan niz n na liniji 10
INFO  12:51:13,716 - Deklarisana promenljiva kek na liniji 11
INFO  12:51:13,716 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:51:13,716 - Deklarisana promenljiva m na liniji 14
INFO  12:51:13,716 - Deklarisana promenljiva t na liniji 15
INFO  12:51:13,716 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:51:13,716 - Obrada metode fja s povratnom vrednoscu na liniji 26
INFO  12:51:13,716 - Obradjen obican parametar f-je fja na liniji 26
INFO  12:51:13,716 - Deklarisana promenljiva loc na liniji 27
INFO  12:51:13,716 - Zavrsetak obrade metode (funkcije) fja na liniji 26
INFO  12:51:13,716 - Kraj semanticke obrade programa test301
INFO  12:51:13,717 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  12:51:13,717 - ======================GENERISANJE_KODA========================
INFO  12:51:13,718 - INLINE chrna adresi0!
INFO  12:51:13,719 - Generisanje koda uspesno zavrseno!
INFO  12:51:13,719 - Generisanje izlaznog fajla test\program.obj
INFO  12:51:13,719 - ==============================================================
INFO  12:51:47,973 - Obrada ulaznog fajla test\program.mj
INFO  12:51:47,989 - #2 program
INFO  12:51:47,989 - #49 test301
INFO  12:51:47,989 - #12 const
INFO  12:51:47,990 - #49 int
INFO  12:51:47,990 - #49 nula
INFO  12:51:47,990 - #46 =
INFO  12:51:47,990 - #47 0
INFO  12:51:47,990 - #5 ;
INFO  12:51:47,991 - #12 const
INFO  12:51:47,991 - #49 char
INFO  12:51:47,991 - #49 pet
INFO  12:51:47,991 - #46 =
INFO  12:51:47,991 - #48 5
INFO  12:51:47,991 - #5 ;
INFO  12:51:47,991 - #49 int
INFO  12:51:47,991 - #49 x
INFO  12:51:47,991 - #5 ;
INFO  12:51:47,991 - #49 int
INFO  12:51:47,992 - #49 duz
INFO  12:51:47,992 - #5 ;
INFO  12:51:47,992 - #49 char
INFO  12:51:47,992 - #49 y
INFO  12:51:47,992 - #5 ;
INFO  12:51:47,992 - #49 int
INFO  12:51:47,992 - #49 n
INFO  12:51:47,992 - #11 [
INFO  12:51:47,992 - #10 ]
INFO  12:51:47,992 - #5 ;
INFO  12:51:47,992 - #49 bool
INFO  12:51:47,992 - #49 kek
INFO  12:51:47,992 - #5 ;
INFO  12:51:47,992 - #3 {
INFO  12:51:47,992 - #25 void
INFO  12:51:47,992 - #49 main
INFO  12:51:47,992 - #6 (
INFO  12:51:47,992 - #7 )
INFO  12:51:47,993 - #49 char
INFO  12:51:47,993 - #49 m
INFO  12:51:47,993 - #5 ;
INFO  12:51:47,993 - #49 bool
INFO  12:51:47,993 - #49 t
INFO  12:51:47,993 - #5 ;
INFO  12:51:47,993 - #3 {
INFO  12:51:47,993 - #49 n
INFO  12:51:47,993 - #46 =
INFO  12:51:47,994 - #32 new
INFO  12:51:47,994 - #49 int
INFO  12:51:47,994 - #11 [
INFO  12:51:47,994 - #47 66
INFO  12:51:47,994 - #10 ]
INFO  12:51:47,995 - #5 ;
INFO  12:51:47,995 - #49 y
INFO  12:51:47,995 - #46 =
INFO  12:51:47,995 - #49 chr
INFO  12:51:47,995 - #6 (
INFO  12:51:47,995 - #47 77
INFO  12:51:47,995 - #7 )
INFO  12:51:47,995 - #5 ;
INFO  12:51:47,995 - #49 duz
INFO  12:51:47,995 - #46 =
INFO  12:51:47,995 - #49 len
INFO  12:51:47,995 - #6 (
INFO  12:51:47,996 - #49 n
INFO  12:51:47,996 - #7 )
INFO  12:51:47,996 - #5 ;
INFO  12:51:47,996 - #9 print
INFO  12:51:47,996 - #6 (
INFO  12:51:47,996 - #49 y
INFO  12:51:47,996 - #7 )
INFO  12:51:47,996 - #5 ;
INFO  12:51:47,996 - #9 print
INFO  12:51:47,996 - #6 (
INFO  12:51:47,996 - #49 duz
INFO  12:51:47,996 - #7 )
INFO  12:51:47,996 - #5 ;
INFO  12:51:47,996 - #4 }
INFO  12:51:47,996 - #49 int
INFO  12:51:47,997 - #49 fja
INFO  12:51:47,997 - #6 (
INFO  12:51:47,997 - #49 int
INFO  12:51:47,997 - #49 a
INFO  12:51:47,997 - #7 )
INFO  12:51:47,997 - #49 int
INFO  12:51:47,997 - #49 loc
INFO  12:51:47,997 - #5 ;
INFO  12:51:47,997 - #3 {
INFO  12:51:47,997 - #49 loc
INFO  12:51:47,997 - #46 =
INFO  12:51:47,997 - #47 5
INFO  12:51:47,997 - #5 ;
INFO  12:51:47,997 - #28 return
INFO  12:51:47,997 - #49 loc
INFO  12:51:47,997 - #5 ;
INFO  12:51:47,997 - #4 }
INFO  12:51:47,997 - #4 }
INFO  12:51:47,998 - =====================SINTAKSNO_STABLO=========================
INFO  12:51:47,999 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclarations(
    MethodDeclSingle(
      MethodDecl(
        MethodVoidName(
         main
        ) [MethodVoidName]
        NoFormParam(
        ) [NoFormParam]
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    Assignment(
                      DesignatorStd(
                       n
                      ) [DesignatorStd]
                      Assign(
                      ) [Assign]
                      Expression(
                        Expression1(
                          Term(
                            FactorNewArr(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Expression1(
                                  Term(
                                    FactorNumconst(
                                     66
                                    ) [FactorNumconst]
                                    NoMulopFactorList(
                                    ) [NoMulopFactorList]
                                  ) [Term]
                                  NoAddopTermList(
                                  ) [NoAddopTermList]
                                ) [Expression1]
                              ) [Expression]
                            ) [FactorNewArr]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [Expression]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     y
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorFunctionCallPars(
                            DesignatorStd(
                             chr
                            ) [DesignatorStd]
                            Expression(
                              Expression1(
                                Term(
                                  FactorNumconst(
                                   77
                                  ) [FactorNumconst]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorFunctionCallPars]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   duz
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorFunctionCallPars(
                          DesignatorStd(
                           len
                          ) [DesignatorStd]
                          Expression(
                            Expression1(
                              Term(
                                FactorDesigOne(
                                  DesignatorStd(
                                   n
                                  ) [DesignatorStd]
                                ) [FactorDesigOne]
                                NoMulopFactorList(
                                ) [NoMulopFactorList]
                              ) [Term]
                              NoAddopTermList(
                              ) [NoAddopTermList]
                            ) [Expression1]
                          ) [Expression]
                        ) [FactorFunctionCallPars]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            PrintNoNum(
              Expression(
                Expression1(
                  Term(
                    FactorDesigOne(
                      DesignatorStd(
                       y
                      ) [DesignatorStd]
                    ) [FactorDesigOne]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [PrintNoNum]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     duz
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclSingle]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       fja
      ) [MethodTypeName]
      FormParams(
        FormalParamDecls(
          FormParPartStd(
            Type(
             int
            ) [Type]
           a
          ) [FormParPartStd]
          FormParsCommaListNo(
          ) [FormParsCommaListNo]
        ) [FormalParamDecls]
      ) [FormParams]
      VarDeclarationsList(
        VarDeclarationsNo(
        ) [VarDeclarationsNo]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               loc
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorNumconst(
                     5
                    ) [FactorNumconst]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:51:48,002 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  12:51:48,002 - Deklarisana konstanta nula na liniji 5
INFO  12:51:48,002 - Deklarisana konstanta pet na liniji 6
INFO  12:51:48,002 - Deklarisana promenljiva x na liniji 7
INFO  12:51:48,002 - Deklarisana promenljiva duz na liniji 8
INFO  12:51:48,002 - Deklarisana promenljiva y na liniji 9
INFO  12:51:48,003 - Deklarisan niz n na liniji 10
INFO  12:51:48,003 - Deklarisana promenljiva kek na liniji 11
INFO  12:51:48,003 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  12:51:48,003 - Deklarisana promenljiva m na liniji 14
INFO  12:51:48,003 - Deklarisana promenljiva t na liniji 15
INFO  12:51:48,003 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  12:51:48,003 - Obrada metode fja s povratnom vrednoscu na liniji 26
INFO  12:51:48,003 - Obradjen obican parametar f-je fja na liniji 26
INFO  12:51:48,003 - Deklarisana promenljiva loc na liniji 27
INFO  12:51:48,003 - Zavrsetak obrade metode (funkcije) fja na liniji 26
INFO  12:51:48,003 - Kraj semanticke obrade programa test301
INFO  12:51:48,003 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  12:51:48,003 - ======================GENERISANJE_KODA========================
INFO  12:51:48,005 - Generisanje koda uspesno zavrseno!
INFO  12:51:48,006 - Generisanje izlaznog fajla test\program.obj
INFO  12:51:48,006 - ==============================================================
INFO  13:27:33,241 - Obrada ulaznog fajla test\program.mj
INFO  13:27:33,259 - #2 program
INFO  13:27:33,259 - #49 test301
INFO  13:27:33,259 - #12 const
INFO  13:27:33,260 - #49 int
INFO  13:27:33,260 - #49 nula
INFO  13:27:33,260 - #46 =
INFO  13:27:33,260 - #47 0
INFO  13:27:33,260 - #5 ;
INFO  13:27:33,260 - #12 const
INFO  13:27:33,261 - #49 char
INFO  13:27:33,261 - #49 pet
INFO  13:27:33,261 - #46 =
INFO  13:27:33,261 - #48 5
INFO  13:27:33,261 - #5 ;
INFO  13:27:33,261 - #49 int
INFO  13:27:33,261 - #49 x
INFO  13:27:33,261 - #5 ;
INFO  13:27:33,261 - #49 int
INFO  13:27:33,261 - #49 duz
INFO  13:27:33,261 - #5 ;
INFO  13:27:33,262 - #49 char
INFO  13:27:33,262 - #49 y
INFO  13:27:33,262 - #5 ;
INFO  13:27:33,262 - #49 int
INFO  13:27:33,262 - #49 n
INFO  13:27:33,262 - #11 [
INFO  13:27:33,262 - #10 ]
INFO  13:27:33,262 - #5 ;
INFO  13:27:33,262 - #49 bool
INFO  13:27:33,262 - #49 kek
INFO  13:27:33,262 - #5 ;
INFO  13:27:33,262 - #3 {
INFO  13:27:33,262 - #25 void
INFO  13:27:33,262 - #49 main
INFO  13:27:33,262 - #6 (
INFO  13:27:33,262 - #7 )
INFO  13:27:33,262 - #49 char
INFO  13:27:33,263 - #49 m
INFO  13:27:33,263 - #5 ;
INFO  13:27:33,263 - #49 bool
INFO  13:27:33,263 - #49 t
INFO  13:27:33,263 - #5 ;
INFO  13:27:33,263 - #3 {
INFO  13:27:33,263 - #49 n
INFO  13:27:33,263 - #46 =
INFO  13:27:33,263 - #32 new
INFO  13:27:33,264 - #49 int
INFO  13:27:33,264 - #11 [
INFO  13:27:33,264 - #47 66
INFO  13:27:33,264 - #10 ]
INFO  13:27:33,265 - #5 ;
INFO  13:27:33,265 - #49 y
INFO  13:27:33,265 - #46 =
INFO  13:27:33,265 - #49 chr
INFO  13:27:33,265 - #6 (
INFO  13:27:33,265 - #47 77
INFO  13:27:33,265 - #7 )
INFO  13:27:33,265 - #5 ;
INFO  13:27:33,265 - #49 duz
INFO  13:27:33,265 - #46 =
INFO  13:27:33,265 - #49 len
INFO  13:27:33,265 - #6 (
INFO  13:27:33,265 - #49 n
INFO  13:27:33,266 - #7 )
INFO  13:27:33,266 - #5 ;
INFO  13:27:33,266 - #49 duz
INFO  13:27:33,266 - #46 =
INFO  13:27:33,266 - #49 y
INFO  13:27:33,266 - #5 ;
INFO  13:27:33,266 - #9 print
INFO  13:27:33,266 - #6 (
INFO  13:27:33,266 - #49 y
INFO  13:27:33,266 - #7 )
INFO  13:27:33,266 - #5 ;
INFO  13:27:33,266 - #9 print
INFO  13:27:33,266 - #6 (
INFO  13:27:33,266 - #49 duz
INFO  13:27:33,266 - #7 )
INFO  13:27:33,266 - #5 ;
INFO  13:27:33,266 - #4 }
INFO  13:27:33,266 - #49 int
INFO  13:27:33,267 - #49 fja
INFO  13:27:33,267 - #6 (
INFO  13:27:33,267 - #49 int
INFO  13:27:33,267 - #49 a
INFO  13:27:33,267 - #7 )
INFO  13:27:33,267 - #49 int
INFO  13:27:33,267 - #49 loc
INFO  13:27:33,267 - #5 ;
INFO  13:27:33,267 - #3 {
INFO  13:27:33,267 - #49 loc
INFO  13:27:33,267 - #46 =
INFO  13:27:33,267 - #47 5
INFO  13:27:33,267 - #5 ;
INFO  13:27:33,267 - #28 return
INFO  13:27:33,267 - #49 loc
INFO  13:27:33,268 - #5 ;
INFO  13:27:33,268 - #4 }
INFO  13:27:33,268 - #4 }
INFO  13:27:33,268 - =====================SINTAKSNO_STABLO=========================
INFO  13:27:33,269 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclarations(
    MethodDeclSingle(
      MethodDecl(
        MethodVoidName(
         main
        ) [MethodVoidName]
        NoFormParam(
        ) [NoFormParam]
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    DesignatorStmt(
                      Assignment(
                        DesignatorStd(
                         n
                        ) [DesignatorStd]
                        Assign(
                        ) [Assign]
                        Expression(
                          Expression1(
                            Term(
                              FactorNewArr(
                                Type(
                                 int
                                ) [Type]
                                Expression(
                                  Expression1(
                                    Term(
                                      FactorNumconst(
                                       66
                                      ) [FactorNumconst]
                                      NoMulopFactorList(
                                      ) [NoMulopFactorList]
                                    ) [Term]
                                    NoAddopTermList(
                                    ) [NoAddopTermList]
                                  ) [Expression1]
                                ) [Expression]
                              ) [FactorNewArr]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorStd(
                       y
                      ) [DesignatorStd]
                      Assign(
                      ) [Assign]
                      Expression(
                        Expression1(
                          Term(
                            FactorFunctionCallPars(
                              DesignatorStd(
                               chr
                              ) [DesignatorStd]
                              Expression(
                                Expression1(
                                  Term(
                                    FactorNumconst(
                                     77
                                    ) [FactorNumconst]
                                    NoMulopFactorList(
                                    ) [NoMulopFactorList]
                                  ) [Term]
                                  NoAddopTermList(
                                  ) [NoAddopTermList]
                                ) [Expression1]
                              ) [Expression]
                            ) [FactorFunctionCallPars]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [Expression]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorStd(
                     duz
                    ) [DesignatorStd]
                    Assign(
                    ) [Assign]
                    Expression(
                      Expression1(
                        Term(
                          FactorFunctionCallPars(
                            DesignatorStd(
                             len
                            ) [DesignatorStd]
                            Expression(
                              Expression1(
                                Term(
                                  FactorDesigOne(
                                    DesignatorStd(
                                     n
                                    ) [DesignatorStd]
                                  ) [FactorDesigOne]
                                  NoMulopFactorList(
                                  ) [NoMulopFactorList]
                                ) [Term]
                                NoAddopTermList(
                                ) [NoAddopTermList]
                              ) [Expression1]
                            ) [Expression]
                          ) [FactorFunctionCallPars]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorStd(
                   duz
                  ) [DesignatorStd]
                  Assign(
                  ) [Assign]
                  Expression(
                    Expression1(
                      Term(
                        FactorDesigOne(
                          DesignatorStd(
                           y
                          ) [DesignatorStd]
                        ) [FactorDesigOne]
                        NoMulopFactorList(
                        ) [NoMulopFactorList]
                      ) [Term]
                      NoAddopTermList(
                      ) [NoAddopTermList]
                    ) [Expression1]
                  ) [Expression]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            PrintNoNum(
              Expression(
                Expression1(
                  Term(
                    FactorDesigOne(
                      DesignatorStd(
                       y
                      ) [DesignatorStd]
                    ) [FactorDesigOne]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [PrintNoNum]
          ) [Statements]
          PrintNoNum(
            Expression(
              Expression1(
                Term(
                  FactorDesigOne(
                    DesignatorStd(
                     duz
                    ) [DesignatorStd]
                  ) [FactorDesigOne]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [PrintNoNum]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclSingle]
    MethodDecl(
      MethodTypeName(
        Type(
         int
        ) [Type]
       fja
      ) [MethodTypeName]
      FormParams(
        FormalParamDecls(
          FormParPartStd(
            Type(
             int
            ) [Type]
           a
          ) [FormParPartStd]
          FormParsCommaListNo(
          ) [FormParsCommaListNo]
        ) [FormalParamDecls]
      ) [FormParams]
      VarDeclarationsList(
        VarDeclarationsNo(
        ) [VarDeclarationsNo]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               loc
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorNumconst(
                     5
                    ) [FactorNumconst]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:27:33,272 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  13:27:33,272 - Deklarisana konstanta nula na liniji 5
INFO  13:27:33,272 - Deklarisana konstanta pet na liniji 6
INFO  13:27:33,273 - Deklarisana promenljiva x na liniji 7
INFO  13:27:33,273 - Deklarisana promenljiva duz na liniji 8
INFO  13:27:33,273 - Deklarisana promenljiva y na liniji 9
INFO  13:27:33,273 - Deklarisan niz n na liniji 10
INFO  13:27:33,273 - Deklarisana promenljiva kek na liniji 11
INFO  13:27:33,273 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  13:27:33,273 - Deklarisana promenljiva m na liniji 14
INFO  13:27:33,273 - Deklarisana promenljiva t na liniji 15
ERROR 13:27:33,273 - Greska na liniji 21 : nekompatibilni tipovi u dodeli vrednosti! 
INFO  13:27:33,273 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  13:27:33,273 - Obrada metode fja s povratnom vrednoscu na liniji 27
INFO  13:27:33,273 - Obradjen obican parametar f-je fja na liniji 27
INFO  13:27:33,273 - Deklarisana promenljiva loc na liniji 28
INFO  13:27:33,273 - Zavrsetak obrade metode (funkcije) fja na liniji 27
INFO  13:27:33,273 - Kraj semanticke obrade programa test301
ERROR 13:27:33,273 - Ulazni fajl test\program.mj ima semanticke greske!
INFO  13:47:10,280 - Obrada ulaznog fajla test\program.mj
INFO  13:47:10,298 - #2 program
INFO  13:47:10,298 - #49 test301
INFO  13:47:10,298 - #12 const
INFO  13:47:10,298 - #49 int
INFO  13:47:10,298 - #49 nula
INFO  13:47:10,299 - #46 =
INFO  13:47:10,299 - #47 0
INFO  13:47:10,299 - #5 ;
INFO  13:47:10,299 - #12 const
INFO  13:47:10,299 - #49 char
INFO  13:47:10,299 - #49 pet
INFO  13:47:10,300 - #46 =
INFO  13:47:10,300 - #48 5
INFO  13:47:10,300 - #5 ;
INFO  13:47:10,300 - #49 int
INFO  13:47:10,300 - #49 x
INFO  13:47:10,300 - #5 ;
INFO  13:47:10,300 - #49 int
INFO  13:47:10,300 - #49 duz
INFO  13:47:10,300 - #5 ;
INFO  13:47:10,300 - #49 char
INFO  13:47:10,300 - #49 y
INFO  13:47:10,300 - #5 ;
INFO  13:47:10,300 - #49 int
INFO  13:47:10,301 - #49 n
INFO  13:47:10,301 - #11 [
INFO  13:47:10,301 - #10 ]
INFO  13:47:10,301 - #5 ;
INFO  13:47:10,301 - #49 bool
INFO  13:47:10,301 - #49 kek
INFO  13:47:10,301 - #5 ;
INFO  13:47:10,301 - #3 {
INFO  13:47:10,301 - #25 void
INFO  13:47:10,301 - #49 main
INFO  13:47:10,301 - #6 (
INFO  13:47:10,301 - #7 )
INFO  13:47:10,301 - #49 char
INFO  13:47:10,302 - #49 m
INFO  13:47:10,302 - #5 ;
INFO  13:47:10,302 - #49 bool
INFO  13:47:10,302 - #49 t
INFO  13:47:10,302 - #5 ;
INFO  13:47:10,302 - #3 {
INFO  13:47:10,302 - #49 n
INFO  13:47:10,302 - #46 =
INFO  13:47:10,302 - #32 new
INFO  13:47:10,303 - #49 int
INFO  13:47:10,303 - #11 [
INFO  13:47:10,303 - #47 66
INFO  13:47:10,303 - #10 ]
INFO  13:47:10,304 - #5 ;
INFO  13:47:10,304 - #49 ord
INFO  13:47:10,304 - #6 (
ERROR 13:47:10,304 - 
Sintaksna greska na liniji 18
INFO  13:47:10,304 - #47 7
INFO  13:47:10,304 - #7 )
INFO  13:47:10,304 - #5 ;
INFO  13:47:10,304 - #49 y
INFO  13:47:10,304 - #46 =
INFO  13:47:10,304 - #49 chr
ERROR 13:47:10,304 - Izvrsen [full Dodela vrednosti] oporavak od greske do ; u liniji 1
INFO  13:47:10,305 - #6 (
INFO  13:47:10,305 - #47 77
INFO  13:47:10,305 - #7 )
INFO  13:47:10,305 - #5 ;
INFO  13:47:10,305 - #49 duz
INFO  13:47:10,305 - #46 =
INFO  13:47:10,305 - #49 len
INFO  13:47:10,305 - #6 (
INFO  13:47:10,305 - #49 n
INFO  13:47:10,305 - #7 )
INFO  13:47:10,305 - #5 ;
INFO  13:47:10,305 - #9 print
INFO  13:47:10,305 - #6 (
INFO  13:47:10,305 - #49 y
INFO  13:47:10,305 - #7 )
INFO  13:47:10,305 - #5 ;
INFO  13:47:10,305 - #9 print
INFO  13:47:10,305 - #6 (
INFO  13:47:10,305 - #49 duz
INFO  13:47:10,305 - #7 )
INFO  13:47:10,306 - #5 ;
INFO  13:47:10,306 - #4 }
INFO  13:47:10,306 - #49 int
INFO  13:47:10,306 - #49 fja
INFO  13:47:10,306 - #6 (
INFO  13:47:10,306 - #49 int
INFO  13:47:10,306 - #49 a
INFO  13:47:10,306 - #7 )
INFO  13:47:10,307 - #49 int
INFO  13:47:10,307 - #49 loc
INFO  13:47:10,307 - #5 ;
INFO  13:47:10,307 - #3 {
INFO  13:47:10,307 - #49 loc
INFO  13:47:10,307 - #46 =
INFO  13:47:10,307 - #47 5
INFO  13:47:10,307 - #5 ;
INFO  13:47:10,307 - #28 return
INFO  13:47:10,307 - #49 loc
INFO  13:47:10,307 - #5 ;
INFO  13:47:10,307 - #4 }
INFO  13:47:10,307 - #4 }
INFO  13:47:10,307 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  13:48:42,723 - Obrada ulaznog fajla test\program.mj
INFO  13:48:42,739 - #2 program
INFO  13:48:42,739 - #49 test301
INFO  13:48:42,739 - #12 const
INFO  13:48:42,740 - #49 int
INFO  13:48:42,740 - #49 nula
INFO  13:48:42,740 - #46 =
INFO  13:48:42,740 - #47 0
INFO  13:48:42,740 - #5 ;
INFO  13:48:42,741 - #12 const
INFO  13:48:42,741 - #49 char
INFO  13:48:42,741 - #49 pet
INFO  13:48:42,741 - #46 =
INFO  13:48:42,741 - #48 5
INFO  13:48:42,741 - #5 ;
INFO  13:48:42,741 - #49 int
INFO  13:48:42,742 - #49 x
INFO  13:48:42,742 - #5 ;
INFO  13:48:42,742 - #49 int
INFO  13:48:42,742 - #49 duz
INFO  13:48:42,742 - #5 ;
INFO  13:48:42,742 - #49 char
INFO  13:48:42,742 - #49 y
INFO  13:48:42,742 - #5 ;
INFO  13:48:42,742 - #49 int
INFO  13:48:42,742 - #49 n
INFO  13:48:42,742 - #11 [
INFO  13:48:42,742 - #10 ]
INFO  13:48:42,742 - #5 ;
INFO  13:48:42,742 - #49 bool
INFO  13:48:42,743 - #49 kek
INFO  13:48:42,743 - #5 ;
INFO  13:48:42,743 - #3 {
INFO  13:48:42,743 - #25 void
INFO  13:48:42,743 - #49 main
INFO  13:48:42,743 - #6 (
INFO  13:48:42,743 - #7 )
INFO  13:48:42,743 - #49 char
INFO  13:48:42,743 - #49 m
INFO  13:48:42,743 - #5 ;
INFO  13:48:42,743 - #49 bool
INFO  13:48:42,743 - #49 t
INFO  13:48:42,744 - #5 ;
INFO  13:48:42,744 - #3 {
INFO  13:48:42,744 - #49 n
INFO  13:48:42,744 - #46 =
INFO  13:48:42,744 - #32 new
INFO  13:48:42,744 - #49 int
INFO  13:48:42,744 - #11 [
INFO  13:48:42,744 - #47 66
INFO  13:48:42,744 - #10 ]
INFO  13:48:42,745 - #5 ;
INFO  13:48:42,745 - #49 ord
INFO  13:48:42,745 - #6 (
ERROR 13:48:42,746 - 
Sintaksna greska na liniji 18
INFO  13:48:42,746 - #47 7
INFO  13:48:42,746 - #7 )
INFO  13:48:42,746 - #5 ;
INFO  13:48:42,746 - #4 }
INFO  13:48:42,746 - #4 }
ERROR 13:48:42,746 - Izvrsen [full Dodela vrednosti] oporavak od greske do ; u liniji 1
INFO  13:48:42,747 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  13:48:50,354 - Obrada ulaznog fajla test\program.mj
INFO  13:48:50,370 - #2 program
INFO  13:48:50,370 - #49 test301
INFO  13:48:50,370 - #12 const
INFO  13:48:50,371 - #49 int
INFO  13:48:50,371 - #49 nula
INFO  13:48:50,371 - #46 =
INFO  13:48:50,372 - #47 0
INFO  13:48:50,372 - #5 ;
INFO  13:48:50,372 - #12 const
INFO  13:48:50,372 - #49 char
INFO  13:48:50,372 - #49 pet
INFO  13:48:50,372 - #46 =
INFO  13:48:50,372 - #48 5
INFO  13:48:50,372 - #5 ;
INFO  13:48:50,372 - #49 int
INFO  13:48:50,373 - #49 x
INFO  13:48:50,373 - #5 ;
INFO  13:48:50,373 - #49 int
INFO  13:48:50,373 - #49 duz
INFO  13:48:50,373 - #5 ;
INFO  13:48:50,373 - #49 char
INFO  13:48:50,373 - #49 y
INFO  13:48:50,373 - #5 ;
INFO  13:48:50,373 - #49 int
INFO  13:48:50,373 - #49 n
INFO  13:48:50,373 - #11 [
INFO  13:48:50,373 - #10 ]
INFO  13:48:50,373 - #5 ;
INFO  13:48:50,373 - #49 bool
INFO  13:48:50,373 - #49 kek
INFO  13:48:50,374 - #5 ;
INFO  13:48:50,374 - #3 {
INFO  13:48:50,374 - #25 void
INFO  13:48:50,374 - #49 main
INFO  13:48:50,374 - #6 (
INFO  13:48:50,374 - #7 )
INFO  13:48:50,374 - #49 char
INFO  13:48:50,374 - #49 m
INFO  13:48:50,374 - #5 ;
INFO  13:48:50,374 - #49 bool
INFO  13:48:50,374 - #49 t
INFO  13:48:50,374 - #5 ;
INFO  13:48:50,374 - #3 {
INFO  13:48:50,375 - #49 n
INFO  13:48:50,375 - #46 =
INFO  13:48:50,375 - #32 new
INFO  13:48:50,375 - #49 int
INFO  13:48:50,375 - #11 [
INFO  13:48:50,375 - #47 66
INFO  13:48:50,375 - #10 ]
INFO  13:48:50,376 - #5 ;
INFO  13:48:50,376 - #4 }
INFO  13:48:50,376 - #4 }
INFO  13:48:50,377 - =====================SINTAKSNO_STABLO=========================
INFO  13:48:50,377 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsNo(
          ) [VarDeclarationsNo]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             m
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclPartStd(
           t
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorStd(
             n
            ) [DesignatorStd]
            Assign(
            ) [Assign]
            Expression(
              Expression1(
                Term(
                  FactorNewArr(
                    Type(
                     int
                    ) [Type]
                    Expression(
                      Expression1(
                        Term(
                          FactorNumconst(
                           66
                          ) [FactorNumconst]
                          NoMulopFactorList(
                          ) [NoMulopFactorList]
                        ) [Term]
                        NoAddopTermList(
                        ) [NoAddopTermList]
                      ) [Expression1]
                    ) [Expression]
                  ) [FactorNewArr]
                  NoMulopFactorList(
                  ) [NoMulopFactorList]
                ) [Term]
                NoAddopTermList(
                ) [NoAddopTermList]
              ) [Expression1]
            ) [Expression]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  13:48:50,381 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  13:48:50,381 - Deklarisana konstanta nula na liniji 5
INFO  13:48:50,381 - Deklarisana konstanta pet na liniji 6
INFO  13:48:50,382 - Deklarisana promenljiva x na liniji 7
INFO  13:48:50,382 - Deklarisana promenljiva duz na liniji 8
INFO  13:48:50,382 - Deklarisana promenljiva y na liniji 9
INFO  13:48:50,382 - Deklarisan niz n na liniji 10
INFO  13:48:50,382 - Deklarisana promenljiva kek na liniji 11
INFO  13:48:50,382 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  13:48:50,382 - Deklarisana promenljiva m na liniji 14
INFO  13:48:50,382 - Deklarisana promenljiva t na liniji 15
INFO  13:48:50,382 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  13:48:50,382 - Kraj semanticke obrade programa test301
INFO  13:48:50,382 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  13:48:50,382 - ======================GENERISANJE_KODA========================
INFO  13:48:50,384 - Generisanje koda uspesno zavrseno!
INFO  13:48:50,385 - Generisanje izlaznog fajla test\program.obj
INFO  13:48:50,385 - ==============================================================
INFO  13:50:48,556 - Obrada ulaznog fajla test\program.mj
INFO  13:50:48,573 - #2 program
INFO  13:50:48,573 - #49 test301
INFO  13:50:48,573 - #12 const
INFO  13:50:48,573 - #49 int
INFO  13:50:48,573 - #49 nula
INFO  13:50:48,574 - #46 =
INFO  13:50:48,574 - #47 0
INFO  13:50:48,574 - #5 ;
INFO  13:50:48,574 - #12 const
INFO  13:50:48,574 - #49 char
INFO  13:50:48,575 - #49 pet
INFO  13:50:48,575 - #46 =
INFO  13:50:48,575 - #48 5
INFO  13:50:48,575 - #5 ;
INFO  13:50:48,575 - #49 int
INFO  13:50:48,575 - #49 x
INFO  13:50:48,575 - #5 ;
INFO  13:50:48,575 - #49 int
INFO  13:50:48,575 - #49 duz
INFO  13:50:48,575 - #5 ;
INFO  13:50:48,575 - #49 char
INFO  13:50:48,575 - #49 y
INFO  13:50:48,575 - #5 ;
INFO  13:50:48,575 - #49 int
INFO  13:50:48,576 - #49 n
INFO  13:50:48,576 - #11 [
INFO  13:50:48,576 - #10 ]
INFO  13:50:48,576 - #5 ;
INFO  13:50:48,576 - #49 bool
INFO  13:50:48,576 - #49 kek
INFO  13:50:48,576 - #5 ;
INFO  13:50:48,576 - #3 {
INFO  13:50:48,576 - #25 void
INFO  13:50:48,576 - #49 main
INFO  13:50:48,576 - #6 (
INFO  13:50:48,576 - #7 )
INFO  13:50:48,576 - #49 char
INFO  13:50:48,577 - #49 m
INFO  13:50:48,577 - #5 ;
INFO  13:50:48,577 - #49 bool
INFO  13:50:48,577 - #49 t
INFO  13:50:48,577 - #5 ;
INFO  13:50:48,577 - #3 {
INFO  13:50:48,577 - #49 n
INFO  13:50:48,577 - #46 =
INFO  13:50:48,577 - #32 new
INFO  13:50:48,578 - #49 int
INFO  13:50:48,578 - #11 [
INFO  13:50:48,578 - #47 66
INFO  13:50:48,578 - #10 ]
INFO  13:50:48,578 - #5 ;
INFO  13:50:48,579 - #49 ord
INFO  13:50:48,579 - #6 (
ERROR 13:50:48,579 - 
Sintaksna greska na liniji 18
INFO  13:50:48,579 - #47 7
INFO  13:50:48,579 - #7 )
INFO  13:50:48,579 - #5 ;
INFO  13:50:48,579 - #4 }
INFO  13:50:48,579 - #4 }
ERROR 13:50:48,579 - Izvrsen [full Dodela vrednosti] oporavak od greske do ; u liniji 1
INFO  13:50:48,580 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:08:55,322 - Obrada ulaznog fajla test\program.mj
INFO  14:08:55,339 - #2 program
INFO  14:08:55,339 - #49 test301
INFO  14:08:55,339 - #12 const
INFO  14:08:55,340 - #49 int
INFO  14:08:55,340 - #49 nula
INFO  14:08:55,340 - #46 =
INFO  14:08:55,340 - #47 0
INFO  14:08:55,340 - #5 ;
INFO  14:08:55,341 - #12 const
INFO  14:08:55,341 - #49 char
INFO  14:08:55,341 - #49 pet
INFO  14:08:55,341 - #46 =
INFO  14:08:55,341 - #48 5
INFO  14:08:55,341 - #5 ;
INFO  14:08:55,341 - #49 int
INFO  14:08:55,341 - #49 x
INFO  14:08:55,341 - #5 ;
INFO  14:08:55,341 - #49 int
INFO  14:08:55,342 - #49 duz
INFO  14:08:55,342 - #5 ;
INFO  14:08:55,342 - #49 char
INFO  14:08:55,342 - #49 y
INFO  14:08:55,342 - #5 ;
INFO  14:08:55,342 - #49 int
INFO  14:08:55,342 - #49 n
INFO  14:08:55,342 - #11 [
INFO  14:08:55,342 - #10 ]
INFO  14:08:55,342 - #5 ;
INFO  14:08:55,342 - #49 bool
INFO  14:08:55,342 - #49 kek
INFO  14:08:55,342 - #5 ;
INFO  14:08:55,342 - #3 {
INFO  14:08:55,342 - #25 void
INFO  14:08:55,342 - #49 main
INFO  14:08:55,342 - #6 (
INFO  14:08:55,342 - #7 )
INFO  14:08:55,343 - #49 char
INFO  14:08:55,343 - #49 m
INFO  14:08:55,343 - #5 ;
INFO  14:08:55,343 - #49 bool
INFO  14:08:55,343 - #49 t
INFO  14:08:55,343 - #5 ;
INFO  14:08:55,343 - #49 int
INFO  14:08:55,343 - #49 loc
INFO  14:08:55,343 - #5 ;
INFO  14:08:55,343 - #3 {
INFO  14:08:55,343 - #49 n
INFO  14:08:55,344 - #46 =
INFO  14:08:55,344 - #32 new
INFO  14:08:55,344 - #49 int
INFO  14:08:55,344 - #11 [
INFO  14:08:55,344 - #47 66
INFO  14:08:55,344 - #10 ]
INFO  14:08:55,345 - #5 ;
INFO  14:08:55,345 - #49 ord
INFO  14:08:55,345 - #6 (
ERROR 14:08:55,345 - 
Sintaksna greska na liniji 19
INFO  14:08:55,345 - #47 7
INFO  14:08:55,345 - #7 )
INFO  14:08:55,345 - #5 ;
INFO  14:08:55,346 - #49 loc
INFO  14:08:55,346 - #46 =
INFO  14:08:55,346 - #50 true
ERROR 14:08:55,346 - Izvrsen [full Dodela vrednosti] oporavak od greske do ; u liniji 1
INFO  14:08:55,346 - #44 ?
INFO  14:08:55,347 - #47 5
INFO  14:08:55,347 - #27 :
INFO  14:08:55,347 - #47 10
INFO  14:08:55,347 - #5 ;
INFO  14:08:55,347 - #9 print
INFO  14:08:55,347 - #6 (
INFO  14:08:55,347 - #49 loc
INFO  14:08:55,347 - #7 )
INFO  14:08:55,348 - #5 ;
INFO  14:08:55,348 - #4 }
INFO  14:08:55,348 - #4 }
INFO  14:08:55,348 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:09:02,922 - Obrada ulaznog fajla test\program.mj
INFO  14:09:02,938 - #2 program
INFO  14:09:02,938 - #49 test301
INFO  14:09:02,938 - #12 const
INFO  14:09:02,939 - #49 int
INFO  14:09:02,939 - #49 nula
INFO  14:09:02,939 - #46 =
INFO  14:09:02,939 - #47 0
INFO  14:09:02,939 - #5 ;
INFO  14:09:02,940 - #12 const
INFO  14:09:02,940 - #49 char
INFO  14:09:02,940 - #49 pet
INFO  14:09:02,940 - #46 =
INFO  14:09:02,940 - #48 5
INFO  14:09:02,940 - #5 ;
INFO  14:09:02,940 - #49 int
INFO  14:09:02,940 - #49 x
INFO  14:09:02,940 - #5 ;
INFO  14:09:02,941 - #49 int
INFO  14:09:02,941 - #49 duz
INFO  14:09:02,941 - #5 ;
INFO  14:09:02,941 - #49 char
INFO  14:09:02,941 - #49 y
INFO  14:09:02,941 - #5 ;
INFO  14:09:02,941 - #49 int
INFO  14:09:02,941 - #49 n
INFO  14:09:02,941 - #11 [
INFO  14:09:02,941 - #10 ]
INFO  14:09:02,941 - #5 ;
INFO  14:09:02,941 - #49 bool
INFO  14:09:02,941 - #49 kek
INFO  14:09:02,941 - #5 ;
INFO  14:09:02,941 - #3 {
INFO  14:09:02,941 - #25 void
INFO  14:09:02,941 - #49 main
INFO  14:09:02,942 - #6 (
INFO  14:09:02,942 - #7 )
INFO  14:09:02,942 - #49 char
INFO  14:09:02,942 - #49 m
INFO  14:09:02,942 - #5 ;
INFO  14:09:02,942 - #49 bool
INFO  14:09:02,942 - #49 t
INFO  14:09:02,942 - #5 ;
INFO  14:09:02,942 - #49 int
INFO  14:09:02,942 - #49 loc
INFO  14:09:02,942 - #5 ;
INFO  14:09:02,942 - #3 {
INFO  14:09:02,943 - #49 n
INFO  14:09:02,943 - #46 =
INFO  14:09:02,943 - #32 new
INFO  14:09:02,943 - #49 int
INFO  14:09:02,943 - #11 [
INFO  14:09:02,943 - #47 66
INFO  14:09:02,943 - #10 ]
INFO  14:09:02,944 - #5 ;
INFO  14:09:02,944 - #49 loc
INFO  14:09:02,944 - #46 =
INFO  14:09:02,944 - #50 true
INFO  14:09:02,944 - #44 ?
INFO  14:09:02,945 - #47 5
INFO  14:09:02,945 - #27 :
INFO  14:09:02,945 - #47 10
INFO  14:09:02,945 - #5 ;
INFO  14:09:02,945 - #9 print
INFO  14:09:02,946 - #6 (
INFO  14:09:02,946 - #49 loc
INFO  14:09:02,946 - #7 )
INFO  14:09:02,946 - #5 ;
INFO  14:09:02,946 - #4 }
INFO  14:09:02,946 - #4 }
INFO  14:09:02,946 - =====================SINTAKSNO_STABLO=========================
INFO  14:09:02,947 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 n
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorNewArr(
                        Type(
                         int
                        ) [Type]
                        Expression(
                          Expression1(
                            Term(
                              FactorNumconst(
                               66
                              ) [FactorNumconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorNewArr]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               loc
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              TernaryOp(
                TernaryCond(
                  Expression1(
                    Term(
                      FactorBoolconst(
                       true
                      ) [FactorBoolconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [TernaryCond]
                TernaryExpr1(
                  Expression1(
                    Term(
                      FactorNumconst(
                       5
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [TernaryExpr1]
                TernaryExpr2(
                  Expression1(
                    Term(
                      FactorNumconst(
                       10
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [TernaryExpr2]
              ) [TernaryOp]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  14:09:02,951 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  14:09:02,951 - Deklarisana konstanta nula na liniji 5
INFO  14:09:02,951 - Deklarisana konstanta pet na liniji 6
INFO  14:09:02,951 - Deklarisana promenljiva x na liniji 7
INFO  14:09:02,951 - Deklarisana promenljiva duz na liniji 8
INFO  14:09:02,951 - Deklarisana promenljiva y na liniji 9
INFO  14:09:02,951 - Deklarisan niz n na liniji 10
INFO  14:09:02,951 - Deklarisana promenljiva kek na liniji 11
INFO  14:09:02,951 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  14:09:02,951 - Deklarisana promenljiva m na liniji 14
INFO  14:09:02,951 - Deklarisana promenljiva t na liniji 15
INFO  14:09:02,951 - Deklarisana promenljiva loc na liniji 16
INFO  14:09:02,952 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  14:09:02,952 - Kraj semanticke obrade programa test301
INFO  14:09:02,952 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  14:09:02,952 - ======================GENERISANJE_KODA========================
INFO  14:09:02,954 - Generisanje koda uspesno zavrseno!
INFO  14:09:02,954 - Generisanje izlaznog fajla test\program.obj
INFO  14:09:02,954 - ==============================================================
INFO  14:09:19,151 - Obrada ulaznog fajla test\program.mj
INFO  14:09:19,168 - #2 program
INFO  14:09:19,168 - #49 test301
INFO  14:09:19,168 - #12 const
INFO  14:09:19,169 - #49 int
INFO  14:09:19,169 - #49 nula
INFO  14:09:19,169 - #46 =
INFO  14:09:19,169 - #47 0
INFO  14:09:19,169 - #5 ;
INFO  14:09:19,170 - #12 const
INFO  14:09:19,170 - #49 char
INFO  14:09:19,170 - #49 pet
INFO  14:09:19,170 - #46 =
INFO  14:09:19,170 - #48 5
INFO  14:09:19,170 - #5 ;
INFO  14:09:19,170 - #49 int
INFO  14:09:19,170 - #49 x
INFO  14:09:19,170 - #5 ;
INFO  14:09:19,171 - #49 int
INFO  14:09:19,171 - #49 duz
INFO  14:09:19,171 - #5 ;
INFO  14:09:19,171 - #49 char
INFO  14:09:19,171 - #49 y
INFO  14:09:19,171 - #5 ;
INFO  14:09:19,171 - #49 int
INFO  14:09:19,171 - #49 n
INFO  14:09:19,171 - #11 [
INFO  14:09:19,171 - #10 ]
INFO  14:09:19,171 - #5 ;
INFO  14:09:19,171 - #49 bool
INFO  14:09:19,171 - #49 kek
INFO  14:09:19,171 - #5 ;
INFO  14:09:19,171 - #3 {
INFO  14:09:19,171 - #25 void
INFO  14:09:19,171 - #49 main
INFO  14:09:19,171 - #6 (
INFO  14:09:19,171 - #7 )
INFO  14:09:19,172 - #49 char
INFO  14:09:19,172 - #49 m
INFO  14:09:19,172 - #5 ;
INFO  14:09:19,172 - #49 bool
INFO  14:09:19,172 - #49 t
INFO  14:09:19,172 - #5 ;
INFO  14:09:19,172 - #49 int
INFO  14:09:19,172 - #49 loc
INFO  14:09:19,172 - #5 ;
INFO  14:09:19,172 - #3 {
INFO  14:09:19,172 - #49 n
INFO  14:09:19,173 - #46 =
INFO  14:09:19,173 - #32 new
INFO  14:09:19,173 - #49 int
INFO  14:09:19,173 - #11 [
INFO  14:09:19,173 - #47 66
INFO  14:09:19,173 - #10 ]
INFO  14:09:19,174 - #5 ;
INFO  14:09:19,174 - #49 loc
INFO  14:09:19,174 - #46 =
INFO  14:09:19,174 - #50 false
INFO  14:09:19,174 - #44 ?
INFO  14:09:19,175 - #47 5
INFO  14:09:19,175 - #27 :
INFO  14:09:19,175 - #47 10
INFO  14:09:19,175 - #5 ;
INFO  14:09:19,175 - #9 print
INFO  14:09:19,175 - #6 (
INFO  14:09:19,175 - #49 loc
INFO  14:09:19,175 - #7 )
INFO  14:09:19,176 - #5 ;
INFO  14:09:19,176 - #4 }
INFO  14:09:19,176 - #4 }
INFO  14:09:19,176 - =====================SINTAKSNO_STABLO=========================
INFO  14:09:19,177 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationListNo(
                ) [DeclarationListNo]
                DeclPartConst(
                  ConstDeclaration(
                    Type(
                     int
                    ) [Type]
                    ConstDeclPart(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDeclPart]
                    ConstTypeNo(
                    ) [ConstTypeNo]
                  ) [ConstDeclaration]
                ) [DeclPartConst]
              ) [DeclarationList]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   char
                  ) [Type]
                  ConstDeclPart(
                   pet
                    CharConst(
                     5
                    ) [CharConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartVar(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclPartStd(
                 x
                ) [VarDeclPartStd]
                VarDeclarationListNone(
                ) [VarDeclarationListNone]
              ) [VarDeclaration]
            ) [DeclPartVar]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 n
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorNewArr(
                        Type(
                         int
                        ) [Type]
                        Expression(
                          Expression1(
                            Term(
                              FactorNumconst(
                               66
                              ) [FactorNumconst]
                              NoMulopFactorList(
                              ) [NoMulopFactorList]
                            ) [Term]
                            NoAddopTermList(
                            ) [NoAddopTermList]
                          ) [Expression1]
                        ) [Expression]
                      ) [FactorNewArr]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               loc
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              TernaryOp(
                TernaryCond(
                  Expression1(
                    Term(
                      FactorBoolconst(
                       false
                      ) [FactorBoolconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [TernaryCond]
                TernaryExpr1(
                  Expression1(
                    Term(
                      FactorNumconst(
                       5
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [TernaryExpr1]
                TernaryExpr2(
                  Expression1(
                    Term(
                      FactorNumconst(
                       10
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [TernaryExpr2]
              ) [TernaryOp]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  14:09:19,180 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  14:09:19,180 - Deklarisana konstanta nula na liniji 5
INFO  14:09:19,180 - Deklarisana konstanta pet na liniji 6
INFO  14:09:19,181 - Deklarisana promenljiva x na liniji 7
INFO  14:09:19,181 - Deklarisana promenljiva duz na liniji 8
INFO  14:09:19,181 - Deklarisana promenljiva y na liniji 9
INFO  14:09:19,181 - Deklarisan niz n na liniji 10
INFO  14:09:19,181 - Deklarisana promenljiva kek na liniji 11
INFO  14:09:19,181 - Obrada metode main bez povratne vrednosti na liniji 13
INFO  14:09:19,181 - Deklarisana promenljiva m na liniji 14
INFO  14:09:19,181 - Deklarisana promenljiva t na liniji 15
INFO  14:09:19,181 - Deklarisana promenljiva loc na liniji 16
INFO  14:09:19,181 - Zavrsetak obrade metode (funkcije) main na liniji 13
INFO  14:09:19,181 - Kraj semanticke obrade programa test301
INFO  14:09:19,181 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  14:09:19,181 - ======================GENERISANJE_KODA========================
INFO  14:09:19,183 - Generisanje koda uspesno zavrseno!
INFO  14:09:19,184 - Generisanje izlaznog fajla test\program.obj
INFO  14:09:19,184 - ==============================================================
INFO  14:09:56,120 - Obrada ulaznog fajla test\program.mj
INFO  14:09:56,136 - #2 program
INFO  14:09:56,136 - #49 test301
INFO  14:09:56,136 - #12 const
INFO  14:09:56,137 - #49 int
INFO  14:09:56,137 - #49 nula
INFO  14:09:56,137 - #46 =
INFO  14:09:56,137 - #47 0
INFO  14:09:56,137 - #5 ;
INFO  14:09:56,137 - #12 const
INFO  14:09:56,138 - #49 char
INFO  14:09:56,138 - #49 pet
INFO  14:09:56,138 - #46 =
INFO  14:09:56,138 - #48 5
INFO  14:09:56,138 - #5 ;
INFO  14:09:56,138 - #49 int
INFO  14:09:56,138 - #49 x
INFO  14:09:56,138 - #5 ;
INFO  14:09:56,138 - #49 int
INFO  14:09:56,138 - #49 duz
INFO  14:09:56,138 - #5 ;
INFO  14:09:56,138 - #49 char
INFO  14:09:56,139 - #49 y
INFO  14:09:56,139 - #5 ;
INFO  14:09:56,139 - #49 int
INFO  14:09:56,139 - #49 n
INFO  14:09:56,139 - #11 [
INFO  14:09:56,139 - #10 ]
INFO  14:09:56,139 - #5 ;
INFO  14:09:56,139 - #49 bool
INFO  14:09:56,139 - #49 kek
INFO  14:09:56,139 - #5 ;
INFO  14:09:56,139 - #3 {
INFO  14:09:56,139 - #25 void
INFO  14:09:56,139 - #49 main
INFO  14:09:56,139 - #6 (
INFO  14:09:56,139 - #7 )
INFO  14:09:56,139 - #49 char
INFO  14:09:56,140 - #49 m
INFO  14:09:56,140 - #5 ;
INFO  14:09:56,140 - #49 bool
INFO  14:09:56,140 - #49 t
INFO  14:09:56,140 - #5 ;
INFO  14:09:56,140 - #49 int
INFO  14:09:56,140 - #49 loc
INFO  14:09:56,140 - #5 ;
INFO  14:09:56,140 - #3 {
INFO  14:09:56,140 - #49 n
INFO  14:09:56,140 - #46 =
INFO  14:09:56,140 - #32 new
INFO  14:09:56,141 - #49 int
INFO  14:09:56,141 - #11 [
INFO  14:09:56,141 - #47 66
INFO  14:09:56,141 - #10 ]
INFO  14:09:56,142 - #5 ;
INFO  14:09:56,142 - #49 loc
INFO  14:09:56,142 - #46 =
INFO  14:09:56,142 - #50 false
INFO  14:09:56,142 - #44 ?
INFO  14:09:56,142 - #47 5
INFO  14:09:56,142 - #27 :
INFO  14:09:56,143 - #5 ;
ERROR 14:09:56,143 - 
Sintaksna greska na liniji 19
INFO  14:09:56,143 - #9 print
INFO  14:09:56,143 - #6 (
INFO  14:09:56,143 - #49 loc
ERROR 14:09:56,143 - Izvrsen [Dodela vrednosti] oporavak od greske do ; u liniji 19
INFO  14:09:56,144 - #7 )
INFO  14:09:56,144 - #5 ;
INFO  14:09:56,144 - #4 }
INFO  14:09:56,144 - #4 }
INFO  14:09:56,144 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:10:47,964 - Obrada ulaznog fajla test\program.mj
INFO  14:10:47,980 - #2 program
INFO  14:10:47,981 - #49 test301
INFO  14:10:47,981 - #12 const
INFO  14:10:47,981 - #49 int
INFO  14:10:47,981 - #49 nula
INFO  14:10:47,981 - #46 =
INFO  14:10:47,981 - #47 0
INFO  14:10:47,982 - #5 ;
INFO  14:10:47,982 - #12 const
INFO  14:10:47,982 - #49 char
INFO  14:10:47,982 - #49 pet
INFO  14:10:47,982 - #46 =
INFO  14:10:47,982 - #48 5
INFO  14:10:47,982 - #5 ;
INFO  14:10:47,982 - #49 int
INFO  14:10:47,983 - #49 x
INFO  14:10:47,983 - #5 ;
INFO  14:10:47,983 - #49 int
INFO  14:10:47,983 - #49 duz
INFO  14:10:47,983 - #5 ;
INFO  14:10:47,983 - #49 char
INFO  14:10:47,983 - #49 y
INFO  14:10:47,983 - #5 ;
INFO  14:10:47,983 - #49 int
INFO  14:10:47,983 - #49 n
INFO  14:10:47,983 - #11 [
INFO  14:10:47,983 - #10 ]
INFO  14:10:47,983 - #5 ;
INFO  14:10:47,983 - #49 bool
INFO  14:10:47,983 - #49 kek
INFO  14:10:47,984 - #5 ;
INFO  14:10:47,984 - #3 {
INFO  14:10:47,984 - #25 void
INFO  14:10:47,984 - #49 main
INFO  14:10:47,984 - #6 (
INFO  14:10:47,984 - #7 )
INFO  14:10:47,984 - #49 char
INFO  14:10:47,984 - #49 m
INFO  14:10:47,984 - #5 ;
INFO  14:10:47,984 - #49 bool
INFO  14:10:47,985 - #49 t
INFO  14:10:47,985 - #5 ;
INFO  14:10:47,985 - #49 int
INFO  14:10:47,985 - #49 loc
INFO  14:10:47,985 - #5 ;
INFO  14:10:47,985 - #3 {
INFO  14:10:47,985 - #49 n
INFO  14:10:47,985 - #46 =
INFO  14:10:47,985 - #32 new
INFO  14:10:47,986 - #49 int
INFO  14:10:47,986 - #11 [
INFO  14:10:47,986 - #47 66
INFO  14:10:47,986 - #10 ]
INFO  14:10:47,986 - #5 ;
INFO  14:10:47,987 - #49 loc
INFO  14:10:47,987 - #46 =
INFO  14:10:47,987 - #50 false
INFO  14:10:47,987 - #44 ?
INFO  14:10:47,987 - #27 :
ERROR 14:10:47,987 - 
Sintaksna greska na liniji 19
INFO  14:10:47,987 - #47 10
INFO  14:10:47,987 - #5 ;
INFO  14:10:47,987 - #9 print
ERROR 14:10:47,988 - Izvrsen [Dodela vrednosti] oporavak od greske do ; u liniji 19
INFO  14:10:47,988 - #6 (
INFO  14:10:47,988 - #49 loc
INFO  14:10:47,988 - #7 )
INFO  14:10:47,988 - #5 ;
INFO  14:10:47,988 - #4 }
INFO  14:10:47,989 - #4 }
INFO  14:10:47,989 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:11:40,640 - Obrada ulaznog fajla test\program.mj
INFO  14:11:40,657 - #2 program
INFO  14:11:40,657 - #49 test301
INFO  14:11:40,657 - #12 const
INFO  14:11:40,657 - #49 int
INFO  14:11:40,657 - #49 nula
INFO  14:11:40,658 - #46 =
INFO  14:11:40,658 - #47 0
INFO  14:11:40,658 - #5 ;
INFO  14:11:40,658 - #12 const
INFO  14:11:40,658 - #49 char
INFO  14:11:40,658 - #49 pet
INFO  14:11:40,658 - #46 =
INFO  14:11:40,659 - #48 5
INFO  14:11:40,659 - #5 ;
INFO  14:11:40,659 - #49 int
INFO  14:11:40,659 - #49 x
INFO  14:11:40,659 - #5 ;
INFO  14:11:40,659 - #49 int
INFO  14:11:40,659 - #49 duz
INFO  14:11:40,659 - #5 ;
INFO  14:11:40,659 - #49 char
INFO  14:11:40,659 - #49 y
INFO  14:11:40,659 - #5 ;
INFO  14:11:40,659 - #49 int
INFO  14:11:40,659 - #49 n
INFO  14:11:40,659 - #11 [
INFO  14:11:40,660 - #10 ]
INFO  14:11:40,660 - #5 ;
INFO  14:11:40,660 - #49 bool
INFO  14:11:40,660 - #49 kek
INFO  14:11:40,660 - #5 ;
INFO  14:11:40,660 - #3 {
INFO  14:11:40,660 - #25 void
INFO  14:11:40,660 - #49 main
INFO  14:11:40,660 - #6 (
INFO  14:11:40,660 - #7 )
INFO  14:11:40,660 - #49 char
INFO  14:11:40,660 - #49 m
INFO  14:11:40,661 - #5 ;
INFO  14:11:40,661 - #49 bool
INFO  14:11:40,661 - #49 t
INFO  14:11:40,661 - #5 ;
INFO  14:11:40,661 - #49 int
INFO  14:11:40,661 - #49 loc
INFO  14:11:40,661 - #5 ;
INFO  14:11:40,661 - #3 {
INFO  14:11:40,661 - #49 n
INFO  14:11:40,661 - #46 =
INFO  14:11:40,661 - #32 new
INFO  14:11:40,662 - #49 int
INFO  14:11:40,662 - #11 [
INFO  14:11:40,662 - #47 66
INFO  14:11:40,662 - #10 ]
INFO  14:11:40,663 - #5 ;
INFO  14:11:40,663 - #49 loc
INFO  14:11:40,663 - #46 =
INFO  14:11:40,663 - #49 loc
INFO  14:11:40,663 - #31 +
INFO  14:11:40,663 - #5 ;
ERROR 14:11:40,663 - 
Sintaksna greska na liniji 19
INFO  14:11:40,663 - #9 print
INFO  14:11:40,663 - #6 (
INFO  14:11:40,663 - #49 loc
ERROR 14:11:40,663 - Izvrsen [Dodela vrednosti] oporavak od greske do ; u liniji 19
INFO  14:11:40,664 - #7 )
INFO  14:11:40,664 - #5 ;
INFO  14:11:40,664 - #4 }
INFO  14:11:40,664 - #4 }
INFO  14:11:40,664 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:11:46,998 - Obrada ulaznog fajla test\program.mj
INFO  14:11:47,014 - #2 program
INFO  14:11:47,014 - #49 test301
INFO  14:11:47,014 - #12 const
INFO  14:11:47,015 - #49 int
INFO  14:11:47,015 - #49 nula
INFO  14:11:47,015 - #46 =
INFO  14:11:47,015 - #47 0
INFO  14:11:47,015 - #5 ;
INFO  14:11:47,016 - #12 const
INFO  14:11:47,016 - #49 char
INFO  14:11:47,016 - #49 pet
INFO  14:11:47,016 - #46 =
INFO  14:11:47,016 - #48 5
INFO  14:11:47,016 - #5 ;
INFO  14:11:47,017 - #49 int
INFO  14:11:47,017 - #49 x
INFO  14:11:47,017 - #5 ;
INFO  14:11:47,017 - #49 int
INFO  14:11:47,017 - #49 duz
INFO  14:11:47,017 - #5 ;
INFO  14:11:47,017 - #49 char
INFO  14:11:47,017 - #49 y
INFO  14:11:47,017 - #5 ;
INFO  14:11:47,017 - #49 int
INFO  14:11:47,017 - #49 n
INFO  14:11:47,017 - #11 [
INFO  14:11:47,017 - #10 ]
INFO  14:11:47,017 - #5 ;
INFO  14:11:47,017 - #49 bool
INFO  14:11:47,018 - #49 kek
INFO  14:11:47,018 - #5 ;
INFO  14:11:47,018 - #3 {
INFO  14:11:47,018 - #25 void
INFO  14:11:47,018 - #49 main
INFO  14:11:47,018 - #6 (
INFO  14:11:47,018 - #7 )
INFO  14:11:47,018 - #49 char
INFO  14:11:47,018 - #49 m
INFO  14:11:47,018 - #5 ;
INFO  14:11:47,018 - #49 bool
INFO  14:11:47,018 - #49 t
INFO  14:11:47,019 - #5 ;
INFO  14:11:47,019 - #49 int
INFO  14:11:47,019 - #49 loc
INFO  14:11:47,019 - #5 ;
INFO  14:11:47,019 - #3 {
INFO  14:11:47,019 - #49 n
INFO  14:11:47,019 - #46 =
INFO  14:11:47,019 - #32 new
INFO  14:11:47,019 - #49 int
INFO  14:11:47,020 - #11 [
INFO  14:11:47,020 - #47 66
INFO  14:11:47,020 - #10 ]
INFO  14:11:47,020 - #5 ;
INFO  14:11:47,021 - #49 loc
INFO  14:11:47,021 - #46 =
INFO  14:11:47,021 - #49 loc
INFO  14:11:47,021 - #31 +
INFO  14:11:47,021 - #9 print
ERROR 14:11:47,021 - 
Sintaksna greska na liniji 20
INFO  14:11:47,021 - #6 (
INFO  14:11:47,021 - #49 loc
INFO  14:11:47,021 - #7 )
INFO  14:11:47,021 - #5 ;
INFO  14:11:47,021 - #4 }
INFO  14:11:47,021 - #4 }
ERROR 14:11:47,022 - Izvrsen [Dodela vrednosti] oporavak od greske do ; u liniji 19
INFO  14:11:47,022 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:12:26,085 - Obrada ulaznog fajla test\program.mj
INFO  14:12:26,102 - #2 program
INFO  14:12:26,102 - #49 test301
INFO  14:12:26,102 - #12 const
INFO  14:12:26,102 - #49 int
INFO  14:12:26,102 - #49 nula
INFO  14:12:26,103 - #46 =
INFO  14:12:26,103 - #47 0
INFO  14:12:26,103 - #5 ;
INFO  14:12:26,103 - #12 const
INFO  14:12:26,104 - #49 char
INFO  14:12:26,104 - #49 pet
INFO  14:12:26,104 - #46 =
INFO  14:12:26,104 - #48 5
INFO  14:12:26,104 - #5 ;
INFO  14:12:26,104 - #49 int
INFO  14:12:26,104 - #49 x
INFO  14:12:26,104 - #5 ;
INFO  14:12:26,104 - #49 int
INFO  14:12:26,104 - #49 duz
INFO  14:12:26,104 - #5 ;
INFO  14:12:26,104 - #49 char
INFO  14:12:26,104 - #49 y
INFO  14:12:26,104 - #5 ;
INFO  14:12:26,105 - #49 int
INFO  14:12:26,105 - #49 n
INFO  14:12:26,105 - #11 [
INFO  14:12:26,105 - #10 ]
INFO  14:12:26,105 - #5 ;
INFO  14:12:26,105 - #49 bool
INFO  14:12:26,105 - #49 kek
INFO  14:12:26,105 - #5 ;
INFO  14:12:26,105 - #3 {
INFO  14:12:26,105 - #25 void
INFO  14:12:26,105 - #49 main
INFO  14:12:26,105 - #6 (
INFO  14:12:26,105 - #7 )
INFO  14:12:26,105 - #49 char
INFO  14:12:26,106 - #49 m
INFO  14:12:26,106 - #5 ;
INFO  14:12:26,106 - #49 bool
INFO  14:12:26,106 - #49 t
INFO  14:12:26,106 - #5 ;
INFO  14:12:26,106 - #49 int
INFO  14:12:26,106 - #49 loc
INFO  14:12:26,106 - #5 ;
INFO  14:12:26,106 - #3 {
INFO  14:12:26,106 - #49 n
INFO  14:12:26,106 - #46 =
INFO  14:12:26,106 - #32 new
INFO  14:12:26,107 - #49 int
INFO  14:12:26,107 - #11 [
INFO  14:12:26,107 - #47 66
INFO  14:12:26,107 - #10 ]
INFO  14:12:26,108 - #5 ;
INFO  14:12:26,108 - #49 loc
INFO  14:12:26,108 - #46 =
INFO  14:12:26,108 - #49 loc
INFO  14:12:26,108 - #31 +
INFO  14:12:26,108 - #5 ;
ERROR 14:12:26,108 - 
Sintaksna greska na liniji 19
INFO  14:12:26,108 - #9 print
INFO  14:12:26,108 - #6 (
INFO  14:12:26,108 - #49 loc
ERROR 14:12:26,109 - Izvrsen [Dodela vrednosti] oporavak od greske do ; u liniji 19
INFO  14:12:26,109 - #7 )
INFO  14:12:26,109 - #5 ;
INFO  14:12:26,109 - #4 }
INFO  14:12:26,109 - #4 }
INFO  14:12:26,110 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:13:17,361 - Obrada ulaznog fajla test\program.mj
INFO  14:13:17,378 - #2 program
INFO  14:13:17,378 - #49 test301
INFO  14:13:17,378 - #12 const
INFO  14:13:17,378 - #49 int
INFO  14:13:17,378 - #49 nula
INFO  14:13:17,379 - #46 =
INFO  14:13:17,379 - #47 0
INFO  14:13:17,379 - #5 ;
INFO  14:13:17,379 - #12 const
INFO  14:13:17,379 - #49 char
INFO  14:13:17,379 - #49 pet
INFO  14:13:17,379 - #46 =
INFO  14:13:17,380 - #48 5
INFO  14:13:17,380 - #5 ;
INFO  14:13:17,380 - #49 int
INFO  14:13:17,380 - #49 x
INFO  14:13:17,380 - #5 ;
INFO  14:13:17,380 - #49 int
INFO  14:13:17,380 - #49 duz
INFO  14:13:17,380 - #5 ;
INFO  14:13:17,380 - #49 char
INFO  14:13:17,380 - #49 y
INFO  14:13:17,380 - #5 ;
INFO  14:13:17,380 - #49 int
INFO  14:13:17,380 - #49 n
INFO  14:13:17,380 - #11 [
INFO  14:13:17,380 - #10 ]
INFO  14:13:17,381 - #5 ;
INFO  14:13:17,381 - #49 bool
INFO  14:13:17,381 - #49 kek
INFO  14:13:17,381 - #5 ;
INFO  14:13:17,381 - #3 {
INFO  14:13:17,381 - #25 void
INFO  14:13:17,381 - #49 main
INFO  14:13:17,381 - #6 (
INFO  14:13:17,381 - #7 )
INFO  14:13:17,381 - #49 char
INFO  14:13:17,381 - #49 m
INFO  14:13:17,381 - #5 ;
INFO  14:13:17,381 - #49 bool
INFO  14:13:17,382 - #49 t
INFO  14:13:17,382 - #5 ;
INFO  14:13:17,382 - #49 int
INFO  14:13:17,382 - #49 loc
INFO  14:13:17,382 - #5 ;
INFO  14:13:17,382 - #3 {
INFO  14:13:17,382 - #49 n
INFO  14:13:17,382 - #46 =
INFO  14:13:17,382 - #32 new
INFO  14:13:17,383 - #49 int
INFO  14:13:17,383 - #11 [
INFO  14:13:17,383 - #47 66
INFO  14:13:17,383 - #10 ]
INFO  14:13:17,383 - #5 ;
INFO  14:13:17,384 - #49 chr
INFO  14:13:17,384 - #6 (
ERROR 14:13:17,384 - 
Sintaksna greska na liniji 19
INFO  14:13:17,384 - #47 40
INFO  14:13:17,384 - #7 )
INFO  14:13:17,384 - #5 ;
INFO  14:13:17,384 - #9 print
INFO  14:13:17,384 - #6 (
INFO  14:13:17,384 - #49 loc
ERROR 14:13:17,384 - Izvrsen [full Dodela vrednosti] oporavak od greske do ; u liniji 1
INFO  14:13:17,385 - #7 )
INFO  14:13:17,385 - #5 ;
INFO  14:13:17,385 - #4 }
INFO  14:13:17,385 - #4 }
INFO  14:13:17,385 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:14:54,049 - Obrada ulaznog fajla test\program.mj
INFO  14:14:54,065 - #2 program
INFO  14:14:54,065 - #49 test301
INFO  14:14:54,065 - #12 const
INFO  14:14:54,066 - #49 int
INFO  14:14:54,066 - #49 nula
INFO  14:14:54,066 - #46 =
INFO  14:14:54,066 - #47 0
INFO  14:14:54,067 - #5 ;
INFO  14:14:54,067 - #12 const
INFO  14:14:54,067 - #49 char
INFO  14:14:54,067 - #49 pet
INFO  14:14:54,067 - #46 =
INFO  14:14:54,067 - #48 5
INFO  14:14:54,067 - #5 ;
INFO  14:14:54,068 - #49 int
INFO  14:14:54,068 - #49 x
INFO  14:14:54,068 - #5 ;
INFO  14:14:54,068 - #49 int
INFO  14:14:54,068 - #49 duz
INFO  14:14:54,068 - #5 ;
INFO  14:14:54,068 - #49 char
INFO  14:14:54,068 - #49 y
INFO  14:14:54,068 - #5 ;
INFO  14:14:54,068 - #49 int
INFO  14:14:54,068 - #49 n
INFO  14:14:54,068 - #11 [
INFO  14:14:54,068 - #10 ]
INFO  14:14:54,068 - #5 ;
INFO  14:14:54,069 - #49 bool
INFO  14:14:54,069 - #49 kek
INFO  14:14:54,069 - #5 ;
INFO  14:14:54,069 - #3 {
INFO  14:14:54,069 - #25 void
INFO  14:14:54,069 - #49 main
INFO  14:14:54,069 - #6 (
INFO  14:14:54,069 - #7 )
INFO  14:14:54,069 - #49 char
INFO  14:14:54,069 - #49 m
INFO  14:14:54,069 - #5 ;
INFO  14:14:54,069 - #49 bool
INFO  14:14:54,070 - #49 t
INFO  14:14:54,070 - #5 ;
INFO  14:14:54,070 - #49 int
INFO  14:14:54,070 - #49 loc
INFO  14:14:54,070 - #5 ;
INFO  14:14:54,070 - #3 {
INFO  14:14:54,070 - #49 n
INFO  14:14:54,070 - #46 =
INFO  14:14:54,070 - #32 new
INFO  14:14:54,070 - #49 int
INFO  14:14:54,071 - #11 [
INFO  14:14:54,071 - #47 66
INFO  14:14:54,071 - #10 ]
INFO  14:14:54,071 - #5 ;
INFO  14:14:54,072 - #49 chr
INFO  14:14:54,072 - #6 (
ERROR 14:14:54,072 - 
Sintaksna greska na liniji 19
INFO  14:14:54,072 - #47 40
INFO  14:14:54,072 - #7 )
INFO  14:14:54,072 - #5 ;
INFO  14:14:54,072 - #9 print
INFO  14:14:54,072 - #6 (
INFO  14:14:54,072 - #49 loc
ERROR 14:14:54,072 - Izvrsen [fali cela dodela vrednosti] oporavak od greske do ; u liniji 1
INFO  14:14:54,073 - #7 )
INFO  14:14:54,073 - #5 ;
INFO  14:14:54,073 - #4 }
INFO  14:14:54,073 - #4 }
INFO  14:14:54,073 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:15:06,511 - Obrada ulaznog fajla test\program.mj
INFO  14:15:06,527 - #2 program
INFO  14:15:06,527 - #49 test301
INFO  14:15:06,527 - #12 const
INFO  14:15:06,528 - #49 int
INFO  14:15:06,528 - #49 nula
INFO  14:15:06,528 - #46 =
INFO  14:15:06,528 - #47 0
INFO  14:15:06,528 - #5 ;
INFO  14:15:06,529 - #12 const
INFO  14:15:06,529 - #49 char
INFO  14:15:06,529 - #49 pet
INFO  14:15:06,529 - #46 =
INFO  14:15:06,529 - #48 5
INFO  14:15:06,529 - #5 ;
INFO  14:15:06,529 - #49 int
INFO  14:15:06,529 - #49 x
INFO  14:15:06,529 - #5 ;
INFO  14:15:06,530 - #49 int
INFO  14:15:06,530 - #49 duz
INFO  14:15:06,530 - #5 ;
INFO  14:15:06,530 - #49 char
INFO  14:15:06,530 - #49 y
INFO  14:15:06,530 - #5 ;
INFO  14:15:06,530 - #49 int
INFO  14:15:06,530 - #49 n
INFO  14:15:06,530 - #11 [
INFO  14:15:06,530 - #10 ]
INFO  14:15:06,530 - #5 ;
INFO  14:15:06,530 - #49 bool
INFO  14:15:06,530 - #49 kek
INFO  14:15:06,530 - #5 ;
INFO  14:15:06,530 - #3 {
INFO  14:15:06,530 - #25 void
INFO  14:15:06,530 - #49 main
INFO  14:15:06,530 - #6 (
INFO  14:15:06,530 - #7 )
INFO  14:15:06,531 - #49 char
INFO  14:15:06,531 - #49 m
INFO  14:15:06,531 - #5 ;
INFO  14:15:06,531 - #49 bool
INFO  14:15:06,531 - #49 t
INFO  14:15:06,531 - #5 ;
INFO  14:15:06,531 - #49 int
INFO  14:15:06,531 - #49 loc
INFO  14:15:06,531 - #5 ;
INFO  14:15:06,531 - #3 {
INFO  14:15:06,531 - #49 n
INFO  14:15:06,532 - #46 =
INFO  14:15:06,532 - #32 new
INFO  14:15:06,532 - #49 int
INFO  14:15:06,532 - #11 [
INFO  14:15:06,532 - #47 66
INFO  14:15:06,532 - #10 ]
INFO  14:15:06,533 - #5 ;
INFO  14:15:06,533 - #49 loc
INFO  14:15:06,533 - #46 =
INFO  14:15:06,533 - #49 x
INFO  14:15:06,533 - #31 +
INFO  14:15:06,533 - #5 ;
ERROR 14:15:06,533 - 
Sintaksna greska na liniji 20
INFO  14:15:06,533 - #9 print
INFO  14:15:06,533 - #6 (
INFO  14:15:06,533 - #49 loc
ERROR 14:15:06,533 - Izvrsen [Dodela vrednosti fali deo expr] oporavak od greske do ; u liniji 20
INFO  14:15:06,534 - #7 )
INFO  14:15:06,534 - #5 ;
INFO  14:15:06,534 - #4 }
INFO  14:15:06,534 - #4 }
INFO  14:15:06,534 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:15:16,205 - Obrada ulaznog fajla test\program.mj
INFO  14:15:16,221 - #2 program
INFO  14:15:16,221 - #49 test301
INFO  14:15:16,221 - #12 const
INFO  14:15:16,222 - #49 int
INFO  14:15:16,222 - #49 nula
INFO  14:15:16,222 - #46 =
INFO  14:15:16,222 - #47 0
INFO  14:15:16,222 - #5 ;
INFO  14:15:16,223 - #12 const
INFO  14:15:16,223 - #49 char
INFO  14:15:16,223 - #49 pet
INFO  14:15:16,223 - #46 =
INFO  14:15:16,223 - #48 5
INFO  14:15:16,223 - #5 ;
INFO  14:15:16,223 - #49 int
INFO  14:15:16,223 - #49 x
INFO  14:15:16,223 - #8 ,
INFO  14:15:16,223 - #5 ;
ERROR 14:15:16,223 - 
Sintaksna greska na liniji 7
INFO  14:15:16,223 - #49 int
INFO  14:15:16,223 - #49 duz
INFO  14:15:16,223 - #5 ;
ERROR 14:15:16,224 - Izvrsen [globalna prom.] oporavak od greske do ,/; u liniji 7
INFO  14:15:16,224 - #49 char
INFO  14:15:16,224 - #49 y
INFO  14:15:16,224 - #5 ;
INFO  14:15:16,224 - #49 int
INFO  14:15:16,224 - #49 n
INFO  14:15:16,224 - #11 [
INFO  14:15:16,224 - #10 ]
INFO  14:15:16,224 - #5 ;
INFO  14:15:16,224 - #49 bool
INFO  14:15:16,225 - #49 kek
INFO  14:15:16,225 - #5 ;
INFO  14:15:16,225 - #3 {
INFO  14:15:16,225 - #25 void
INFO  14:15:16,225 - #49 main
INFO  14:15:16,225 - #6 (
INFO  14:15:16,225 - #7 )
INFO  14:15:16,225 - #49 char
INFO  14:15:16,225 - #49 m
INFO  14:15:16,225 - #5 ;
INFO  14:15:16,225 - #49 bool
INFO  14:15:16,225 - #49 t
INFO  14:15:16,226 - #5 ;
INFO  14:15:16,226 - #49 int
INFO  14:15:16,226 - #49 loc
INFO  14:15:16,226 - #5 ;
INFO  14:15:16,226 - #3 {
INFO  14:15:16,226 - #49 n
INFO  14:15:16,226 - #46 =
INFO  14:15:16,226 - #32 new
INFO  14:15:16,226 - #49 int
INFO  14:15:16,226 - #11 [
INFO  14:15:16,227 - #47 66
INFO  14:15:16,227 - #10 ]
INFO  14:15:16,227 - #5 ;
INFO  14:15:16,227 - #49 loc
INFO  14:15:16,228 - #46 =
INFO  14:15:16,228 - #49 x
INFO  14:15:16,228 - #31 +
INFO  14:15:16,228 - #5 ;
ERROR 14:15:16,228 - 
Sintaksna greska na liniji 20
INFO  14:15:16,228 - #9 print
INFO  14:15:16,228 - #6 (
INFO  14:15:16,228 - #49 loc
ERROR 14:15:16,228 - Izvrsen [Dodela vrednosti fali deo expr] oporavak od greske do ; u liniji 20
INFO  14:15:16,228 - #7 )
INFO  14:15:16,228 - #5 ;
INFO  14:15:16,228 - #4 }
INFO  14:15:16,228 - #4 }
INFO  14:15:16,229 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:15:31,468 - Obrada ulaznog fajla test\program.mj
INFO  14:15:31,484 - #2 program
INFO  14:15:31,484 - #49 test301
INFO  14:15:31,484 - #12 const
INFO  14:15:31,485 - #49 int
INFO  14:15:31,485 - #49 nula
INFO  14:15:31,485 - #46 =
INFO  14:15:31,485 - #47 0
INFO  14:15:31,485 - #5 ;
INFO  14:15:31,486 - #12 const
INFO  14:15:31,486 - #49 char
INFO  14:15:31,486 - #49 pet
INFO  14:15:31,486 - #46 =
INFO  14:15:31,486 - #48 5
INFO  14:15:31,486 - #5 ;
INFO  14:15:31,486 - #49 int
INFO  14:15:31,486 - #49 x
INFO  14:15:31,486 - #8 ,
INFO  14:15:31,486 - #8 ,
ERROR 14:15:31,487 - 
Sintaksna greska na liniji 7
INFO  14:15:31,487 - #8 ,
INFO  14:15:31,487 - #8 ,
INFO  14:15:31,487 - #5 ;
INFO  14:15:31,487 - #49 int
INFO  14:15:31,487 - #49 duz
INFO  14:15:31,487 - #5 ;
ERROR 14:15:31,487 - Izvrsen [globalna prom.] oporavak od greske do ,/; u liniji 7
INFO  14:15:31,487 - #49 char
INFO  14:15:31,488 - #49 y
INFO  14:15:31,488 - #5 ;
INFO  14:15:31,488 - #49 int
INFO  14:15:31,488 - #49 n
INFO  14:15:31,488 - #11 [
INFO  14:15:31,488 - #10 ]
INFO  14:15:31,488 - #5 ;
INFO  14:15:31,488 - #49 bool
INFO  14:15:31,488 - #49 kek
INFO  14:15:31,488 - #5 ;
INFO  14:15:31,488 - #3 {
INFO  14:15:31,488 - #25 void
INFO  14:15:31,488 - #49 main
INFO  14:15:31,488 - #6 (
INFO  14:15:31,488 - #7 )
INFO  14:15:31,488 - #49 char
INFO  14:15:31,489 - #49 m
INFO  14:15:31,489 - #5 ;
INFO  14:15:31,489 - #49 bool
INFO  14:15:31,489 - #49 t
INFO  14:15:31,489 - #5 ;
INFO  14:15:31,489 - #49 int
INFO  14:15:31,489 - #49 loc
INFO  14:15:31,489 - #5 ;
INFO  14:15:31,489 - #3 {
INFO  14:15:31,489 - #49 n
INFO  14:15:31,489 - #46 =
INFO  14:15:31,489 - #32 new
INFO  14:15:31,490 - #49 int
INFO  14:15:31,490 - #11 [
INFO  14:15:31,490 - #47 66
INFO  14:15:31,490 - #10 ]
INFO  14:15:31,491 - #5 ;
INFO  14:15:31,491 - #49 loc
INFO  14:15:31,491 - #46 =
INFO  14:15:31,491 - #49 x
INFO  14:15:31,491 - #31 +
INFO  14:15:31,491 - #5 ;
ERROR 14:15:31,491 - 
Sintaksna greska na liniji 20
INFO  14:15:31,491 - #9 print
INFO  14:15:31,491 - #6 (
INFO  14:15:31,491 - #49 loc
ERROR 14:15:31,491 - Izvrsen [Dodela vrednosti fali deo expr] oporavak od greske do ; u liniji 20
INFO  14:15:31,492 - #7 )
INFO  14:15:31,492 - #5 ;
INFO  14:15:31,492 - #4 }
INFO  14:15:31,492 - #4 }
INFO  14:15:31,492 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:16:17,448 - Obrada ulaznog fajla test\program.mj
INFO  14:16:17,465 - #2 program
INFO  14:16:17,465 - #49 test301
INFO  14:16:17,465 - #12 const
INFO  14:16:17,466 - #49 int
INFO  14:16:17,466 - #49 nula
INFO  14:16:17,466 - #46 =
INFO  14:16:17,466 - #47 0
INFO  14:16:17,466 - #5 ;
INFO  14:16:17,467 - #12 const
INFO  14:16:17,467 - #49 char
INFO  14:16:17,467 - #49 pet
INFO  14:16:17,467 - #46 =
INFO  14:16:17,467 - #48 5
INFO  14:16:17,467 - #5 ;
INFO  14:16:17,467 - #49 int
INFO  14:16:17,467 - #49 x
INFO  14:16:17,467 - #8 ,
INFO  14:16:17,467 - #8 ,
ERROR 14:16:17,467 - 
Sintaksna greska na liniji 7
INFO  14:16:17,467 - #49 mm
INFO  14:16:17,468 - #8 ,
INFO  14:16:17,468 - #8 ,
ERROR 14:16:17,468 - Izvrsen [globalna prom.] oporavak od greske do ,/; u liniji 7
ERROR 14:16:17,468 - 
Sintaksna greska na liniji 7
INFO  14:16:17,468 - #5 ;
INFO  14:16:17,468 - #49 int
INFO  14:16:17,468 - #49 duz
INFO  14:16:17,468 - #5 ;
ERROR 14:16:17,468 - Izvrsen [globalna prom.] oporavak od greske do ,/; u liniji 7
INFO  14:16:17,468 - #49 char
INFO  14:16:17,469 - #49 y
INFO  14:16:17,469 - #5 ;
INFO  14:16:17,469 - #49 int
INFO  14:16:17,469 - #49 n
INFO  14:16:17,469 - #11 [
INFO  14:16:17,469 - #10 ]
INFO  14:16:17,469 - #5 ;
INFO  14:16:17,469 - #49 bool
INFO  14:16:17,469 - #49 kek
INFO  14:16:17,469 - #5 ;
INFO  14:16:17,469 - #3 {
INFO  14:16:17,469 - #25 void
INFO  14:16:17,469 - #49 main
INFO  14:16:17,469 - #6 (
INFO  14:16:17,469 - #7 )
INFO  14:16:17,469 - #49 char
INFO  14:16:17,470 - #49 m
INFO  14:16:17,470 - #5 ;
INFO  14:16:17,470 - #49 bool
INFO  14:16:17,470 - #49 t
INFO  14:16:17,470 - #5 ;
INFO  14:16:17,470 - #49 int
INFO  14:16:17,470 - #49 loc
INFO  14:16:17,470 - #5 ;
INFO  14:16:17,470 - #3 {
INFO  14:16:17,470 - #49 n
INFO  14:16:17,470 - #46 =
INFO  14:16:17,470 - #32 new
INFO  14:16:17,471 - #49 int
INFO  14:16:17,471 - #11 [
INFO  14:16:17,471 - #47 66
INFO  14:16:17,471 - #10 ]
INFO  14:16:17,472 - #5 ;
INFO  14:16:17,472 - #49 loc
INFO  14:16:17,472 - #46 =
INFO  14:16:17,472 - #49 x
INFO  14:16:17,472 - #31 +
INFO  14:16:17,472 - #5 ;
ERROR 14:16:17,472 - 
Sintaksna greska na liniji 20
INFO  14:16:17,472 - #9 print
INFO  14:16:17,472 - #6 (
INFO  14:16:17,472 - #49 loc
ERROR 14:16:17,472 - Izvrsen [Dodela vrednosti fali deo expr] oporavak od greske do ; u liniji 20
INFO  14:16:17,473 - #7 )
INFO  14:16:17,473 - #5 ;
INFO  14:16:17,473 - #4 }
INFO  14:16:17,473 - #4 }
INFO  14:16:17,473 - Ulazni fajl test\program.mj ima sintaksne greske!
INFO  14:53:26,520 - Obrada ulaznog fajla test\program.mj
INFO  14:53:26,537 - #2 program
INFO  14:53:26,537 - #49 test301
INFO  14:53:26,537 - #12 const
INFO  14:53:26,537 - #49 int
INFO  14:53:26,537 - #49 nula
INFO  14:53:26,538 - #46 =
INFO  14:53:26,538 - #47 0
INFO  14:53:26,538 - #5 ;
INFO  14:53:26,538 - #12 const
INFO  14:53:26,538 - #49 char
INFO  14:53:26,538 - #49 pet
INFO  14:53:26,538 - #46 =
INFO  14:53:26,539 - #48 5
INFO  14:53:26,539 - #5 ;
INFO  14:53:26,539 - #49 int
INFO  14:53:26,539 - #49 duz
INFO  14:53:26,539 - #5 ;
INFO  14:53:26,539 - #49 char
INFO  14:53:26,539 - #49 y
INFO  14:53:26,539 - #5 ;
INFO  14:53:26,539 - #49 int
INFO  14:53:26,539 - #49 n
INFO  14:53:26,539 - #11 [
INFO  14:53:26,539 - #10 ]
INFO  14:53:26,539 - #5 ;
INFO  14:53:26,540 - #49 bool
INFO  14:53:26,540 - #49 kek
INFO  14:53:26,540 - #5 ;
INFO  14:53:26,540 - #3 {
INFO  14:53:26,540 - #25 void
INFO  14:53:26,540 - #49 main
INFO  14:53:26,540 - #6 (
INFO  14:53:26,540 - #7 )
INFO  14:53:26,540 - #49 char
INFO  14:53:26,540 - #49 m
INFO  14:53:26,540 - #5 ;
INFO  14:53:26,540 - #49 bool
INFO  14:53:26,541 - #49 t
INFO  14:53:26,541 - #5 ;
INFO  14:53:26,541 - #49 int
INFO  14:53:26,541 - #49 loc
INFO  14:53:26,541 - #5 ;
INFO  14:53:26,541 - #3 {
INFO  14:53:26,541 - #49 loc
INFO  14:53:26,541 - #46 =
INFO  14:53:26,541 - #47 555
INFO  14:53:26,542 - #5 ;
INFO  14:53:26,542 - #49 n
INFO  14:53:26,543 - #46 =
INFO  14:53:26,543 - #32 new
INFO  14:53:26,543 - #49 int
INFO  14:53:26,543 - #11 [
INFO  14:53:26,543 - #47 66
INFO  14:53:26,543 - #10 ]
INFO  14:53:26,543 - #5 ;
INFO  14:53:26,543 - #9 print
INFO  14:53:26,543 - #6 (
INFO  14:53:26,543 - #49 loc
INFO  14:53:26,543 - #7 )
INFO  14:53:26,543 - #5 ;
INFO  14:53:26,543 - #4 }
INFO  14:53:26,543 - #4 }
INFO  14:53:26,544 - =====================SINTAKSNO_STABLO=========================
INFO  14:53:26,544 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               m
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 loc
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorNumconst(
                       555
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               n
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorNewArr(
                      Type(
                       int
                      ) [Type]
                      Expression(
                        Expression1(
                          Term(
                            FactorNumconst(
                             66
                            ) [FactorNumconst]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [Expression]
                    ) [FactorNewArr]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  14:53:26,548 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  14:53:26,548 - Deklarisana konstanta nula na liniji 5
INFO  14:53:26,548 - Deklarisana konstanta pet na liniji 6
INFO  14:53:26,548 - Deklarisana promenljiva duz na liniji 7
INFO  14:53:26,548 - Deklarisana promenljiva y na liniji 8
INFO  14:53:26,548 - Deklarisan niz n na liniji 9
INFO  14:53:26,548 - Deklarisana promenljiva kek na liniji 10
INFO  14:53:26,548 - Obrada metode main bez povratne vrednosti na liniji 12
INFO  14:53:26,548 - Deklarisana promenljiva m na liniji 13
INFO  14:53:26,548 - Deklarisana promenljiva t na liniji 14
INFO  14:53:26,548 - Deklarisana promenljiva loc na liniji 15
INFO  14:53:26,548 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  14:53:26,548 - Kraj semanticke obrade programa test301
INFO  14:53:26,549 - Sintaksna i semanticka analiza uspesno zavrsena!
INFO  14:53:26,549 - ======================GENERISANJE_KODA========================
INFO  14:53:26,551 - Generisanje koda uspesno zavrseno!
INFO  14:53:26,551 - Generisanje izlaznog fajla test\program.obj
INFO  14:53:26,551 - ==============================================================
INFO  14:56:12,920 - Obrada ulaznog fajla test\program.mj
INFO  14:56:12,938 - #2 program
INFO  14:56:12,938 - #49 test301
INFO  14:56:12,938 - #12 const
INFO  14:56:12,938 - #49 int
INFO  14:56:12,938 - #49 nula
INFO  14:56:12,939 - #46 =
INFO  14:56:12,939 - #47 0
INFO  14:56:12,939 - #5 ;
INFO  14:56:12,940 - #12 const
INFO  14:56:12,940 - #49 char
INFO  14:56:12,940 - #49 pet
INFO  14:56:12,940 - #46 =
INFO  14:56:12,940 - #48 5
INFO  14:56:12,940 - #5 ;
INFO  14:56:12,940 - #49 int
INFO  14:56:12,940 - #49 duz
INFO  14:56:12,940 - #5 ;
INFO  14:56:12,941 - #49 char
INFO  14:56:12,941 - #49 y
INFO  14:56:12,941 - #5 ;
INFO  14:56:12,941 - #49 int
INFO  14:56:12,941 - #49 n
INFO  14:56:12,941 - #11 [
INFO  14:56:12,941 - #10 ]
INFO  14:56:12,941 - #5 ;
INFO  14:56:12,941 - #49 bool
INFO  14:56:12,941 - #49 kek
INFO  14:56:12,941 - #5 ;
INFO  14:56:12,941 - #3 {
INFO  14:56:12,941 - #25 void
INFO  14:56:12,941 - #49 main
INFO  14:56:12,941 - #6 (
INFO  14:56:12,941 - #7 )
INFO  14:56:12,942 - #49 char
INFO  14:56:12,942 - #49 y
INFO  14:56:12,942 - #5 ;
INFO  14:56:12,942 - #49 bool
INFO  14:56:12,942 - #49 t
INFO  14:56:12,942 - #5 ;
INFO  14:56:12,942 - #49 int
INFO  14:56:12,942 - #49 loc
INFO  14:56:12,942 - #5 ;
INFO  14:56:12,942 - #3 {
INFO  14:56:12,942 - #49 loc
INFO  14:56:12,942 - #46 =
INFO  14:56:12,943 - #47 555
INFO  14:56:12,943 - #5 ;
INFO  14:56:12,944 - #49 n
INFO  14:56:12,944 - #46 =
INFO  14:56:12,944 - #32 new
INFO  14:56:12,944 - #49 int
INFO  14:56:12,944 - #11 [
INFO  14:56:12,944 - #47 66
INFO  14:56:12,944 - #10 ]
INFO  14:56:12,944 - #5 ;
INFO  14:56:12,944 - #9 print
INFO  14:56:12,944 - #6 (
INFO  14:56:12,944 - #49 loc
INFO  14:56:12,944 - #7 )
INFO  14:56:12,944 - #5 ;
INFO  14:56:12,944 - #4 }
INFO  14:56:12,945 - #4 }
INFO  14:56:12,945 - =====================SINTAKSNO_STABLO=========================
INFO  14:56:12,946 - 
Program(
  ProgName(
   test301
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationListNo(
              ) [DeclarationListNo]
              DeclPartConst(
                ConstDeclaration(
                  Type(
                   int
                  ) [Type]
                  ConstDeclPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDeclPart]
                  ConstTypeNo(
                  ) [ConstTypeNo]
                ) [ConstDeclaration]
              ) [DeclPartConst]
            ) [DeclarationList]
            DeclPartConst(
              ConstDeclaration(
                Type(
                 char
                ) [Type]
                ConstDeclPart(
                 pet
                  CharConst(
                   5
                  ) [CharConst]
                ) [ConstDeclPart]
                ConstTypeNo(
                ) [ConstTypeNo]
              ) [ConstDeclaration]
            ) [DeclPartConst]
          ) [DeclarationList]
          DeclPartVar(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarDeclPartStd(
               duz
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [DeclPartVar]
        ) [DeclarationList]
        DeclPartVar(
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarDeclPartStd(
             y
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [DeclPartVar]
      ) [DeclarationList]
      DeclPartVar(
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartArr(
           n
          ) [VarDeclPartArr]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [DeclPartVar]
    ) [DeclarationList]
    DeclPartVar(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        VarDeclPartStd(
         kek
        ) [VarDeclPartStd]
        VarDeclarationListNone(
        ) [VarDeclarationListNone]
      ) [VarDeclaration]
    ) [DeclPartVar]
  ) [DeclarationList]
  MethodDeclSingle(
    MethodDecl(
      MethodVoidName(
       main
      ) [MethodVoidName]
      NoFormParam(
      ) [NoFormParam]
      VarDeclarationsList(
        VarDeclarationsList(
          VarDeclarationsList(
            VarDeclarationsNo(
            ) [VarDeclarationsNo]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarDeclPartStd(
               y
              ) [VarDeclPartStd]
              VarDeclarationListNone(
              ) [VarDeclarationListNone]
            ) [VarDeclaration]
          ) [VarDeclarationsList]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarDeclPartStd(
             t
            ) [VarDeclPartStd]
            VarDeclarationListNone(
            ) [VarDeclarationListNone]
          ) [VarDeclaration]
        ) [VarDeclarationsList]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclPartStd(
           loc
          ) [VarDeclPartStd]
          VarDeclarationListNone(
          ) [VarDeclarationListNone]
        ) [VarDeclaration]
      ) [VarDeclarationsList]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesignatorStmt(
              Assignment(
                DesignatorStd(
                 loc
                ) [DesignatorStd]
                Assign(
                ) [Assign]
                Expression(
                  Expression1(
                    Term(
                      FactorNumconst(
                       555
                      ) [FactorNumconst]
                      NoMulopFactorList(
                      ) [NoMulopFactorList]
                    ) [Term]
                    NoAddopTermList(
                    ) [NoAddopTermList]
                  ) [Expression1]
                ) [Expression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorStd(
               n
              ) [DesignatorStd]
              Assign(
              ) [Assign]
              Expression(
                Expression1(
                  Term(
                    FactorNewArr(
                      Type(
                       int
                      ) [Type]
                      Expression(
                        Expression1(
                          Term(
                            FactorNumconst(
                             66
                            ) [FactorNumconst]
                            NoMulopFactorList(
                            ) [NoMulopFactorList]
                          ) [Term]
                          NoAddopTermList(
                          ) [NoAddopTermList]
                        ) [Expression1]
                      ) [Expression]
                    ) [FactorNewArr]
                    NoMulopFactorList(
                    ) [NoMulopFactorList]
                  ) [Term]
                  NoAddopTermList(
                  ) [NoAddopTermList]
                ) [Expression1]
              ) [Expression]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        PrintNoNum(
          Expression(
            Expression1(
              Term(
                FactorDesigOne(
                  DesignatorStd(
                   loc
                  ) [DesignatorStd]
                ) [FactorDesigOne]
                NoMulopFactorList(
                ) [NoMulopFactorList]
              ) [Term]
              NoAddopTermList(
              ) [NoAddopTermList]
            ) [Expression1]
          ) [Expression]
        ) [PrintNoNum]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclSingle]
) [Program]
INFO  14:56:12,950 - Pocetak semanticke obrade programa test301 na liniji 3
INFO  14:56:12,950 - Deklarisana konstanta nula na liniji 5
INFO  14:56:12,950 - Deklarisana konstanta pet na liniji 6
INFO  14:56:12,950 - Deklarisana promenljiva duz na liniji 7
INFO  14:56:12,950 - Deklarisana promenljiva y na liniji 8
INFO  14:56:12,950 - Deklarisan niz n na liniji 9
INFO  14:56:12,950 - Deklarisana promenljiva kek na liniji 10
INFO  14:56:12,950 - Obrada metode main bez povratne vrednosti na liniji 12
ERROR 14:56:12,950 - Semanticka greska - ime promenljive y vec postoji na liniji 13
INFO  14:56:12,950 - Deklarisana promenljiva t na liniji 14
INFO  14:56:12,950 - Deklarisana promenljiva loc na liniji 15
INFO  14:56:12,950 - Zavrsetak obrade metode (funkcije) main na liniji 12
INFO  14:56:12,950 - Kraj semanticke obrade programa test301
ERROR 14:56:12,951 - Ulazni fajl test\program.mj ima semanticke greske!
