// Test301
//ovde sve pokvari sto  mozes
program semantikaneispr

	const int nula = 0;
	const int jedan = 1;
	const int pet = 5;
	int niz[];
	abc prom; //tip mora oznacavati tip podataka
	char nizch[];
	bool nizb[];
{
	void maini()	//nema metode main
		int bodovi;
		int leng;
		int leng; //Ime vise puta deklarisano unutar opsega
		int vrednostInt;
		char vrednostChar;
		char nen[];
		bool bt; //nekompatibilna dodela vrednosti
	{
		bodovi = 0;
		hej=3; //Nije deklarisano pre koriscenja
		bodovi++;
		bodovi = bodovi + jedan;
		bodovi = bodovi * pet;
		bodovi--;
		bt = 1; //nekompatibilna dodela vrednosti
		print(nizch); //tip mora biti bool,char,int 
		
		nizb = new bool[5];
		leng = -nizch; //tip mora biti int
		leng = len(nizb);
		nizb[0] = true;
		nizb[1] = false;
		print(nizb[0]);
		print(leng);
			
		
		niz = new int[3];
		niz[nula] = jedan;
		niz[1] = 2;
		niz[niz[jedan]] = niz[niz[0]] * 3;
		bodovi = niz[2]/niz[0];
		print(bodovi); 
		print(niz[2]);
		
		vrednostInt = ord(54); //tip parametra mora biti char
		vrednostChar = chr('a');//tip parametra mora biti int
		leng = len(54); ////tip parametra mora biti niz
		
		nizch = new char['a']; //izraz mora biti tipa int
		nizch[0] = 'a';
		nizch[jedan] = 'b';
		nizch[pet - 3] = 'c';
		print(nizch[1]);
		print(nizch[jedan * 2]);
		
		bodovi = bodovi + (pet * jedan - 1) * bodovi - (3 % 2 + 3 * 2 - 3); 
		print(bodovi);
		print(vrednostInt);
		print(-vrednostInt);
		print(vrednostChar,20);
			
		bt = true;
		leng = 5*'a'; //moraju biti tipa int
		print(bt,10);
		print(bt ? nizch : bodovi + 10); //drugi i treci izraz moraju biti istog tipa
		print(false ? bodovi + 20 : bodovi + 30);
		return;
	}
	
	void druganeka(){
		
	}
	
	int trecaneka(){
		return 1;
	}
	
	char cetvrta(char a){
		//nema return iskaza, a nije void
	}
	
	bool peta(int a, char b, bool c){
		return c;
	}
}


